;*************************************************************************************************************************
;*************************************************************************************************************************
;*******************                                                                                  ********************
;*******************                      PROGRAMMABLE DEVELOPMENT ENVIRONMENT                        ********************
;*******************----------------------------------------------------------------------------------********************
;*******************                              PROGRAMMING EXAMPLES                                ********************
;*******************----------------------------------------------------------------------------------********************
;*******************               BASIC LINUX/WINDOWS DESIGN VERIFICATION PROJECT STRUCTURE          ********************
;*******************----------------------------------------------------------------------------------********************
;*******************                               SOFWARE PARTS FILE                                 ********************
;*******************                                                                                  ********************
;*************************************************************************************************************************
;*************************************************************************************************************************
;
;
;*************************************************************************************************************************
;*************************************************************************************************************************
;****                                                                                                                 ****
;**** _EXAMPLE_HEADER.                                                                                                ****
;****-----------------------------------------------------------------------------------------------------------------****
;****  This software part writes the header statements. It is accessed exclusively from the source                    ****
;****                                                                                                                 ****
;*************************************************************************************************************************
;*************************************************************************************************************************
_PUBLIC  				    :	_EXAMPLE_HEADER, 0.
;*************************************************************************************************************************
;*************************************************************************************************************************
;**** The Global User stack is used to force compliance with the proper sequence of occurrance                        ****
;****-----------------------------------------------------------------------------------------------------------------****
;**** The Global User stack is first loaded with HEADER_READY,                                                        ****
;*************************************************************************************************************************
_PUSH_TOKEN         : HEADER_READY. 
;*************************************************************************************************************************
;**** Write the include statements                                                                                    ****
;*************************************************************************************************************************
_CPP                : '#include "stdlib.h"'.
_CPP                : '#include "stdio.h"'.
;*************************************************************************************************************************
;*************************************************************************************************************************
_END.
;
;
;*************************************************************************************************************************
;*************************************************************************************************************************
;****                                                                                                                 ****
;**** _EXAMPLE_MAIN_BEGIN.                                                                                            ****
;****-----------------------------------------------------------------------------------------------------------------****
;****  This software part writes the main program beginning statements. It is accessed exclusively from the source    ****
;****                                                                                                                 ****
;*************************************************************************************************************************
;*************************************************************************************************************************
_PUBLIC  				    :	_EXAMPLE_MAIN_BEGIN, 0.
;*************************************************************************************************************************
;*************************************************************************************************************************
;**** The Global User stack is used to force compliance with the proper sequence of occurrance                        ****
;****-----------------------------------------------------------------------------------------------------------------****
;**** If the current stack contains HEADER_READY, MAIN_BEGIN will be pushed into the stack,                           ****
;*************************************************************************************************************************
_RULE_START         .
_MOVE               :   HEADER_READY,   MAIN_BEGIN.        
_RULE_END           .
;*************************************************************************************************************************
;**** Write the main procedure statements                                                                             ****
;*************************************************************************************************************************
_CPP                : 'int main(void)'.
_CPP                : '{'.
;*************************************************************************************************************************
;**** The Global User stack is used to force compliance with the proper sequence of occurrance                        ****
;****-----------------------------------------------------------------------------------------------------------------****
;**** If the current stack contains HEADER_READY and MAIN_BEGIN, these two entries will be replaced by MAIN_READY,    ****
;*************************************************************************************************************************
_RULE_START         .
_EMIT               :   MAIN_READY,       HEADER_READY,   MAIN_BEGIN.        
_RULE_END           .
;*************************************************************************************************************************
;*************************************************************************************************************************
_END.
;
;
;*************************************************************************************************************************
;*************************************************************************************************************************
;****                                                                                                                 ****
;**** _EXAMPLE_DISPLAY_HELLO.                                                                                         ****
;****-----------------------------------------------------------------------------------------------------------------****
;****  This software part writes the display "hello world" statements. It is accessed exclusively from the source     ****
;****-----------------------------------------------------------------------------------------------------------------****
;****  The reverse slash is a special character which is processed twice                                              ****
;****                                                                                                                 ****
;*************************************************************************************************************************
;*************************************************************************************************************************
_PUBLIC  				    :	_EXAMPLE_DISPLAY_HELLO, 0.
;*************************************************************************************************************************
;**** The Global User stack is used to force compliance with the proper sequence of occurrance                        ****
;****-----------------------------------------------------------------------------------------------------------------****
;**** If the current stack contains MAIN_READY,    DISPLAY will be pushed into the stack,                             ****
;**** If the current stack contains DISPLAY_READY, DISPLAY will be pushed into the stack,                             ****
;****-----------------------------------------------------------------------------------------------------------------****
;**** At least one display statement must be written.                                                                 ****
;*************************************************************************************************************************
_RULE_START         .
_MOVE               :   MAIN_READY,       DISPLAY.        
_MOVE               :   DISPLAY_READY,    DISPLAY.        
_RULE_END           .
;*************************************************************************************************************************
;**** Write the display statement                                                                                     ****
;*************************************************************************************************************************
_CPP                : '  printf("Hello World \\\\n");'.
;*************************************************************************************************************************
;**** The Global User stack is used to force compliance with the proper sequence of occurrance                        ****
;****-----------------------------------------------------------------------------------------------------------------****
;**** If the current stack contains MAIN_READY    and DISPLAY, these two entries will be replaced by DISPLAY_READY,   ****
;**** If the current stack contains DISPLAY_READY and DISPLAY, these two entries will be replaced by DISPLAY_READY,   ****
;*************************************************************************************************************************
_RULE_START         .
_EMIT               :   DISPLAY_READY,    MAIN_READY,       DISPLAY.        
_EMIT               :   DISPLAY_READY,    DISPLAY_READY,    DISPLAY.        
_RULE_END           .
;*************************************************************************************************************************
;*************************************************************************************************************************
_END.
;
;
;*************************************************************************************************************************
;*************************************************************************************************************************
;****                                                                                                                 ****
;**** _EXAMPLE_MAIN_END.                                                                                              ****
;****-----------------------------------------------------------------------------------------------------------------****
;****  This software part writes the main program final statements. It is accessed exclusively from the source        ****
;****                                                                                                                 ****
;*************************************************************************************************************************
;*************************************************************************************************************************
_PUBLIC  				    :	_EXAMPLE_MAIN_END, 0.
;*************************************************************************************************************************
;*************************************************************************************************************************
;**** The Global User stack is used to force compliance with the proper sequence of occurrance                        ****
;****-----------------------------------------------------------------------------------------------------------------****
;**** If the current stack contains DISPLAY_READY, will be popped out of the stack.                                   ****
;**** The stack must be empty at the end of the source generation process.                                            ****
;*************************************************************************************************************************
_POP_TOKEN          : DISPLAY_READY. 
;*************************************************************************************************************************
;**** Write the last statements                                                                                       ****
;*************************************************************************************************************************
_CPP                : '  return(0);'.
_CPP                : '}'.
;*************************************************************************************************************************
;*************************************************************************************************************************
_END.
;
;
;*************************************************************************************************************************
;*************************************************************************************************************************
;****                                                                                                                 ****
;**** _CPP:     Line.                                                                                                 ****
;****-----------------------------------------------------------------------------------------------------------------****
;****  This software part writes a line of sourec. It is accessed exclusively from the other parts in this library    ****
;****-----------------------------------------------------------------------------------------------------------------****
;****  Output file number 0 is the first output file in the source sub-task                                           ****
;****                                                                                                                 ****
;*************************************************************************************************************************
;*************************************************************************************************************************
_PRIVATE				    :	_CPP, 1.
;*************************************************************************************************************************
;*************************************************************************************************************************
_WRITE_OUT  				:	'0',					    '$1'.
;*************************************************************************************************************************
;*************************************************************************************************************************
_END.
;
;
!



