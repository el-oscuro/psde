//*****************************************************************************           //13-06-15|0x001b
//*****************************************************************************           //13-06-15|0x001b
//                                                                                        //13-06-15|0x001b
// PRECEDENCE ANALYSIS PRIME NUMBER RESOURCE                                              //13-06-15|0x001b
//                                                                                        //13-06-15|0x001b
//*****************************************************************************           //13-06-15|0x001b
//*****************************************************************************           //13-06-15|0x001b
//  Copyright: 2006 Robert H. Adams                                                       //13-06-15|0x001b
//*****************************************************************************           //13-06-15|0x001b
//  The purpose of this program as well as instructions regarding its use is              //13-06-15|0x001b
//  defined in the associated manual.                                                     //13-06-15|0x001b
//*****************************************************************************           //13-06-15|0x001b
//  This program is free software; you can redistribute it and/or modify                  //13-06-15|0x001b
//  it under the terms of the GNU General Public License as published by                  //13-06-15|0x001b
//  the Free Software Foundation; either version 2 of the License, or                     //13-06-15|0x001b
//  (at your option) any later version.                                                   //13-06-15|0x001b
//                                                                                        //13-06-15|0x001b
//  This program is distributed in the hope that it will be useful,                       //13-06-15|0x001b
//  but WITHOUT ANY WARRANTY; without even the implied warranty of                        //13-06-15|0x001b
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                         //13-06-15|0x001b
//  GNU General Public License for more details.                                          //13-06-15|0x001b
//                                                                                        //13-06-15|0x001b
//  You should have received a copy of the GNU General Public License                     //13-06-15|0x001b
//  along with this program; if not, write to the Free Software                           //13-06-15|0x001b
//  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA., 02110-1301            //13-06-15|0x001b
//  USA                                                                                   //13-06-15|0x001b
//*****************************************************************************           //13-06-15|0x001b
//  For further information, please contact Robert Adams:                                 //13-06-15|0x001b
//     EMail:    robert.adams@whatifwe.com                                                //13-06-15|0x001b
//     Mail:     PO Box 156, Sun Valley, Ca. 91353-0155, USA                              //13-06-15|0x001b
//  Or visit the website, "www.whatifwe.com".                                             //13-06-15|0x001b
//*****************************************************************************           //13-06-15|0x001b
//*****************************************************************************           //13-06-15|0x001b
#ifdef WIN31_SYSTEM                                                                       //05-24-97|0x001e
#include "precwn31.h"                                                                     //05-24-97|0x001e
#endif                                                                                    //05-24-97|0x001e
#ifdef WIN95_SYSTEM                                                                       //05-24-97|0x001e
#include "precwn95.h"                                                                     //05-24-97|0x001e
#endif                                                                                    //05-24-97|0x001e
#ifdef MSDOS_SYSTEM                                                                       //05-24-97|0x001e
#include "precdos.h"                                                                      //05-24-97|0x001e
#endif                                                                                    //05-24-97|0x001e
#include "prechost.h"                                                                     //05-24-97|0x001e
#include "prime.h"                                                                        //13-06-15|0x001e
#include "prime.hxx"                                                                      //13-06-15|0x001e
#include "prime.hpp"                                                                      //13-06-15|0x001e
#include "guicomm.h"                                                                      //13-06-15|0x0021
#include "precdiag.h"                                                                     //13-06-15|0x0022
PRIME prime_resource;                                                                     //13-06-15|0x0034
//***************************************************************************             //check   |0x003d
//***************************************************************************             //check   |0x003e
//******                                                               ******             //check   |0x003f
//******  prime_get                                                    ******             //check   |0x0040
//******                                                               ******             //check   |0x0041
//***************************************************************************             //check   |0x0042
//***************************************************************************             //check   |0x0043
//*******************************************************************************         //10-29-97|0x0045
//*******************************************************************************         //10-29-97|0x0045
// prime_get                                                                              //check   |0x0045
//*******************************************************************************         //10-29-97|0x0045
//*******************************************************************************         //10-29-97|0x0045
UINT PRIME::prime_get(                                                                    //check   |0x0045
    UINT_FAR OutputAddr,                                                                  //check   |0x0045
    UINT Index                                                                            //check   |0x0045
    ) {                                                                                   //check   |0x0045
//*******************************************************************************         //10-29-97|0x0045
//***************************************************************************             //check   |0x0047
//***************************************************************************             //check   |0x0048
  if(Index >= 4096)                     ReturnFinish("Illegal Prime Number");             //check   |0x0049
  if(prime_no[Index] == 0)                                  ReturnSystemError             //check   |0x004a
  *OutputAddr = prime_no[Index];                                                          //check   |0x004b
  return(Success);                                                                        //check   |0x004c
}                                                                                         //check   |0x004d
//                                                                                        //05-24-97|0x004d
//***************************************************************************             //13-06-15|0x0050
//***************************************************************************             //13-06-15|0x0051
//******                                                               ******             //13-06-15|0x0052
//******  prime_create                                                 ******             //13-06-15|0x0053
//******                                                               ******             //13-06-15|0x0054
//***************************************************************************             //13-06-15|0x0055
//***************************************************************************             //13-06-15|0x0056
//*******************************************************************************         //10-29-97|0x0057
//*******************************************************************************         //10-29-97|0x0057
// prime_create                                                                           //13-06-15|0x0057
//*******************************************************************************         //10-29-97|0x0057
//*******************************************************************************         //10-29-97|0x0057
UINT PRIME::prime_create(void) {                                                          //13-06-15|0x0057
//*******************************************************************************         //10-29-97|0x0057
//***************************************************************************             //13-06-15|0x0059
//***************************************************************************             //13-06-15|0x005a
  UINT index;                                                                        //13-06-15|0x005b
  UINT test_value;                                                                   //13-06-15|0x005c
  UINT status;                                                                       //13-06-15|0x005d
//***************************************************************************             //13-06-15|0x005e
//***************************************************************************             //13-06-15|0x005f
  prime_no[0]   = 2;                                                                      //13-06-15|0x0060
  prime_no[1]   = 3;                                                                      //13-06-15|0x0061
  test_value    = 3;                                                                      //13-06-15|0x0062
//***************************************************************************             //13-06-15|0x0063
  for(index=2; index<4096; ++index)                                                       //13-06-15|0x0064
    {                                                                                     //13-06-15|0x0065
//---------------------------------------------------------------------------             //13-06-15|0x0066
      status = No;                                                                        //13-06-15|0x0067
      while(status != Yes)                                                                //13-06-15|0x0068
        {                                                                                 //13-06-15|0x0069
          test_value   += 2;                                                              //13-06-15|0x006a
          status = prime_test(test_value, index);                                         //13-06-15|0x006b
          if(status == SystemError)                         ReturnSystemError             //13-06-15|0x006c
          }                                                                               //13-06-15|0x006d
//---------------------------------------------------------------------------             //13-06-15|0x006e
      if(prime_no[index] != 0)                              ReturnSystemError             //13-06-15|0x006f
      prime_no[index] = test_value;                                                       //13-06-15|0x0070
      }                                                                                   //13-06-15|0x0071
  return(Success);                                                                        //13-06-15|0x0072
}                                                                                         //13-06-15|0x0073
//                                                                                        //05-24-97|0x0073
//***************************************************************************             //13-06-15|0x0076
//***************************************************************************             //13-06-15|0x0077
//******                                                               ******             //13-06-15|0x0078
//******  prime_test                                                   ******             //13-06-15|0x0079
//******                                                               ******             //13-06-15|0x007a
//***************************************************************************             //13-06-15|0x007b
//***************************************************************************             //13-06-15|0x007c
//*******************************************************************************         //10-29-97|0x007e
//*******************************************************************************         //10-29-97|0x007e
// prime_test                                                                             //13-06-15|0x007e
//*******************************************************************************         //10-29-97|0x007e
//*******************************************************************************         //10-29-97|0x007e
UINT PRIME::prime_test(                                                                   //13-06-15|0x007e
    UINT TestNumber,                                                                      //13-06-15|0x007e
    UINT CurrentPos                                                                       //13-06-15|0x007e
    ) {                                                                                   //13-06-15|0x007e
//*******************************************************************************         //10-29-97|0x007e
//***************************************************************************             //13-06-15|0x007f
//***************************************************************************             //13-06-15|0x0080
  UINT index;                                                                        //13-06-15|0x0081
  UINT test_number;                                                                  //13-06-15|0x0082
  UINT work;                                                                         //13-06-15|0x0083
  UINT test_square;                                                                  //13-06-15|0x0084
//***************************************************************************             //13-06-15|0x0085
//***************************************************************************             //13-06-15|0x0086
  for(index=1;  index<CurrentPos;  ++index)                                               //13-06-15|0x0087
    {                                                                                     //13-06-15|0x0088
      test_number =   prime_no[index];                                                    //13-06-15|0x0089
      if(test_number == 0)                                  ReturnSystemError             //13-06-15|0x008a
//---------------------------------------------------------------------------             //13-06-15|0x008b
      work =   TestNumber;                                                                //13-06-15|0x008c
      work /=  test_number;                                                               //13-06-15|0x008d
      work *=  test_number;                                                               //13-06-15|0x008e
//---------------------------------------------------------------------------             //13-06-15|0x008f
      if(work == TestNumber)                                    return(No);               //13-06-15|0x0090
      test_square  =  test_number * test_number;                                          //13-06-15|0x0091
      if(test_square >= TestNumber)                            return(Yes);               //13-06-15|0x0092
      }                                                                                   //13-06-15|0x0093
  ReturnSystemError                                                                       //13-06-15|0x0094
}                                                                                         //13-06-15|0x0095
//                                                                                        //05-24-97|0x0095
//***************************************************************************             //13-06-15|0x0098
//***************************************************************************             //13-06-15|0x0099
//******                                                               ******             //13-06-15|0x009a
//******                        constructor                            ******             //13-06-15|0x009b
//******                                                               ******             //13-06-15|0x009c
//***************************************************************************             //13-06-15|0x009d
//***************************************************************************             //13-06-15|0x009e
//*******************************************************************************         //10-29-97|0x009f
//*******************************************************************************         //10-29-97|0x009f
// CONSTRUCTOR                                                                            //13-06-15|0x009f
//*******************************************************************************         //10-29-97|0x009f
//*******************************************************************************         //10-29-97|0x009f
PRIME::PRIME() {                                                                          //13-06-15|0x009f
//***************************************************************************             //13-06-15|0x00a0
//***************************************************************************             //13-06-15|0x00a1
  UINT index;                                                                        //13-06-15|0x00a2
//***************************************************************************             //13-06-15|0x00a3
//***************************************************************************             //13-06-15|0x00a4
  for(index=0; index<4096; ++index)                                                       //13-06-15|0x00a5
    {                                                                                     //13-06-15|0x00a6
      prime_no[index] = 0;                                                                //13-06-15|0x00a7
      }                                                                                   //13-06-15|0x00a8
//***************************************************************************             //13-06-15|0x00a9
}                                                                                         //13-06-15|0x00aa
//                                                                                        //05-24-97|0x00aa
//*******************************************************************************         //05-24-97|0x00ac
//*******************************************************************************         //05-24-97|0x00ac
//****                       END OF FILE                                     ****         //05-24-97|0x00ac
//*******************************************************************************         //05-24-97|0x00ac
//*******************************************************************************         //05-24-97|0x00ac
