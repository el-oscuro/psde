//*****************************************************************************           //07-06-29|0x001e
//*****************************************************************************           //07-06-29|0x001e
//                                                                                        //07-06-29|0x001e
// PRECEDENCE CALL STACK UTILITIES                                                        //07-06-29|0x001e
//                                                                                        //07-06-29|0x001e
//*****************************************************************************           //07-06-29|0x001e
//*****************************************************************************           //07-06-29|0x001e
//  Copyright: 2006 Robert H. Adams                                                       //07-06-29|0x001e
//*****************************************************************************           //07-06-29|0x001e
//  The purpose of this program as well as instructions regarding its use is              //07-06-29|0x001e
//  defined in the associated manual.                                                     //07-06-29|0x001e
//*****************************************************************************           //07-06-29|0x001e
//  This program is free software; you can redistribute it and/or modify                  //07-06-29|0x001e
//  it under the terms of the GNU General Public License as published by                  //07-06-29|0x001e
//  the Free Software Foundation; either version 2 of the License, or                     //07-06-29|0x001e
//  (at your option) any later version.                                                   //07-06-29|0x001e
//                                                                                        //07-06-29|0x001e
//  This program is distributed in the hope that it will be useful,                       //07-06-29|0x001e
//  but WITHOUT ANY WARRANTY; without even the implied warranty of                        //07-06-29|0x001e
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                         //07-06-29|0x001e
//  GNU General Public License for more details.                                          //07-06-29|0x001e
//                                                                                        //07-06-29|0x001e
//  You should have received a copy of the GNU General Public License                     //07-06-29|0x001e
//  along with this program; if not, write to the Free Software                           //07-06-29|0x001e
//  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA., 02110-1301            //07-06-29|0x001e
//  USA                                                                                   //07-06-29|0x001e
//*****************************************************************************           //07-06-29|0x001e
//  For further information, please contact Robert Adams:                                 //07-06-29|0x001e
//     EMail:    robert.adams@whatifwe.com                                                //07-06-29|0x001e
//     Mail:     PO Box 156, Sun Valley, Ca. 91353-0155, USA                              //07-06-29|0x001e
//  Or visit the website, "www.whatifwe.com".                                             //07-06-29|0x001e
//*****************************************************************************           //07-06-29|0x001e
//*****************************************************************************           //07-06-29|0x001e
#ifdef WIN31_SYSTEM                                                                       //05-24-97|0x0026
#include "precwn31.h"                                                                     //05-24-97|0x0026
#endif                                                                                    //05-24-97|0x0026
#ifdef WIN95_SYSTEM                                                                       //05-24-97|0x0026
#include "precwn95.h"                                                                     //05-24-97|0x0026
#endif                                                                                    //05-24-97|0x0026
#ifdef MSDOS_SYSTEM                                                                       //05-24-97|0x0026
#include "precdos.h"                                                                      //05-24-97|0x0026
#endif                                                                                    //05-24-97|0x0026
#include "prechost.h"                                                                     //05-24-97|0x0026
#include "preccallutil.h"                                                                 //07-06-29|0x0026
#include "preccallutil.hxx"                                                               //07-06-29|0x0026
#include "preccallutil.hpp"                                                               //07-06-29|0x0026
#define Allocate(k) (k##_FAR) calloc(1,sizeof(k))                                         //07-06-29|0x002e
#define Free(k) free(k)                                                                   //07-06-29|0x002e
#define MemSet(i,j,k) memset(i,j,k)                                                       //07-06-29|0x002e
#define MemCCpy(i,j,k,l) Mem_C_Copy((UCHAR_FAR) i, (UCHAR_FAR) j,k,l)                     //07-06-29|0x002e
#define MemCpy(i,j,k) memcpy(i,j,k)                                                       //07-06-29|0x002e
#define LineEnd 0x0d                                                                      //07-06-29|0x002e
#define StrLen(i) strlen(i)                                                               //07-06-29|0x002f
#define StrCat(i,j) strcat(i,j)                                                           //07-06-29|0x002f
#define StrCpy(i,j) strcpy(i,j)                                                           //07-06-29|0x002f
#define StrCmp(i,j) Str_Comp((SCHAR_FAR)i,j,256)                                          //07-06-29|0x002f
#define StrRChr(i,j) strrchr(i,j)                                                         //07-06-29|0x002f
#define StrChr(i,j) strchr(i,j)                                                           //07-06-29|0x002f
#define StrToByteInt(i,j) GetInteger(i,&j,0xff)                                           //07-06-29|0x002f
#define StrToInt(i,j) GetInteger(i,&j,0xffff)                                             //07-06-29|0x002f
#define StrToLongInt(i,j) GetInteger(i,&j,0xffffffffL)                                    //07-06-29|0x002f
#define StrToByteHex(i,j) GetHex(i,&j,1)                                                  //07-06-29|0x002f
#define StrToHex(i,j) GetHex(i,&j,2)                                                      //07-06-29|0x002f
#define StrToLongHex(i,j) GetHex(i,&j,4)                                                  //07-06-29|0x002f
#define FindName(i) strrchr(i, '/')                                                       //07-06-29|0x002f
PRECCALL_UTIL preccall_util;                                                              //07-06-29|0x0050
static UINT test_samples[TestIndex];                                                      //07-06-29|0x0061
//***************************************************************************             //07-06-29|0x006a
//***************************************************************************             //07-06-29|0x006b
//******                                                               ******             //07-06-29|0x006c
//******                           call_util_construct                 ******             //07-06-29|0x006d
//******                                                               ******             //07-06-29|0x006e
//***************************************************************************             //07-06-29|0x006f
//***************************************************************************             //07-06-29|0x0070
//*******************************************************************************         //10-29-97|0x0077
//*******************************************************************************         //10-29-97|0x0077
// call_util_construct                                                                    //07-06-29|0x0077
//*******************************************************************************         //10-29-97|0x0077
//*******************************************************************************         //10-29-97|0x0077
UINT PRECCALL_UTIL::call_util_construct(                                                  //07-06-29|0x0077
    CALL_DATA_FAR CallDataAddr                                                            //07-06-29|0x0077
    ) {                                                                                   //07-06-29|0x0077
//*******************************************************************************         //10-29-97|0x0077
//***************************************************************************             //07-06-29|0x007c
//***************************************************************************             //07-06-29|0x007d
    if(call_data_addr                  != 0)                ReturnSystemError             //07-06-29|0x007e
    if((call_data_addr = CallDataAddr) == 0)                ReturnSystemError             //07-06-29|0x007f
//***************************************************************************             //07-06-29|0x0080
    return_test(call_util_construct_1);                                                   //07-06-29|0x0081
}                                                                                         //07-06-29|0x0082
//                                                                                        //05-24-97|0x0082
//***************************************************************************             //07-06-29|0x0085
//***************************************************************************             //07-06-29|0x0086
//******                                                               ******             //07-06-29|0x0087
//******                          callutil_create_file                 ******             //07-06-29|0x0088
//******                                                               ******             //07-06-29|0x0089
//***************************************************************************             //07-06-29|0x008a
//***************************************************************************             //07-06-29|0x008b
//*******************************************************************************         //10-29-97|0x0092
//*******************************************************************************         //10-29-97|0x0092
// callutil_create_file                                                                   //07-06-29|0x0092
//*******************************************************************************         //10-29-97|0x0092
//*******************************************************************************         //10-29-97|0x0092
UINT PRECCALL_UTIL::callutil_create_file(                                                 //07-06-29|0x0092
    TOKENS_FAR Tokens                                                                     //07-06-29|0x0092
    ) {                                                                                   //07-06-29|0x0092
//*******************************************************************************         //10-29-97|0x0092
//***************************************************************************             //07-06-29|0x0097
//***************************************************************************             //07-06-29|0x0098
    if(call_data_addr == 0)                                 ReturnSystemError             //07-06-29|0x0099
//***************************************************************************             //07-06-29|0x009a
    switch(CallFileInitial)                                      _SwitchGroup             //07-06-29|0x009b
    switch(CallFileName)                                         _SwitchGroup             //07-06-29|0x009c
    switch(CallFileCreate)                                                                //check   |0x009d
      {                                                                                   //check   |0x009e
        case Success:                                            break;                   //check   |0x009f
        case UserError: ReturnFinish("Project File Folder Error");                        //check   |0x00a0
        default:                                            ReturnSystemError             //check   |0x00a1
        }                                                                                 //check   |0x00a2
    switch(CallFileRelease)                                      _SwitchGroup             //07-06-29|0x00a3
//***************************************************************************             //07-06-29|0x00a4
    CallPosition     = 0;                                                                 //07-06-29|0x00a5
//***************************************************************************             //07-06-29|0x00a6
    return_test(callutil_create_file_1);                                                  //07-06-29|0x00a7
}                                                                                         //07-06-29|0x00a8
//                                                                                        //05-24-97|0x00a8
//***************************************************************************             //07-06-29|0x00ab
//***************************************************************************             //07-06-29|0x00ac
//******                                                               ******             //07-06-29|0x00ad
//******                         callutil_write_file                   ******             //07-06-29|0x00ae
//******                                                               ******             //07-06-29|0x00af
//***************************************************************************             //07-06-29|0x00b0
//***************************************************************************             //07-06-29|0x00b1
//*******************************************************************************         //10-29-97|0x00b8
//*******************************************************************************         //10-29-97|0x00b8
// callutil_write_file                                                                    //07-06-29|0x00b8
//*******************************************************************************         //10-29-97|0x00b8
//*******************************************************************************         //10-29-97|0x00b8
UINT PRECCALL_UTIL::callutil_write_file(                                                  //07-06-29|0x00b8
    UINT BufferNo                                                                         //07-06-29|0x00b8
    ) {                                                                                   //07-06-29|0x00b8
//*******************************************************************************         //10-29-97|0x00b8
//***************************************************************************             //07-06-29|0x00bd
//***************************************************************************             //07-06-29|0x00be
    if(call_data_addr           == 0)                       ReturnSystemError             //07-06-29|0x00bf
//***************************************************************************             //07-06-29|0x00c0
    CallEchoPosition(BufferNo)  =  CallPosition;                                          //07-06-29|0x00c1
//***************************************************************************             //07-06-29|0x00c2
    if(CallFileCommit           != Success)                 ReturnSystemError             //07-06-29|0x00c3
    if(CallFileWrite(BufferNo)  != Success)                 ReturnSystemError             //07-06-29|0x00c4
    if(CallFileRelease          != Success)                 ReturnSystemError             //07-06-29|0x00c5
//***************************************************************************             //07-06-29|0x00c6
    CallPosition               += sizeof(CALL_STACK);                                     //07-06-29|0x00c7
//***************************************************************************             //07-06-29|0x00c8
    return_test(callutil_write_file_1);                                                   //07-06-29|0x00c9
}                                                                                         //07-06-29|0x00ca
//                                                                                        //05-24-97|0x00ca
//***************************************************************************             //check   |0x00cd
//***************************************************************************             //check   |0x00ce
//******                                                               ******             //check   |0x00cf
//******                          callutil_destroy_file                ******             //check   |0x00d0
//******                                                               ******             //check   |0x00d1
//***************************************************************************             //check   |0x00d2
//***************************************************************************             //check   |0x00d3
//*******************************************************************************         //10-29-97|0x00d9
//*******************************************************************************         //10-29-97|0x00d9
// callutil_destroy_file                                                                  //check   |0x00d9
//*******************************************************************************         //10-29-97|0x00d9
//*******************************************************************************         //10-29-97|0x00d9
UINT PRECCALL_UTIL::callutil_destroy_file(void) {                                         //check   |0x00d9
//*******************************************************************************         //10-29-97|0x00d9
//***************************************************************************             //check   |0x00de
//***************************************************************************             //check   |0x00df
    if(call_data_addr == 0)                                 ReturnSystemError             //check   |0x00e0
//***************************************************************************             //check   |0x00e1
    if(CallFileCommit           != Success)                 ReturnSystemError             //check   |0x00e2
    if(CallFileDelete           != Success)                 ReturnSystemError             //check   |0x00e3
    if(CallFileRelease          != Success)                 ReturnSystemError             //check   |0x00e4
//***************************************************************************             //check   |0x00e5
    return_test(callutil_destroy_file_1);                                                 //check   |0x00e6
}                                                                                         //check   |0x00e7
//                                                                                        //05-24-97|0x00e7
//***************************************************************************             //07-06-29|0x00ea
//***************************************************************************             //07-06-29|0x00eb
//******                                                               ******             //07-06-29|0x00ec
//******                          callutil_read_file                   ******             //07-06-29|0x00ed
//******                                                               ******             //07-06-29|0x00ee
//***************************************************************************             //07-06-29|0x00ef
//***************************************************************************             //07-06-29|0x00f0
//*******************************************************************************         //10-29-97|0x00f7
//*******************************************************************************         //10-29-97|0x00f7
// callutil_read_file                                                                     //07-06-29|0x00f7
//*******************************************************************************         //10-29-97|0x00f7
//*******************************************************************************         //10-29-97|0x00f7
UINT PRECCALL_UTIL::callutil_read_file(                                                   //07-06-29|0x00f7
    UINT BufferNo,                                                                        //07-06-29|0x00f7
    SLONG Offset                                                                          //07-06-29|0x00f7
    ) {                                                                                   //07-06-29|0x00f7
//*******************************************************************************         //10-29-97|0x00f7
//***************************************************************************             //07-06-29|0x00fc
//***************************************************************************             //07-06-29|0x00fd
    if(call_data_addr == 0)                                 ReturnSystemError             //07-06-29|0x00fe
    TestSample(read_call_file_1);                                                         //07-06-29|0x00ff
//***************************************************************************             //07-06-29|0x0100
    Offset      -= 1;                                                                     //07-06-29|0x0101
    Offset      *= sizeof(CALL_STACK);                                                    //07-06-29|0x0102
    Offset      += CallPosition;                                                          //07-06-29|0x0103
//---------------------------------------------------------------------------             //07-06-29|0x0104
    if(Offset    < 0)                                       ReturnSystemError             //07-06-29|0x0105
    if(Offset   >= CallPosition)                            ReturnSystemError             //07-06-29|0x0106
//***************************************************************************             //07-06-29|0x0107
    if(CallFileCommit                 != Success)           ReturnSystemError             //07-06-29|0x0108
    if(CallFileRead(BufferNo, Offset) != Success)           ReturnSystemError             //07-06-29|0x0109
    if(CallFileRelease                != Success)           ReturnSystemError             //07-06-29|0x010a
//---------------------------------------------------------------------------             //07-06-29|0x010b
    if(CallEchoPosition(BufferNo)     != Offset)            ReturnSystemError             //07-06-29|0x010c
//***************************************************************************             //07-06-29|0x010d
    return(Success);                                                                      //07-06-29|0x010e
}                                                                                         //07-06-29|0x010f
//                                                                                        //05-24-97|0x010f
//***************************************************************************             //07-06-29|0x0112
//***************************************************************************             //07-06-29|0x0113
//******                                                               ******             //07-06-29|0x0114
//******                      callutil_strcat                          ******             //07-06-29|0x0115
//******                                                               ******             //07-06-29|0x0116
//***************************************************************************             //07-06-29|0x0117
//***************************************************************************             //07-06-29|0x0118
//***************************************************************************             //07-06-29|0x011a
//***************************************************************************             //07-06-29|0x011b
//*******************************************************************************         //10-29-97|0x011f
//*******************************************************************************         //10-29-97|0x011f
// callutil_strcat                                                                        //07-06-29|0x011f
//*******************************************************************************         //10-29-97|0x011f
//*******************************************************************************         //10-29-97|0x011f
UINT PRECCALL_UTIL::callutil_strcat(                                                      //07-06-29|0x011f
    STRING_DATA_FAR Addr,                                                                 //07-06-29|0x011f
    STRING_DATA_FAR Input                                                                 //07-06-29|0x011f
    ) {                                                                                   //07-06-29|0x011f
//*******************************************************************************         //10-29-97|0x011f
//***************************************************************************             //07-06-29|0x0124
//***************************************************************************             //07-06-29|0x0125
  WORDS k;                                                                           //07-06-29|0x0126
  UINT in_length;                                                                    //07-06-29|0x0127
  UINT out_length;                                                                   //07-06-29|0x0128
  UINT new_length;                                                                   //07-06-29|0x0129
//***************************************************************************             //07-06-29|0x012a
//***************************************************************************             //07-06-29|0x012b
    if(call_data_addr == 0)                                 ReturnSystemError             //07-06-29|0x012c
//***************************************************************************             //07-06-29|0x012d
    in_length   = InputLength;                                                            //07-06-29|0x012e
    out_length  = AddrLength;                                                             //07-06-29|0x012f
    new_length  = out_length + in_length;                                                 //07-06-29|0x0130
//***************************************************************************             //07-06-29|0x0131
    if(in_length            == 0)                          ReturnSystemError;             //07-06-29|0x0132
    if(InputChar(in_length) != 0)                          ReturnSystemError;             //07-06-29|0x0133
    if(AddrChar(out_length) != 0)                          ReturnSystemError;             //07-06-29|0x0134
//---------------------------------------------------------------------------             //07-06-29|0x0135
    if(new_length >= 256)          ReturnFinish("Composite String Too Long");             //07-06-29|0x0136
//***************************************************************************             //07-06-29|0x0137
    StrCat(&AddrLine, InputLineAddr);                                                     //07-06-29|0x0138
    AddrLength = new_length;                                                              //07-06-29|0x0139
    if(AddrChar(256)        != 0)                          ReturnSystemError;             //07-06-29|0x013a
//***************************************************************************             //07-06-29|0x013b
    k.ulong = StrLen(&AddrLine);                                                          //07-06-29|0x013c
    if(k.ulong     > 256)                                  ReturnSystemError;             //07-06-29|0x013d
    if(AddrLength != k.word0)                              ReturnSystemError;             //07-06-29|0x013e
    return_test(callutil_strcat_1);                                                       //07-06-29|0x013f
}                                                                                         //07-06-29|0x0140
//                                                                                        //05-24-97|0x0140
//***************************************************************************             //07-06-30|0x0143
//***************************************************************************             //07-06-30|0x0144
//******                                                               ******             //07-06-30|0x0145
//******                      callutil_test_pos                        ******             //07-06-30|0x0146
//******                                                               ******             //07-06-30|0x0147
//***************************************************************************             //07-06-30|0x0148
//***************************************************************************             //07-06-30|0x0149
//***************************************************************************             //07-06-30|0x014c
//***************************************************************************             //07-06-30|0x014d
//*******************************************************************************         //10-29-97|0x0151
//*******************************************************************************         //10-29-97|0x0151
// callutil_test_pos                                                                      //07-06-30|0x0151
//*******************************************************************************         //10-29-97|0x0151
//*******************************************************************************         //10-29-97|0x0151
UINT PRECCALL_UTIL::callutil_test_pos(                                                    //07-06-30|0x0151
    SLONG TestPosition,                                                                   //07-06-30|0x0151
    SLONG Offset,                                                                         //07-06-30|0x0151
    SLONG Position                                                                        //07-06-30|0x0151
    ) {                                                                                   //07-06-30|0x0151
//*******************************************************************************         //10-29-97|0x0151
//***************************************************************************             //07-06-30|0x0156
//***************************************************************************             //07-06-30|0x0157
    if(call_data_addr == 0)                                 ReturnSystemError             //07-06-30|0x0158
//***************************************************************************             //07-06-30|0x0159
    Offset *= sizeof(CALL_STACK);                                                         //07-06-30|0x015a
    Offset += Position;                                                                   //07-06-30|0x015b
//***************************************************************************             //07-06-30|0x015c
    if(TestPosition   <  0)                                 ReturnSystemError             //07-06-30|0x015d
    if(Offset         <  TestPosition)                      ReturnSystemError             //07-06-30|0x015e
//***************************************************************************             //07-06-30|0x015f
    if(Offset == TestPosition)               return_yes(callutil_test_pos_1);             //07-06-30|0x0160
    return_no(callutil_test_pos_1);                                                       //07-06-30|0x0161
}                                                                                         //07-06-30|0x0162
//                                                                                        //05-24-97|0x0162
//***************************************************************************             //07-06-30|0x0165
//***************************************************************************             //07-06-30|0x0166
//******                                                               ******             //07-06-30|0x0167
//******                       TEST WRAPPERS                           ******             //07-06-30|0x0168
//******                                                               ******             //07-06-30|0x0169
//***************************************************************************             //07-06-30|0x016a
//***************************************************************************             //07-06-30|0x016b
//*******************************************************************************         //10-29-97|0x016c
//*******************************************************************************         //10-29-97|0x016c
// callutil_test_reset                                                                    //07-06-30|0x016c
//*******************************************************************************         //10-29-97|0x016c
//*******************************************************************************         //10-29-97|0x016c
UINT PRECCALL_UTIL::callutil_test_reset(void) {                                           //07-06-30|0x016c
//*******************************************************************************         //10-29-97|0x016c
//************************************************************************                //07-06-30|0x016c
    switch(BasicTestReset())                                                              //07-06-30|0x016c
      {                                                                                   //07-06-30|0x016c
        case Success:                                     return(Success);                //07-06-30|0x016c
        default:                                        ReturnSystemError;                //07-06-30|0x016c
        }                                                                                 //07-06-30|0x016c
}                                                                                         //07-06-30|0x016c
//                                                                                        //05-24-97|0x016c
//***************************************************************************             //07-06-30|0x016d
//*******************************************************************************         //10-29-97|0x016e
//*******************************************************************************         //10-29-97|0x016e
// callutil_test_read                                                                     //07-06-30|0x016e
//*******************************************************************************         //10-29-97|0x016e
//*******************************************************************************         //10-29-97|0x016e
UINT PRECCALL_UTIL::callutil_test_read(void) {                                            //07-06-30|0x016e
//*******************************************************************************         //10-29-97|0x016e
//************************************************************************                //07-06-30|0x016e
    switch(BasicTestRead(&test_samples[0], test_samples[0]))                              //07-06-30|0x016e
      {                                                                                   //07-06-30|0x016e
        case Success:                                     return(Success);                //07-06-30|0x016e
        default:                                        ReturnSystemError;                //07-06-30|0x016e
        }                                                                                 //07-06-30|0x016e
}                                                                                         //07-06-30|0x016e
//                                                                                        //05-24-97|0x016e
//***************************************************************************             //07-06-30|0x016f
//*******************************************************************************         //10-29-97|0x0170
//*******************************************************************************         //10-29-97|0x0170
// callutil_test_write                                                                    //07-06-30|0x0170
//*******************************************************************************         //10-29-97|0x0170
//*******************************************************************************         //10-29-97|0x0170
UINT PRECCALL_UTIL::callutil_test_write(void) {                                           //07-06-30|0x0170
//*******************************************************************************         //10-29-97|0x0170
//************************************************************************                //07-06-30|0x0170
    switch(BasicTestWrite(&test_samples[0]))                                              //07-06-30|0x0170
      {                                                                                   //07-06-30|0x0170
        case Success:                                     return(Success);                //07-06-30|0x0170
        default:                                        ReturnSystemError;                //07-06-30|0x0170
        }                                                                                 //07-06-30|0x0170
}                                                                                         //07-06-30|0x0170
//                                                                                        //05-24-97|0x0170
//***************************************************************************             //07-06-30|0x0171
//*******************************************************************************         //10-29-97|0x0172
//*******************************************************************************         //10-29-97|0x0172
// callutil_test_report                                                                   //07-06-30|0x0172
//*******************************************************************************         //10-29-97|0x0172
//*******************************************************************************         //10-29-97|0x0172
UINT PRECCALL_UTIL::callutil_test_report(void) {                                          //07-06-30|0x0172
//*******************************************************************************         //10-29-97|0x0172
//************************************************************************                //07-06-30|0x0172
    switch(BasicTestReport(&test_samples[0], "CALLUTIL"))                                 //07-06-30|0x0172
      {                                                                                   //07-06-30|0x0172
        case Success:                                     return(Success);                //07-06-30|0x0172
        default:                                        ReturnSystemError;                //07-06-30|0x0172
        }                                                                                 //07-06-30|0x0172
}                                                                                         //07-06-30|0x0172
//                                                                                        //05-24-97|0x0172
//***************************************************************************             //07-06-29|0x0173
//***************************************************************************             //07-06-29|0x0174
//******                                                               ******             //07-06-29|0x0175
//******                        constructor                            ******             //07-06-29|0x0176
//******                                                               ******             //07-06-29|0x0177
//***************************************************************************             //07-06-29|0x0178
//***************************************************************************             //07-06-29|0x0179
//*******************************************************************************         //10-29-97|0x017a
//*******************************************************************************         //10-29-97|0x017a
// CONSTRUCTOR                                                                            //07-06-29|0x017a
//*******************************************************************************         //10-29-97|0x017a
//*******************************************************************************         //10-29-97|0x017a
PRECCALL_UTIL::PRECCALL_UTIL() {                                                          //07-06-29|0x017a
//***************************************************************************             //07-06-29|0x017b
//***************************************************************************             //07-06-29|0x017c
    call_data_addr = 0;                                                                   //07-06-29|0x017d
//***************************************************************************             //07-06-29|0x017e
    { ULONG i;                                                                            //07-06-29|0x017f
      test_samples[NoTestSamples] = TestIndex;                                            //07-06-29|0x017f
      i = 1;                                                                              //07-06-29|0x017f
      while(i<TestIndex)                                                                  //07-06-29|0x017f
        {                                                                                 //07-06-29|0x017f
          test_samples[i] = 0;                                                            //07-06-29|0x017f
          ++i;                                                                            //07-06-29|0x017f
          }                                                                               //07-06-29|0x017f
      }                                                                                   //07-06-29|0x017f
}                                                                                         //07-06-29|0x0180
//                                                                                        //05-24-97|0x0180
//*******************************************************************************         //05-24-97|0x0185
//*******************************************************************************         //05-24-97|0x0185
//****                       END OF FILE                                     ****         //05-24-97|0x0185
//*******************************************************************************         //05-24-97|0x0185
//*******************************************************************************         //05-24-97|0x0185
