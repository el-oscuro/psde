//*****************************************************************************           //05-14-97|0x001e
//*****************************************************************************           //05-14-97|0x001e
//                                                                                        //05-14-97|0x001e
// PRECEDENCE SOURCE GENERATOR                                                            //05-14-97|0x001e
//                                                                                        //05-14-97|0x001e
//*****************************************************************************           //05-14-97|0x001e
//*****************************************************************************           //05-14-97|0x001e
//  Copyright: 2006 Robert H. Adams                                                       //05-14-97|0x001e
//*****************************************************************************           //05-14-97|0x001e
//  The purpose of this program as well as instructions regarding its use is              //05-14-97|0x001e
//  defined in the associated manual.                                                     //05-14-97|0x001e
//*****************************************************************************           //05-14-97|0x001e
//  This program is free software; you can redistribute it and/or modify                  //05-14-97|0x001e
//  it under the terms of the GNU General Public License as published by                  //05-14-97|0x001e
//  the Free Software Foundation; either version 2 of the License, or                     //05-14-97|0x001e
//  (at your option) any later version.                                                   //05-14-97|0x001e
//                                                                                        //05-14-97|0x001e
//  This program is distributed in the hope that it will be useful,                       //05-14-97|0x001e
//  but WITHOUT ANY WARRANTY; without even the implied warranty of                        //05-14-97|0x001e
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                         //05-14-97|0x001e
//  GNU General Public License for more details.                                          //05-14-97|0x001e
//                                                                                        //05-14-97|0x001e
//  You should have received a copy of the GNU General Public License                     //05-14-97|0x001e
//  along with this program; if not, write to the Free Software                           //05-14-97|0x001e
//  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA., 02110-1301            //05-14-97|0x001e
//  USA                                                                                   //05-14-97|0x001e
//*****************************************************************************           //05-14-97|0x001e
//  For further information, please contact Robert Adams:                                 //05-14-97|0x001e
//     EMail:    robert.adams@whatifwe.com                                                //05-14-97|0x001e
//     Mail:     PO Box 156, Sun Valley, Ca. 91353-0155, USA                              //05-14-97|0x001e
//  Or visit the website, "www.whatifwe.com".                                             //05-14-97|0x001e
//*****************************************************************************           //05-14-97|0x001e
//*****************************************************************************           //05-14-97|0x001e
#ifdef WIN31_SYSTEM                                                                       //05-24-97|0x001f
#include "precwn31.h"                                                                     //05-24-97|0x001f
#endif                                                                                    //05-24-97|0x001f
#ifdef WIN95_SYSTEM                                                                       //05-24-97|0x001f
#include "precwn95.h"                                                                     //05-24-97|0x001f
#endif                                                                                    //05-24-97|0x001f
#ifdef MSDOS_SYSTEM                                                                       //05-24-97|0x001f
#include "precdos.h"                                                                      //05-24-97|0x001f
#endif                                                                                    //05-24-97|0x001f
#include "prechost.h"                                                                     //05-24-97|0x001f
#include "precsrce.h"                                                                     //05-14-97|0x001f
#include "precsrce.hxx"                                                                   //05-14-97|0x001f
#include "precsrce.hpp"                                                                   //05-14-97|0x001f
#include "errormail.h"                                                                    //07-11-12|0x0020
#include "precdiag.h"                                                                     //06-07-12|0x0021
#include "precfile.h"                                                                     //06-07-12|0x0022
#include "srcedict.h"                                                                     //06-07-12|0x0023
#include "macdict.h"                                                                      //06-07-12|0x0024
#include "precoper.h"                                                                     //06-07-12|0x0025
#include "precdbug.h"                                                                     //06-07-12|0x0026
#include "precstck.h"                                                                     //06-07-12|0x0027
#include "preccall.h"                                                                     //06-07-12|0x0028
#include "precreg.h"                                                                      //06-12-17|0x0029
#include "global.hxx"                                                                     //06-12-17|0x002a
#define Allocate(k) (k##_FAR) calloc(1,sizeof(k))                                         //06-07-12|0x0032
#define Free(k) free(k)                                                                   //06-07-12|0x0032
#define MemSet(i,j,k) memset(i,j,k)                                                       //06-07-12|0x0032
#define MemCCpy(i,j,k,l) Mem_C_Copy((UCHAR_FAR) i, (UCHAR_FAR) j,k,l)                     //06-07-12|0x0032
#define MemCpy(i,j,k) memcpy(i,j,k)                                                       //06-07-12|0x0032
#define LineEnd 0x0d                                                                      //06-07-12|0x0032
#define StrLen(i) strlen(i)                                                               //06-07-12|0x0033
#define StrCat(i,j) strcat(i,j)                                                           //06-07-12|0x0033
#define StrCpy(i,j) strcpy(i,j)                                                           //06-07-12|0x0033
#define StrCmp(i,j) Str_Comp((SCHAR_FAR)i,j,256)                                          //06-07-12|0x0033
#define StrRChr(i,j) strrchr(i,j)                                                         //06-07-12|0x0033
#define StrChr(i,j) strchr(i,j)                                                           //06-07-12|0x0033
#define StrToByteInt(i,j) GetInteger(i,&j,0xff)                                           //06-07-12|0x0033
#define StrToInt(i,j) GetInteger(i,&j,0xffff)                                             //06-07-12|0x0033
#define StrToLongInt(i,j) GetInteger(i,&j,0xffffffffL)                                    //06-07-12|0x0033
#define StrToByteHex(i,j) GetHex(i,&j,1)                                                  //06-07-12|0x0033
#define StrToHex(i,j) GetHex(i,&j,2)                                                      //06-07-12|0x0033
#define StrToLongHex(i,j) GetHex(i,&j,4)                                                  //06-07-12|0x0033
#define FindName(i) strrchr(i, '/')                                                       //06-07-12|0x0033
PRECSRCE prec_source;                                                                     //06-07-12|0x0058
static UINT test_samples[TestIndex];                                                      //06-07-12|0x0068
//***************************************************************************             //06-07-12|0x0075
//***************************************************************************             //06-07-12|0x0078
//***************************************************************************             //06-07-12|0x0079
//******                                                               ******             //06-07-12|0x007a
//******                       precsrce_allocate                       ******             //06-07-12|0x007b
//******                                                               ******             //06-07-12|0x007c
//***************************************************************************             //06-07-12|0x007d
//***************************************************************************             //06-07-12|0x007e
//*******************************************************************************         //10-29-97|0x0085
//*******************************************************************************         //10-29-97|0x0085
// precsrce_allocate                                                                      //06-07-12|0x0085
//*******************************************************************************         //10-29-97|0x0085
//*******************************************************************************         //10-29-97|0x0085
UINT PRECSRCE::precsrce_allocate(void) {                                                  //06-07-12|0x0085
//*******************************************************************************         //10-29-97|0x0085
//***************************************************************************             //06-07-12|0x0089
//***************************************************************************             //06-07-12|0x008a
    TestSample(precsrce_allocate_1);                                                      //06-07-12|0x008b
    if(process_addr                            != 0)        ReturnSystemError             //06-07-12|0x008c
    if((process_addr = Allocate(PROCESS_DATA)) == 0)        ReturnSystemError             //06-07-12|0x008d
//***************************************************************************             //06-07-12|0x008e
  ProcessProcessState = 4462; // START                                                    //06-09-26|0x008f
//***************************************************************************             //06-09-26|0x0090
    if(PrecOperCallInitial(process_addr) != Success)        ReturnSystemError             //07-06-06|0x0091
//***************************************************************************             //06-09-26|0x0092
    return(Success);                                                                      //06-07-12|0x0093
}                                                                                         //06-07-12|0x0094
//                                                                                        //05-24-97|0x0094
//***************************************************************************             //06-07-12|0x0097
//***************************************************************************             //06-07-12|0x0098
//******                                                               ******             //06-07-12|0x0099
//******                         precsrce_free                         ******             //06-07-12|0x009a
//******                                                               ******             //06-07-12|0x009b
//***************************************************************************             //06-07-12|0x009c
//***************************************************************************             //06-07-12|0x009d
//*******************************************************************************         //10-29-97|0x00a1
//*******************************************************************************         //10-29-97|0x00a1
// precsrce_free                                                                          //06-07-12|0x00a1
//*******************************************************************************         //10-29-97|0x00a1
//*******************************************************************************         //10-29-97|0x00a1
UINT PRECSRCE::precsrce_free(void) {                                                      //06-07-12|0x00a1
//*******************************************************************************         //10-29-97|0x00a1
//***************************************************************************             //06-07-12|0x00a5
//***************************************************************************             //06-07-12|0x00a6
    TestSample(precsrce_free_1);                                                          //06-07-12|0x00a7
    if(process_addr == 0)                                   ReturnSystemError             //06-07-12|0x00a8
    Free(process_addr);                                                                   //06-07-12|0x00a9
    process_addr = 0;                                                                     //06-07-12|0x00aa
//***************************************************************************             //06-07-12|0x00ab
    return(Success);                                                                      //06-07-12|0x00ac
}                                                                                         //06-07-12|0x00ad
//                                                                                        //05-24-97|0x00ad
//***************************************************************************             //06-09-26|0x00b0
//***************************************************************************             //06-09-26|0x00b1
//******                                                               ******             //06-09-26|0x00b2
//******                        precsrce_process                       ******             //06-09-26|0x00b3
//******                                                               ******             //06-09-26|0x00b4
//***************************************************************************             //06-09-26|0x00b5
//***************************************************************************             //06-09-26|0x00b6
//*******************************************************************************         //10-29-97|0x00ba
//*******************************************************************************         //10-29-97|0x00ba
// precsrce_process                                                                       //07-06-06|0x00ba
//*******************************************************************************         //10-29-97|0x00ba
//*******************************************************************************         //10-29-97|0x00ba
UINT PRECSRCE::precsrce_process(                                                          //07-06-06|0x00ba
    PROCESS_FILES_FAR ProcessFilesFar,                                                    //07-06-06|0x00ba
    TOKENS_FAR PcgTokenFar,                                                               //07-06-06|0x00ba
    UINT Error_Control                                                                    //07-06-06|0x00ba
    ) {                                                                                   //07-06-06|0x00ba
//*******************************************************************************         //10-29-97|0x00ba
//***************************************************************************             //06-09-26|0x00be
//***************************************************************************             //06-09-26|0x00bf
  UINT search_offset;                                                                //07-06-06|0x00c0
//***************************************************************************             //06-09-26|0x00c1
//***************************************************************************             //06-09-26|0x00c2
    if(process_addr == 0)                                   ReturnSystemError             //07-06-06|0x00c3
//***************************************************************************             //06-09-26|0x00c4
//******                                                               ******             //06-09-26|0x00c5
//****** State Machine Starts,                                         ******             //06-09-26|0x00c6
//******                                                               ******             //06-09-26|0x00c7
//***************************************************************************             //06-09-26|0x00c8
  ProcessRunFlag = 1;                                                                     //06-09-26|0x00c9
  while(ProcessRunFlag != 0)                                                              //06-09-26|0x00c9
  {                                                                                       //06-09-26|0x00c9
    switch(ProcessProcessState)                                                           //06-09-26|0x00c9
    {                                                                                     //06-09-26|0x00c9
//***************************************************************************             //06-09-26|0x00ca
//******                                                               ******             //06-09-26|0x00cb
//****** Initial Process,                                              ******             //06-09-26|0x00cc
//******                                                               ******             //06-09-26|0x00cd
//***************************************************************************             //06-09-26|0x00ce
      case 4462: // START                                                                 //06-09-26|0x00cf
        switch(InitialProcess)                                                            //06-09-26|0x00cf
        {                                                                                 //06-09-26|0x00cf
          case Success:                                                                   //06-09-26|0x00cf
            ProcessRunFlag = 1;                                                           //06-09-26|0x00cf
            ProcessProcessState = 10445; // READ_SRC                                      //06-09-26|0x00cf
            break;                                                                        //06-09-26|0x00cf
          default:                                                                        //06-09-26|0x00cf
            ProcessStatus = SystemError;                                                  //06-09-26|0x00cf
            ProcessRunFlag = 0;                                                           //06-09-26|0x00cf
            SystemMsg;                                                                    //06-09-26|0x00cf
            break;                                                                        //06-09-26|0x00cf
        }                                                                                 //06-09-26|0x00cf
        break;                                                                            //06-09-26|0x00cf
//***************************************************************************             //07-05-16|0x00d0
//******                                                               ******             //07-05-16|0x00d1
//****** Read a Source Code command                                    ******             //07-05-16|0x00d2
//******                                                               ******             //07-05-16|0x00d3
//***************************************************************************             //07-05-16|0x00d4
      case 10445: // READ_SRC                                                             //07-05-16|0x00d5
        switch(ReadSource)                                                                //07-05-16|0x00d5
        {                                                                                 //07-05-16|0x00d5
          case Display:                                                                   //07-05-16|0x00d5
            ProcessProcessState = 46620; // READ_SRC_EXIT                                 //07-05-16|0x00d5
            ProcessStatus = Display;                                                      //07-05-16|0x00d5
            ProcessRunFlag = 0;                                                           //07-05-16|0x00d5
            break;                                                                        //07-05-16|0x00d5
          case LineDone:                                                                  //07-05-16|0x00d5
            ProcessRunFlag = 1;                                                           //07-05-16|0x00d5
            ProcessProcessState = 6235; // INITIAL_REGS                                   //07-05-16|0x00d5
            break;                                                                        //07-05-16|0x00d5
          case FileDone:                                                                  //07-05-16|0x00d5
            ProcessRunFlag = 1;                                                           //07-05-16|0x00d5
            ProcessProcessState = 40586; // CHECK_STACK                                   //07-05-16|0x00d5
            break;                                                                        //07-05-16|0x00d5
          case UserError:                                                                 //07-05-16|0x00d5
            ProcessRunFlag = 1;                                                           //07-05-16|0x00d5
            ProcessProcessState = 34729; // USER_REL                                      //07-05-16|0x00d5
            break;                                                                        //07-05-16|0x00d5
          default:                                                                        //07-05-16|0x00d5
            ProcessStatus = SystemError;                                                  //07-05-16|0x00d5
            ProcessRunFlag = 0;                                                           //07-05-16|0x00d5
            SystemMsg;                                                                    //07-05-16|0x00d5
            break;                                                                        //07-05-16|0x00d5
        }                                                                                 //07-05-16|0x00d5
        break;                                                                            //07-05-16|0x00d5
//**************************************************************************              //07-05-16|0x00d5
      case 46620: // READ_SRC_EXIT                                                        //07-05-16|0x00d5
        switch(ReadSource)                                                                //07-05-16|0x00d5
        {                                                                                 //07-05-16|0x00d5
          case Display:                                                                   //07-05-16|0x00d5
            ProcessProcessState = 46620; // READ_SRC_EXIT                                 //07-05-16|0x00d5
            ProcessStatus = Display;                                                      //07-05-16|0x00d5
            ProcessRunFlag = 0;                                                           //07-05-16|0x00d5
            break;                                                                        //07-05-16|0x00d5
          case LineDone:                                                                  //07-05-16|0x00d5
            ProcessRunFlag = 1;                                                           //07-05-16|0x00d5
            ProcessProcessState = 6235; // INITIAL_REGS                                   //07-05-16|0x00d5
            break;                                                                        //07-05-16|0x00d5
          case FileDone:                                                                  //07-05-16|0x00d5
            ProcessRunFlag = 1;                                                           //07-05-16|0x00d5
            ProcessProcessState = 40586; // CHECK_STACK                                   //07-05-16|0x00d5
            break;                                                                        //07-05-16|0x00d5
          case UserError:                                                                 //07-05-16|0x00d5
            ProcessRunFlag = 1;                                                           //07-05-16|0x00d5
            ProcessProcessState = 34729; // USER_REL                                      //07-05-16|0x00d5
            break;                                                                        //07-05-16|0x00d5
          default:                                                                        //07-05-16|0x00d5
            ProcessStatus = SystemError;                                                  //07-05-16|0x00d5
            ProcessRunFlag = 0;                                                           //07-05-16|0x00d5
            SystemMsg;                                                                    //07-05-16|0x00d5
            break;                                                                        //07-05-16|0x00d5
        }                                                                                 //07-05-16|0x00d5
        break;                                                                            //07-05-16|0x00d5
//***************************************************************************             //07-05-16|0x00d6
//******                                                               ******             //07-05-16|0x00d7
//****** Initialize Registers                                          ******             //07-05-16|0x00d8
//******                                                               ******             //07-05-16|0x00d9
//***************************************************************************             //07-05-16|0x00da
      case 6235: // INITIAL_REGS                                                          //07-07-24|0x00db
        switch(PrecRegInitial())                                                          //07-07-24|0x00db
        {                                                                                 //07-07-24|0x00db
          case Success:                                                                   //07-07-24|0x00db
            ProcessRunFlag = 1;                                                           //07-07-24|0x00db
            ProcessProcessState = 696; // BRIDGE_NAME                                     //07-07-24|0x00db
            break;                                                                        //07-07-24|0x00db
          default:                                                                        //07-07-24|0x00db
            ProcessStatus = SystemError;                                                  //07-07-24|0x00db
            ProcessRunFlag = 0;                                                           //07-07-24|0x00db
            SystemMsg;                                                                    //07-07-24|0x00db
            break;                                                                        //07-07-24|0x00db
        }                                                                                 //07-07-24|0x00db
        break;                                                                            //07-07-24|0x00db
//***************************************************************************             //07-05-16|0x00dc
//******                                                               ******             //07-05-16|0x00dd
//****** Find the Macro                                                ******             //07-05-16|0x00de
//******---------------------------------------------------------------******             //07-05-16|0x00df
//****** Initialize the bridge and macro names.                        ******             //07-05-16|0x00e0
//******                                                               ******             //07-05-16|0x00e1
//***************************************************************************             //07-05-16|0x00e2
      case 696: // BRIDGE_NAME                                                            //07-05-16|0x00e3
        CopyToken0Bridge;                                                                 //07-05-16|0x00e3
        ProcessProcessState = 11959; // MACRO_NAME                                        //07-05-16|0x00e3
        break;                                                                            //07-05-16|0x00e3
//---------------------------------------------------------------------------             //07-05-16|0x00e4
      case 11959: // MACRO_NAME                                                           //07-05-24|0x00e5
        CopyToken0Macro;                                                                  //07-05-24|0x00e5
        ProcessProcessState = 6822; // INITIAL_OFFSET                                     //07-05-24|0x00e5
        break;                                                                            //07-05-24|0x00e5
//***************************************************************************             //07-05-22|0x00e6
//******                                                               ******             //07-05-22|0x00e7
//****** Find the Macro                                                ******             //07-05-22|0x00e8
//******---------------------------------------------------------------******             //07-05-22|0x00e9
//****** Process Includes                                              ******             //07-05-22|0x00ea
//******                                                               ******             //07-05-22|0x00eb
//***************************************************************************             //07-05-22|0x00ec
      case 6822: // INITIAL_OFFSET                                                        //07-05-24|0x00ed
        search_offset = 0;                                                                //07-05-24|0x00ed
        ProcessProcessState = 50565; // FIRST_INCLUDE                                     //07-05-24|0x00ed
        break;                                                                            //07-05-24|0x00ed
//---------------------------------------------------------------------------             //07-05-24|0x00ee
      case 50565: // FIRST_INCLUDE                                                        //07-05-22|0x00ef
        switch(FindInitialBridge)                                                         //07-05-22|0x00ef
        {                                                                                 //07-05-22|0x00ef
          case Yes:                                                                       //07-05-22|0x00ef
            ProcessRunFlag = 1;                                                           //07-05-22|0x00ef
            ProcessProcessState = 7764; // UPDATE_OFFSET                                  //07-05-22|0x00ef
            break;                                                                        //07-05-22|0x00ef
          case No:                                                                        //07-05-22|0x00ef
            ProcessRunFlag = 1;                                                           //07-05-22|0x00ef
            ProcessProcessState = 1043; // PUBLIC_NAME                                    //07-05-22|0x00ef
            break;                                                                        //07-05-22|0x00ef
          case UserError:                                                                 //07-05-22|0x00ef
            ProcessRunFlag = 1;                                                           //07-05-22|0x00ef
            ProcessProcessState = 34729; // USER_REL                                      //07-05-22|0x00ef
            break;                                                                        //07-05-22|0x00ef
          default:                                                                        //07-05-22|0x00ef
            ProcessStatus = SystemError;                                                  //07-05-22|0x00ef
            ProcessRunFlag = 0;                                                           //07-05-22|0x00ef
            SystemMsg;                                                                    //07-05-22|0x00ef
            break;                                                                        //07-05-22|0x00ef
        }                                                                                 //07-05-22|0x00ef
        break;                                                                            //07-05-22|0x00ef
//---------------------------------------------------------------------------             //07-05-22|0x00f0
      case 7764: // UPDATE_OFFSET                                                         //07-05-22|0x00f1
        search_offset = 1;                                                                //07-05-22|0x00f1
        ProcessProcessState = 17858; // NEXT_INCLUDE                                      //07-05-22|0x00f1
        break;                                                                            //07-05-22|0x00f1
//---------------------------------------------------------------------------             //07-05-22|0x00f2
      case 17858: // NEXT_INCLUDE                                                         //07-05-22|0x00f3
        switch(FindIncludeBridge)                                                         //07-05-22|0x00f3
        {                                                                                 //07-05-22|0x00f3
          case Yes:                                                                       //07-05-22|0x00f3
            ProcessRunFlag = 1;                                                           //07-05-22|0x00f3
            ProcessProcessState = 17858; // NEXT_INCLUDE                                  //07-05-22|0x00f3
            break;                                                                        //07-05-22|0x00f3
          case No:                                                                        //07-05-22|0x00f3
            ProcessRunFlag = 1;                                                           //07-05-22|0x00f3
            ProcessProcessState = 41569; // REGIONAL_NAME                                 //07-05-22|0x00f3
            break;                                                                        //07-05-22|0x00f3
          case UserError:                                                                 //07-05-22|0x00f3
            ProcessRunFlag = 1;                                                           //07-05-22|0x00f3
            ProcessProcessState = 34729; // USER_REL                                      //07-05-22|0x00f3
            break;                                                                        //07-05-22|0x00f3
          default:                                                                        //07-05-22|0x00f3
            ProcessStatus = SystemError;                                                  //07-05-22|0x00f3
            ProcessRunFlag = 0;                                                           //07-05-22|0x00f3
            SystemMsg;                                                                    //07-05-22|0x00f3
            break;                                                                        //07-05-22|0x00f3
        }                                                                                 //07-05-22|0x00f3
        break;                                                                            //07-05-22|0x00f3
//***************************************************************************             //07-05-24|0x00f4
//******                                                               ******             //07-05-24|0x00f5
//****** Find the Macro                                                ******             //07-05-24|0x00f6
//******---------------------------------------------------------------******             //07-05-24|0x00f7
//****** At least one include was found                                ******             //07-05-24|0x00f8
//******---------------------------------------------------------------******             //07-05-24|0x00f9
//****** Search for a regional bridge                                  ******             //07-05-24|0x00fa
//******                                                               ******             //07-05-24|0x00fb
//***************************************************************************             //07-05-24|0x00fc
      case 41569: // REGIONAL_NAME                                                        //07-05-24|0x00fd
        switch(FindRegionBridge)                                                          //07-05-24|0x00fd
        {                                                                                 //07-05-24|0x00fd
          case Yes:                                                                       //07-05-24|0x00fd
            ProcessRunFlag = 1;                                                           //07-05-24|0x00fd
            ProcessProcessState = 51440; // REGIONAL_TYPE                                 //07-05-24|0x00fd
            break;                                                                        //07-05-24|0x00fd
          case No:                                                                        //07-05-24|0x00fd
            ProcessRunFlag = 1;                                                           //07-05-24|0x00fd
            ProcessProcessState = 1043; // PUBLIC_NAME                                    //07-05-24|0x00fd
            break;                                                                        //07-05-24|0x00fd
          case UserError:                                                                 //07-05-24|0x00fd
            ProcessRunFlag = 1;                                                           //07-05-24|0x00fd
            ProcessProcessState = 34729; // USER_REL                                      //07-05-24|0x00fd
            break;                                                                        //07-05-24|0x00fd
          default:                                                                        //07-05-24|0x00fd
            ProcessStatus = SystemError;                                                  //07-05-24|0x00fd
            ProcessRunFlag = 0;                                                           //07-05-24|0x00fd
            SystemMsg;                                                                    //07-05-24|0x00fd
            break;                                                                        //07-05-24|0x00fd
        }                                                                                 //07-05-24|0x00fd
        break;                                                                            //07-05-24|0x00fd
//---------------------------------------------------------------------------             //07-05-24|0x00fe
      case 51440: // REGIONAL_TYPE                                                        //07-05-24|0x00ff
        BridgeType = I_BRIDGE_NAME;                                                       //07-05-24|0x00ff
        ProcessProcessState = 22639; // REGIONAL_RESET                                    //07-05-24|0x00ff
        break;                                                                            //07-05-24|0x00ff
//---------------------------------------------------------------------------             //07-05-24|0x0100
      case 22639: // REGIONAL_RESET                                                       //07-05-24|0x0101
        search_offset = 0;                                                                //07-05-24|0x0101
        ProcessProcessState = 57310; // PUBLIC_DUP                                        //07-05-24|0x0101
        break;                                                                            //07-05-24|0x0101
//***************************************************************************             //07-05-24|0x0102
//******                                                               ******             //07-05-24|0x0103
//****** Find the Macro                                                ******             //07-05-24|0x0104
//******---------------------------------------------------------------******             //07-05-24|0x0105
//****** Search for a public bridge                                    ******             //07-05-24|0x0106
//******                                                               ******             //07-05-24|0x0107
//***************************************************************************             //07-05-24|0x0108
      case 1043: // PUBLIC_NAME                                                           //07-05-24|0x0109
        switch(FindPublicBridge)                                                          //07-05-24|0x0109
        {                                                                                 //07-05-24|0x0109
          case Yes:                                                                       //07-05-24|0x0109
            ProcessRunFlag = 1;                                                           //07-05-24|0x0109
            ProcessProcessState = 56893; // PUBLIC_TYPE                                   //07-05-24|0x0109
            break;                                                                        //07-05-24|0x0109
          case No:                                                                        //07-05-24|0x0109
            ProcessRunFlag = 1;                                                           //07-05-24|0x0109
            ProcessProcessState = 49804; // NOT_FOUND_ERR                                 //07-05-24|0x0109
            break;                                                                        //07-05-24|0x0109
          case UserError:                                                                 //07-05-24|0x0109
            ProcessRunFlag = 1;                                                           //07-05-24|0x0109
            ProcessProcessState = 34729; // USER_REL                                      //07-05-24|0x0109
            break;                                                                        //07-05-24|0x0109
          default:                                                                        //07-05-24|0x0109
            ProcessStatus = SystemError;                                                  //07-05-24|0x0109
            ProcessRunFlag = 0;                                                           //07-05-24|0x0109
            SystemMsg;                                                                    //07-05-24|0x0109
            break;                                                                        //07-05-24|0x0109
        }                                                                                 //07-05-24|0x0109
        break;                                                                            //07-05-24|0x0109
//---------------------------------------------------------------------------             //07-05-24|0x010a
      case 56893: // PUBLIC_TYPE                                                          //07-06-06|0x010b
        BridgeType = I_PUBLIC_NAME;                                                       //07-06-06|0x010b
        ProcessProcessState = 60363; // PUBLIC_RESET                                      //07-06-06|0x010b
        break;                                                                            //07-06-06|0x010b
//---------------------------------------------------------------------------             //07-06-06|0x010c
      case 60363: // PUBLIC_RESET                                                         //07-06-06|0x010d
        search_offset = 0;                                                                //07-06-06|0x010d
        ProcessProcessState = 43258; // REGIONAL_DUP                                      //07-06-06|0x010d
        break;                                                                            //07-06-06|0x010d
//***************************************************************************             //07-05-24|0x010e
//******                                                               ******             //07-05-24|0x010f
//****** Macro not found                                               ******             //07-05-24|0x0110
//******                                                               ******             //07-05-24|0x0111
//***************************************************************************             //07-05-24|0x0112
      case 49804: // NOT_FOUND_ERR                                                        //07-05-24|0x0113
        switch(NotFoundMsg)                                                               //07-05-24|0x0113
        {                                                                                 //07-05-24|0x0113
          case UserError:                                                                 //07-05-24|0x0113
            ProcessRunFlag = 1;                                                           //07-05-24|0x0113
            ProcessProcessState = 34729; // USER_REL                                      //07-05-24|0x0113
            break;                                                                        //07-05-24|0x0113
          default:                                                                        //07-05-24|0x0113
            ProcessStatus = SystemError;                                                  //07-05-24|0x0113
            ProcessRunFlag = 0;                                                           //07-05-24|0x0113
            SystemMsg;                                                                    //07-05-24|0x0113
            break;                                                                        //07-05-24|0x0113
        }                                                                                 //07-05-24|0x0113
        break;                                                                            //07-05-24|0x0113
//***************************************************************************             //07-05-16|0x0114
//******                                                               ******             //07-05-16|0x0115
//****** Find the Macro                                                ******             //07-05-16|0x0116
//******---------------------------------------------------------------******             //07-05-16|0x0117
//****** Check for duplicate bridge names                              ******             //07-05-16|0x0118
//******                                                               ******             //07-05-16|0x0119
//***************************************************************************             //07-05-16|0x011a
      case 43258: // REGIONAL_DUP                                                         //07-06-06|0x011b
        switch(FindRegionBridge)                                                          //07-06-06|0x011b
        {                                                                                 //07-06-06|0x011b
          case Yes:                                                                       //07-06-06|0x011b
            ProcessRunFlag = 1;                                                           //07-06-06|0x011b
            ProcessProcessState = 14617; // DUP_ERROR                                     //07-06-06|0x011b
            break;                                                                        //07-06-06|0x011b
          case No:                                                                        //07-06-06|0x011b
            ProcessRunFlag = 1;                                                           //07-06-06|0x011b
            ProcessProcessState = 52008; // PUSH_MACRO                                    //07-06-06|0x011b
            break;                                                                        //07-06-06|0x011b
          case UserError:                                                                 //07-06-06|0x011b
            ProcessRunFlag = 1;                                                           //07-06-06|0x011b
            ProcessProcessState = 34729; // USER_REL                                      //07-06-06|0x011b
            break;                                                                        //07-06-06|0x011b
          default:                                                                        //07-06-06|0x011b
            ProcessStatus = SystemError;                                                  //07-06-06|0x011b
            ProcessRunFlag = 0;                                                           //07-06-06|0x011b
            SystemMsg;                                                                    //07-06-06|0x011b
            break;                                                                        //07-06-06|0x011b
        }                                                                                 //07-06-06|0x011b
        break;                                                                            //07-06-06|0x011b
//***************************************************************************             //07-05-16|0x011c
      case 57310: // PUBLIC_DUP                                                           //07-05-24|0x011d
        switch(FindPublicBridge)                                                          //07-05-24|0x011d
        {                                                                                 //07-05-24|0x011d
          case Yes:                                                                       //07-05-24|0x011d
            ProcessRunFlag = 1;                                                           //07-05-24|0x011d
            ProcessProcessState = 14617; // DUP_ERROR                                     //07-05-24|0x011d
            break;                                                                        //07-05-24|0x011d
          case No:                                                                        //07-05-24|0x011d
            ProcessRunFlag = 1;                                                           //07-05-24|0x011d
            ProcessProcessState = 52008; // PUSH_MACRO                                    //07-05-24|0x011d
            break;                                                                        //07-05-24|0x011d
          case UserError:                                                                 //07-05-24|0x011d
            ProcessRunFlag = 1;                                                           //07-05-24|0x011d
            ProcessProcessState = 34729; // USER_REL                                      //07-05-24|0x011d
            break;                                                                        //07-05-24|0x011d
          default:                                                                        //07-05-24|0x011d
            ProcessStatus = SystemError;                                                  //07-05-24|0x011d
            ProcessRunFlag = 0;                                                           //07-05-24|0x011d
            SystemMsg;                                                                    //07-05-24|0x011d
            break;                                                                        //07-05-24|0x011d
        }                                                                                 //07-05-24|0x011d
        break;                                                                            //07-05-24|0x011d
//***************************************************************************             //07-05-16|0x011e
      case 14617: // DUP_ERROR                                                            //07-06-06|0x011f
        switch(DupNameMsg)                                                                //07-06-06|0x011f
        {                                                                                 //07-06-06|0x011f
          case UserError:                                                                 //07-06-06|0x011f
            ProcessRunFlag = 1;                                                           //07-06-06|0x011f
            ProcessProcessState = 34729; // USER_REL                                      //07-06-06|0x011f
            break;                                                                        //07-06-06|0x011f
          default:                                                                        //07-06-06|0x011f
            ProcessStatus = SystemError;                                                  //07-06-06|0x011f
            ProcessRunFlag = 0;                                                           //07-06-06|0x011f
            SystemMsg;                                                                    //07-06-06|0x011f
            break;                                                                        //07-06-06|0x011f
        }                                                                                 //07-06-06|0x011f
        break;                                                                            //07-06-06|0x011f
//***************************************************************************             //07-05-16|0x0120
//******                                                               ******             //07-05-16|0x0121
//****** Call the Macro                                                ******             //07-05-16|0x0122
//******---------------------------------------------------------------******             //07-05-16|0x0123
//****** Push Call Stack                                               ******             //07-05-16|0x0124
//****** Get Class Name                                                ******             //07-05-16|0x0125
//****** Find Macro                                                    ******             //07-05-16|0x0126
//******                                                               ******             //07-05-16|0x0127
//***************************************************************************             //07-05-16|0x0128
      case 52008: // PUSH_MACRO                                                           //07-05-16|0x0129
        switch(PushSrc)                                                                   //07-05-16|0x0129
        {                                                                                 //07-05-16|0x0129
          case Success:                                                                   //07-05-16|0x0129
            ProcessRunFlag = 1;                                                           //07-05-16|0x0129
            ProcessProcessState = 32295; // GET_CLASS                                     //07-05-16|0x0129
            break;                                                                        //07-05-16|0x0129
          case UserError:                                                                 //07-05-16|0x0129
            ProcessRunFlag = 1;                                                           //07-05-16|0x0129
            ProcessProcessState = 34729; // USER_REL                                      //07-05-16|0x0129
            break;                                                                        //07-05-16|0x0129
          default:                                                                        //07-05-16|0x0129
            ProcessStatus = SystemError;                                                  //07-05-16|0x0129
            ProcessRunFlag = 0;                                                           //07-05-16|0x0129
            SystemMsg;                                                                    //07-05-16|0x0129
            break;                                                                        //07-05-16|0x0129
        }                                                                                 //07-05-16|0x0129
        break;                                                                            //07-05-16|0x0129
//---------------------------------------------------------------------------             //07-05-16|0x012a
      case 32295: // GET_CLASS                                                            //07-05-16|0x012b
        switch(GetClassName)                                                              //07-05-16|0x012b
        {                                                                                 //07-05-16|0x012b
          case Success:                                                                   //07-05-16|0x012b
            ProcessRunFlag = 1;                                                           //07-05-16|0x012b
            ProcessProcessState = 24854; // FIND_MACRO                                    //07-05-16|0x012b
            break;                                                                        //07-05-16|0x012b
          default:                                                                        //07-05-16|0x012b
            ProcessStatus = SystemError;                                                  //07-05-16|0x012b
            ProcessRunFlag = 0;                                                           //07-05-16|0x012b
            SystemMsg;                                                                    //07-05-16|0x012b
            break;                                                                        //07-05-16|0x012b
        }                                                                                 //07-05-16|0x012b
        break;                                                                            //07-05-16|0x012b
//---------------------------------------------------------------------------             //07-05-16|0x012c
      case 24854: // FIND_MACRO                                                           //07-05-16|0x012d
        switch(FindEntry)                                                                 //07-05-16|0x012d
        {                                                                                 //07-05-16|0x012d
          case Success:                                                                   //07-05-16|0x012d
            ProcessRunFlag = 1;                                                           //07-05-16|0x012d
            ProcessProcessState = 29429; // GET_CMD                                       //07-05-16|0x012d
            break;                                                                        //07-05-16|0x012d
          default:                                                                        //07-05-16|0x012d
            ProcessStatus = SystemError;                                                  //07-05-16|0x012d
            ProcessRunFlag = 0;                                                           //07-05-16|0x012d
            SystemMsg;                                                                    //07-05-16|0x012d
            break;                                                                        //07-05-16|0x012d
        }                                                                                 //07-05-16|0x012d
        break;                                                                            //07-05-16|0x012d
//***************************************************************************             //06-09-26|0x012e
//******                                                               ******             //06-09-26|0x012f
//****** Process the Macro                                             ******             //06-09-26|0x0130
//******                                                               ******             //06-09-26|0x0131
//***************************************************************************             //06-09-26|0x0132
      case 29429: // GET_CMD                                                              //06-09-26|0x0133
        switch(InitialStep)                                                               //06-09-26|0x0133
        {                                                                                 //06-09-26|0x0133
          case Success:                                                                   //06-09-26|0x0133
            ProcessRunFlag = 1;                                                           //06-09-26|0x0133
            ProcessProcessState = 41668; // PROC_CMD                                      //06-09-26|0x0133
            break;                                                                        //06-09-26|0x0133
          default:                                                                        //06-09-26|0x0133
            ProcessStatus = SystemError;                                                  //06-09-26|0x0133
            ProcessRunFlag = 0;                                                           //06-09-26|0x0133
            SystemMsg;                                                                    //06-09-26|0x0133
            break;                                                                        //06-09-26|0x0133
        }                                                                                 //06-09-26|0x0133
        break;                                                                            //06-09-26|0x0133
//---------------------------------------------------------------------------             //06-09-26|0x0134
      case 41668: // PROC_CMD                                                             //06-09-26|0x0135
        switch(ProcCommand)                                                               //06-09-26|0x0135
        {                                                                                 //06-09-26|0x0135
          case KeyBoard:                                                                  //06-09-26|0x0135
            ProcessProcessState = 53123; // PROC_CMD_EXIT                                 //06-09-26|0x0135
            ProcessStatus = KeyBoard;                                                     //06-09-26|0x0135
            ProcessRunFlag = 0;                                                           //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          case Display:                                                                   //06-09-26|0x0135
            ProcessProcessState = 51250; // DEBUG_CONT_EXIT                               //06-09-26|0x0135
            ProcessStatus = Display;                                                      //06-09-26|0x0135
            ProcessRunFlag = 0;                                                           //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          case Continue:                                                                  //06-09-26|0x0135
            ProcessRunFlag = 1;                                                           //06-09-26|0x0135
            ProcessProcessState = 19409; // DEBUG_CONT                                    //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          case LineDone:                                                                  //06-09-26|0x0135
            ProcessRunFlag = 1;                                                           //06-09-26|0x0135
            ProcessProcessState = 2400; // DEBUG_END                                      //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          case BuildError:                                                                //06-09-26|0x0135
            ProcessRunFlag = 1;                                                           //06-09-26|0x0135
            ProcessProcessState = 40927; // BUILD_TRACE                                   //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          case UserError:                                                                 //06-09-26|0x0135
            ProcessRunFlag = 1;                                                           //06-09-26|0x0135
            ProcessProcessState = 40526; // USER_TRACE                                    //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          default:                                                                        //06-09-26|0x0135
            ProcessStatus = SystemError;                                                  //06-09-26|0x0135
            ProcessRunFlag = 0;                                                           //06-09-26|0x0135
            SystemMsg;                                                                    //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
        }                                                                                 //06-09-26|0x0135
        break;                                                                            //06-09-26|0x0135
//**************************************************************************              //06-09-26|0x0135
      case 53123: // PROC_CMD_EXIT                                                        //06-09-26|0x0135
        switch(ProcCommand)                                                               //06-09-26|0x0135
        {                                                                                 //06-09-26|0x0135
          case KeyBoard:                                                                  //06-09-26|0x0135
            ProcessProcessState = 53123; // PROC_CMD_EXIT                                 //06-09-26|0x0135
            ProcessStatus = KeyBoard;                                                     //06-09-26|0x0135
            ProcessRunFlag = 0;                                                           //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          case Display:                                                                   //06-09-26|0x0135
            ProcessProcessState = 53123; // PROC_CMD_EXIT                                 //06-09-26|0x0135
            ProcessStatus = Display;                                                      //06-09-26|0x0135
            ProcessRunFlag = 0;                                                           //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          case Continue:                                                                  //06-09-26|0x0135
            ProcessRunFlag = 1;                                                           //06-09-26|0x0135
            ProcessProcessState = 19409; // DEBUG_CONT                                    //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          case LineDone:                                                                  //06-09-26|0x0135
            ProcessRunFlag = 1;                                                           //06-09-26|0x0135
            ProcessProcessState = 2400; // DEBUG_END                                      //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          case BuildError:                                                                //06-09-26|0x0135
            ProcessRunFlag = 1;                                                           //06-09-26|0x0135
            ProcessProcessState = 40927; // BUILD_TRACE                                   //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          case UserError:                                                                 //06-09-26|0x0135
            ProcessRunFlag = 1;                                                           //06-09-26|0x0135
            ProcessProcessState = 40526; // USER_TRACE                                    //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
          default:                                                                        //06-09-26|0x0135
            ProcessStatus = SystemError;                                                  //06-09-26|0x0135
            ProcessRunFlag = 0;                                                           //06-09-26|0x0135
            SystemMsg;                                                                    //06-09-26|0x0135
            break;                                                                        //06-09-26|0x0135
        }                                                                                 //06-09-26|0x0135
        break;                                                                            //06-09-26|0x0135
//---------------------------------------------------------------------------             //06-09-26|0x0136
      case 19409: // DEBUG_CONT                                                           //07-04-25|0x0137
        switch(ProcDebug)                                                                 //07-04-25|0x0137
        {                                                                                 //07-04-25|0x0137
          case Display:                                                                   //07-04-25|0x0137
            ProcessProcessState = 51250; // DEBUG_CONT_EXIT                               //07-04-25|0x0137
            ProcessStatus = Display;                                                      //07-04-25|0x0137
            ProcessRunFlag = 0;                                                           //07-04-25|0x0137
            break;                                                                        //07-04-25|0x0137
          case KeyBoard:                                                                  //07-04-25|0x0137
            ProcessProcessState = 51250; // DEBUG_CONT_EXIT                               //07-04-25|0x0137
            ProcessStatus = KeyBoard;                                                     //07-04-25|0x0137
            ProcessRunFlag = 0;                                                           //07-04-25|0x0137
            break;                                                                        //07-04-25|0x0137
          case Success:                                                                   //07-04-25|0x0137
            ProcessRunFlag = 1;                                                           //07-04-25|0x0137
            ProcessProcessState = 29429; // GET_CMD                                       //07-04-25|0x0137
            break;                                                                        //07-04-25|0x0137
          case UserError:                                                                 //07-04-25|0x0137
            ProcessRunFlag = 1;                                                           //07-04-25|0x0137
            ProcessProcessState = 34729; // USER_REL                                      //07-04-25|0x0137
            break;                                                                        //07-04-25|0x0137
          default:                                                                        //07-04-25|0x0137
            ProcessStatus = SystemError;                                                  //07-04-25|0x0137
            ProcessRunFlag = 0;                                                           //07-04-25|0x0137
            SystemMsg;                                                                    //07-04-25|0x0137
            break;                                                                        //07-04-25|0x0137
        }                                                                                 //07-04-25|0x0137
        break;                                                                            //07-04-25|0x0137
//**************************************************************************              //07-04-25|0x0137
      case 51250: // DEBUG_CONT_EXIT                                                      //07-04-25|0x0137
        switch(ProcDebug)                                                                 //07-04-25|0x0137
        {                                                                                 //07-04-25|0x0137
          case Display:                                                                   //07-04-25|0x0137
            ProcessProcessState = 51250; // DEBUG_CONT_EXIT                               //07-04-25|0x0137
            ProcessStatus = Display;                                                      //07-04-25|0x0137
            ProcessRunFlag = 0;                                                           //07-04-25|0x0137
            break;                                                                        //07-04-25|0x0137
          case KeyBoard:                                                                  //07-04-25|0x0137
            ProcessProcessState = 51250; // DEBUG_CONT_EXIT                               //07-04-25|0x0137
            ProcessStatus = KeyBoard;                                                     //07-04-25|0x0137
            ProcessRunFlag = 0;                                                           //07-04-25|0x0137
            break;                                                                        //07-04-25|0x0137
          case Success:                                                                   //07-04-25|0x0137
            ProcessRunFlag = 1;                                                           //07-04-25|0x0137
            ProcessProcessState = 29429; // GET_CMD                                       //07-04-25|0x0137
            break;                                                                        //07-04-25|0x0137
          case UserError:                                                                 //07-04-25|0x0137
            ProcessRunFlag = 1;                                                           //07-04-25|0x0137
            ProcessProcessState = 34729; // USER_REL                                      //07-04-25|0x0137
            break;                                                                        //07-04-25|0x0137
          default:                                                                        //07-04-25|0x0137
            ProcessStatus = SystemError;                                                  //07-04-25|0x0137
            ProcessRunFlag = 0;                                                           //07-04-25|0x0137
            SystemMsg;                                                                    //07-04-25|0x0137
            break;                                                                        //07-04-25|0x0137
        }                                                                                 //07-04-25|0x0137
        break;                                                                            //07-04-25|0x0137
//---------------------------------------------------------------------------             //06-10-01|0x0138
      case 2400: // DEBUG_END                                                             //07-04-25|0x0139
        switch(ProcDebug)                                                                 //07-04-25|0x0139
        {                                                                                 //07-04-25|0x0139
          case Display:                                                                   //07-04-25|0x0139
            ProcessProcessState = 33709; // DEBUG_END_EXIT                                //07-04-25|0x0139
            ProcessStatus = Display;                                                      //07-04-25|0x0139
            ProcessRunFlag = 0;                                                           //07-04-25|0x0139
            break;                                                                        //07-04-25|0x0139
          case KeyBoard:                                                                  //07-04-25|0x0139
            ProcessProcessState = 33709; // DEBUG_END_EXIT                                //07-04-25|0x0139
            ProcessStatus = KeyBoard;                                                     //07-04-25|0x0139
            ProcessRunFlag = 0;                                                           //07-04-25|0x0139
            break;                                                                        //07-04-25|0x0139
          case Success:                                                                   //07-04-25|0x0139
            ProcessRunFlag = 1;                                                           //07-04-25|0x0139
            ProcessProcessState = 10445; // READ_SRC                                      //07-04-25|0x0139
            break;                                                                        //07-04-25|0x0139
          case UserError:                                                                 //07-04-25|0x0139
            ProcessRunFlag = 1;                                                           //07-04-25|0x0139
            ProcessProcessState = 34729; // USER_REL                                      //07-04-25|0x0139
            break;                                                                        //07-04-25|0x0139
          default:                                                                        //07-04-25|0x0139
            ProcessStatus = SystemError;                                                  //07-04-25|0x0139
            ProcessRunFlag = 0;                                                           //07-04-25|0x0139
            SystemMsg;                                                                    //07-04-25|0x0139
            break;                                                                        //07-04-25|0x0139
        }                                                                                 //07-04-25|0x0139
        break;                                                                            //07-04-25|0x0139
//**************************************************************************              //07-04-25|0x0139
      case 33709: // DEBUG_END_EXIT                                                       //07-04-25|0x0139
        switch(ProcDebug)                                                                 //07-04-25|0x0139
        {                                                                                 //07-04-25|0x0139
          case Display:                                                                   //07-04-25|0x0139
            ProcessProcessState = 33709; // DEBUG_END_EXIT                                //07-04-25|0x0139
            ProcessStatus = Display;                                                      //07-04-25|0x0139
            ProcessRunFlag = 0;                                                           //07-04-25|0x0139
            break;                                                                        //07-04-25|0x0139
          case KeyBoard:                                                                  //07-04-25|0x0139
            ProcessProcessState = 33709; // DEBUG_END_EXIT                                //07-04-25|0x0139
            ProcessStatus = KeyBoard;                                                     //07-04-25|0x0139
            ProcessRunFlag = 0;                                                           //07-04-25|0x0139
            break;                                                                        //07-04-25|0x0139
          case Success:                                                                   //07-04-25|0x0139
            ProcessRunFlag = 1;                                                           //07-04-25|0x0139
            ProcessProcessState = 10445; // READ_SRC                                      //07-04-25|0x0139
            break;                                                                        //07-04-25|0x0139
          case UserError:                                                                 //07-04-25|0x0139
            ProcessRunFlag = 1;                                                           //07-04-25|0x0139
            ProcessProcessState = 34729; // USER_REL                                      //07-04-25|0x0139
            break;                                                                        //07-04-25|0x0139
          default:                                                                        //07-04-25|0x0139
            ProcessStatus = SystemError;                                                  //07-04-25|0x0139
            ProcessRunFlag = 0;                                                           //07-04-25|0x0139
            SystemMsg;                                                                    //07-04-25|0x0139
            break;                                                                        //07-04-25|0x0139
        }                                                                                 //07-04-25|0x0139
        break;                                                                            //07-04-25|0x0139
//***************************************************************************             //06-10-09|0x013a
//******                                                               ******             //06-10-09|0x013b
//****** Check the stack                                               ******             //06-10-09|0x013c
//******                                                               ******             //06-10-09|0x013d
//***************************************************************************             //06-10-09|0x013e
      case 40586: // CHECK_STACK                                                          //07-11-06|0x013f
        switch(CheckStack)                                                                //07-11-06|0x013f
        {                                                                                 //07-11-06|0x013f
          case Success:                                                                   //07-11-06|0x013f
            ProcessRunFlag = 1;                                                           //07-11-06|0x013f
            ProcessProcessState = 48892; // OK_REL                                        //07-11-06|0x013f
            break;                                                                        //07-11-06|0x013f
          case UserError:                                                                 //07-11-06|0x013f
            ProcessRunFlag = 1;                                                           //07-11-06|0x013f
            ProcessProcessState = 44859; // BUILD_TEST                                    //07-11-06|0x013f
            break;                                                                        //07-11-06|0x013f
          default:                                                                        //07-11-06|0x013f
            ProcessStatus = SystemError;                                                  //07-11-06|0x013f
            ProcessRunFlag = 0;                                                           //07-11-06|0x013f
            SystemMsg;                                                                    //07-11-06|0x013f
            break;                                                                        //07-11-06|0x013f
        }                                                                                 //07-11-06|0x013f
        break;                                                                            //07-11-06|0x013f
//***************************************************************************             //06-10-01|0x0140
//******                                                               ******             //06-10-01|0x0141
//****** Handle Errors                                                 ******             //06-10-01|0x0142
//******                                                               ******             //06-10-01|0x0143
//***************************************************************************             //06-10-01|0x0144
      case 40526: // USER_TRACE                                                           //07-03-10|0x0145
        switch(ProcTrace)                                                                 //07-03-10|0x0145
        {                                                                                 //07-03-10|0x0145
          case Success:                                                                   //07-03-10|0x0145
            ProcessRunFlag = 1;                                                           //07-03-10|0x0145
            ProcessProcessState = 41834; // USER_TEST                                     //07-03-10|0x0145
            break;                                                                        //07-03-10|0x0145
          default:                                                                        //07-03-10|0x0145
            ProcessStatus = SystemError;                                                  //07-03-10|0x0145
            ProcessRunFlag = 0;                                                           //07-03-10|0x0145
            SystemMsg;                                                                    //07-03-10|0x0145
            break;                                                                        //07-03-10|0x0145
        }                                                                                 //07-03-10|0x0145
        break;                                                                            //07-03-10|0x0145
//---------------------------------------------------------------------------             //06-10-01|0x0146
      case 40927: // BUILD_TRACE                                                          //07-04-25|0x0147
        switch(ProcTrace)                                                                 //07-04-25|0x0147
        {                                                                                 //07-04-25|0x0147
          case Success:                                                                   //07-04-25|0x0147
            ProcessRunFlag = 1;                                                           //07-04-25|0x0147
            ProcessProcessState = 44859; // BUILD_TEST                                    //07-04-25|0x0147
            break;                                                                        //07-04-25|0x0147
          default:                                                                        //07-04-25|0x0147
            ProcessStatus = SystemError;                                                  //07-04-25|0x0147
            ProcessRunFlag = 0;                                                           //07-04-25|0x0147
            SystemMsg;                                                                    //07-04-25|0x0147
            break;                                                                        //07-04-25|0x0147
        }                                                                                 //07-04-25|0x0147
        break;                                                                            //07-04-25|0x0147
//***************************************************************************             //07-06-06|0x0148
      case 41834: // USER_TEST                                                            //07-06-06|0x0149
        switch(ErrorControl)                                                              //07-06-06|0x0149
        {                                                                                 //07-06-06|0x0149
          case Success:                                                                   //07-06-06|0x0149
            ProcessRunFlag = 1;                                                           //07-06-06|0x0149
            ProcessProcessState = 34729; // USER_REL                                      //07-06-06|0x0149
            break;                                                                        //07-06-06|0x0149
          case BuildError:                                                                //07-06-06|0x0149
            ProcessRunFlag = 1;                                                           //07-06-06|0x0149
            ProcessProcessState = 55945; // BUILD_REL                                     //07-06-06|0x0149
            break;                                                                        //07-06-06|0x0149
          case UserError:                                                                 //07-06-06|0x0149
            ProcessRunFlag = 1;                                                           //07-06-06|0x0149
            ProcessProcessState = 34729; // USER_REL                                      //07-06-06|0x0149
            break;                                                                        //07-06-06|0x0149
          default:                                                                        //07-06-06|0x0149
            ProcessStatus = SystemError;                                                  //07-06-06|0x0149
            ProcessRunFlag = 0;                                                           //07-06-06|0x0149
            SystemMsg;                                                                    //07-06-06|0x0149
            break;                                                                        //07-06-06|0x0149
        }                                                                                 //07-06-06|0x0149
        break;                                                                            //07-06-06|0x0149
//---------------------------------------------------------------------------             //07-06-06|0x014a
      case 44859: // BUILD_TEST                                                           //07-06-06|0x014b
        switch(ErrorControl)                                                              //07-06-06|0x014b
        {                                                                                 //07-06-06|0x014b
          case Success:                                                                   //07-06-06|0x014b
            ProcessRunFlag = 1;                                                           //07-06-06|0x014b
            ProcessProcessState = 55945; // BUILD_REL                                     //07-06-06|0x014b
            break;                                                                        //07-06-06|0x014b
          case BuildError:                                                                //07-06-06|0x014b
            ProcessRunFlag = 1;                                                           //07-06-06|0x014b
            ProcessProcessState = 55945; // BUILD_REL                                     //07-06-06|0x014b
            break;                                                                        //07-06-06|0x014b
          case UserError:                                                                 //07-06-06|0x014b
            ProcessRunFlag = 1;                                                           //07-06-06|0x014b
            ProcessProcessState = 34729; // USER_REL                                      //07-06-06|0x014b
            break;                                                                        //07-06-06|0x014b
          default:                                                                        //07-06-06|0x014b
            ProcessStatus = SystemError;                                                  //07-06-06|0x014b
            ProcessRunFlag = 0;                                                           //07-06-06|0x014b
            SystemMsg;                                                                    //07-06-06|0x014b
            break;                                                                        //07-06-06|0x014b
        }                                                                                 //07-06-06|0x014b
        break;                                                                            //07-06-06|0x014b
//***************************************************************************             //06-10-01|0x014c
//******                                                               ******             //06-10-01|0x014d
//****** Complete Stack                                                ******             //06-10-01|0x014e
//******                                                               ******             //06-10-01|0x014f
//***************************************************************************             //06-10-01|0x0150
      case 48892: // OK_REL                                                               //07-02-24|0x0151
        switch(ReleaseStack)                                                              //07-02-24|0x0151
        {                                                                                 //07-02-24|0x0151
          case Success:                                                                   //07-02-24|0x0151
            ProcessRunFlag = 1;                                                           //07-02-24|0x0151
            ProcessProcessState = 33688; // OK                                            //07-02-24|0x0151
            break;                                                                        //07-02-24|0x0151
          default:                                                                        //07-02-24|0x0151
            ProcessStatus = SystemError;                                                  //07-02-24|0x0151
            ProcessRunFlag = 0;                                                           //07-02-24|0x0151
            SystemMsg;                                                                    //07-02-24|0x0151
            break;                                                                        //07-02-24|0x0151
        }                                                                                 //07-02-24|0x0151
        break;                                                                            //07-02-24|0x0151
//---------------------------------------------------------------------------             //06-10-01|0x0152
      case 34729: // USER_REL                                                             //07-03-10|0x0153
        switch(ReleaseStack)                                                              //07-03-10|0x0153
        {                                                                                 //07-03-10|0x0153
          case Success:                                                                   //07-03-10|0x0153
            ProcessRunFlag = 1;                                                           //07-03-10|0x0153
            ProcessProcessState = 48535; // USER                                          //07-03-10|0x0153
            break;                                                                        //07-03-10|0x0153
          default:                                                                        //07-03-10|0x0153
            ProcessStatus = SystemError;                                                  //07-03-10|0x0153
            ProcessRunFlag = 0;                                                           //07-03-10|0x0153
            SystemMsg;                                                                    //07-03-10|0x0153
            break;                                                                        //07-03-10|0x0153
        }                                                                                 //07-03-10|0x0153
        break;                                                                            //07-03-10|0x0153
//---------------------------------------------------------------------------             //06-10-01|0x0154
      case 55945: // BUILD_REL                                                            //07-04-25|0x0155
        switch(ReleaseStack)                                                              //07-04-25|0x0155
        {                                                                                 //07-04-25|0x0155
          case Success:                                                                   //07-04-25|0x0155
            ProcessRunFlag = 1;                                                           //07-04-25|0x0155
            ProcessProcessState = 38790; // BUILD                                         //07-04-25|0x0155
            break;                                                                        //07-04-25|0x0155
          default:                                                                        //07-04-25|0x0155
            ProcessStatus = SystemError;                                                  //07-04-25|0x0155
            ProcessRunFlag = 0;                                                           //07-04-25|0x0155
            SystemMsg;                                                                    //07-04-25|0x0155
            break;                                                                        //07-04-25|0x0155
        }                                                                                 //07-04-25|0x0155
        break;                                                                            //07-04-25|0x0155
//***************************************************************************             //06-10-01|0x0156
//******                                                               ******             //06-10-01|0x0157
//****** Handle Errors                                                 ******             //06-10-01|0x0158
//******                                                               ******             //06-10-01|0x0159
//***************************************************************************             //06-10-01|0x015a
      case 33688: // OK                                                                   //06-10-09|0x015b
        ProcessProcessState = 4462; // START                                              //06-10-09|0x015b
        ProcessStatus = Success;                                                          //06-10-09|0x015b
        ProcessRunFlag = 0;                                                               //06-10-09|0x015b
        break;                                                                            //06-10-09|0x015b
//---------------------------------------------------------------------------             //06-09-26|0x015c
      case 48535: // USER                                                                 //06-10-01|0x015d
        ProcessProcessState = 4462; // START                                              //06-10-01|0x015d
        ProcessStatus = UserError;                                                        //06-10-01|0x015d
        ProcessRunFlag = 0;                                                               //06-10-01|0x015d
        break;                                                                            //06-10-01|0x015d
//---------------------------------------------------------------------------             //06-09-26|0x015e
      case 38790: // BUILD                                                                //06-10-06|0x015f
        ProcessProcessState = 4462; // START                                              //06-10-06|0x015f
        ProcessStatus = BuildError;                                                       //06-10-06|0x015f
        ProcessRunFlag = 0;                                                               //06-10-06|0x015f
        break;                                                                            //06-10-06|0x015f
//***************************************************************************             //06-10-01|0x0160
//******                                                               ******             //06-10-01|0x0161
//****** State Machine End                                             ******             //06-10-01|0x0162
//******                                                               ******             //06-10-01|0x0163
//***************************************************************************             //06-10-01|0x0164
      default:                                                                            //06-10-01|0x0165
        ProcessStatus = SystemError;                                                      //06-10-01|0x0165
        ProcessRunFlag = 0;                                                               //06-10-01|0x0165
        SystemMsg;                                                                        //06-10-01|0x0165
        break;                                                                            //06-10-01|0x0165
    }                                                                                     //06-10-01|0x0165
  }                                                                                       //06-10-01|0x0165
    return(ProcessStatus);                                                                //06-10-01|0x0167
}                                                                                         //06-10-01|0x0169
//                                                                                        //05-24-97|0x0169
//***************************************************************************             //06-09-26|0x016c
//***************************************************************************             //06-09-26|0x016d
//******                                                               ******             //06-09-26|0x016e
//******                             initial_process                   ******             //06-09-26|0x016f
//******                                                               ******             //06-09-26|0x0170
//***************************************************************************             //06-09-26|0x0171
//***************************************************************************             //06-09-26|0x0172
//*******************************************************************************         //10-29-97|0x0178
//*******************************************************************************         //10-29-97|0x0178
// initial_process                                                                        //06-09-26|0x0178
//*******************************************************************************         //10-29-97|0x0178
//*******************************************************************************         //10-29-97|0x0178
UINT PRECSRCE::initial_process(void) {                                                    //06-09-26|0x0178
//*******************************************************************************         //10-29-97|0x0178
//***************************************************************************             //06-09-26|0x017b
//***************************************************************************             //06-09-26|0x017c
    if(PrecOperCallInitial(process_addr) != Success)        ReturnSystemError             //07-11-12|0x017d
//***************************************************************************             //07-11-12|0x017e
    ProcessDebugCommand = DBG_OFF;                                                        //06-09-26|0x017f
//***************************************************************************             //06-09-26|0x0180
    switch(StackInitial())                                       _SwitchGroup             //06-09-26|0x0181
//***************************************************************************             //06-09-26|0x0182
    return_test(initial_process_1);                                                       //06-09-26|0x0183
}                                                                                         //06-09-26|0x0185
//                                                                                        //05-24-97|0x0185
//***************************************************************************             //06-09-26|0x0188
//***************************************************************************             //06-09-26|0x0189
//******                                                               ******             //06-09-26|0x018a
//******                          read_source                          ******             //06-09-26|0x018b
//******                                                               ******             //06-09-26|0x018c
//***************************************************************************             //06-09-26|0x018d
//***************************************************************************             //06-09-26|0x018e
//*******************************************************************************         //10-29-97|0x0196
//*******************************************************************************         //10-29-97|0x0196
// read_source                                                                            //06-09-26|0x0196
//*******************************************************************************         //10-29-97|0x0196
//*******************************************************************************         //10-29-97|0x0196
UINT PRECSRCE::read_source(                                                               //06-09-26|0x0196
    PROCESS_FILES_FAR ProcessFilesFar                                                     //06-09-26|0x0196
    ) {                                                                                   //06-09-26|0x0196
//*******************************************************************************         //10-29-97|0x0196
//***************************************************************************             //06-09-26|0x0199
//***************************************************************************             //06-09-26|0x019a
  UINT status;                                                                       //06-09-26|0x019b
//***************************************************************************             //06-09-26|0x019c
//***************************************************************************             //06-09-26|0x019d
    switch(CommitSrcFile)                                        _SwitchGroup             //06-09-26|0x019e
//***************************************************************************             //06-09-26|0x019f
    status = ReadSrcFile;                                                                 //06-09-26|0x01a0
//---------------------------------------------------------------------------             //06-09-26|0x01a1
    switch(status)                                                                        //06-09-26|0x01a2
      {                                                                                   //06-09-26|0x01a3
        case FileDone:                             break_test(read_source_1);             //06-09-26|0x01a4
        case LineDone:                             break_test(read_source_2);             //06-09-26|0x01a5
        case UserError:                            break_test(read_source_3);             //06-09-26|0x01a6
        case Display:                              break_test(read_source_4);             //06-09-26|0x01a7
        default:                                            ReturnSystemError             //06-09-26|0x01a8
        }                                                                                 //06-09-26|0x01a9
//***************************************************************************             //06-09-26|0x01aa
    switch(FileRelease())                                        _SwitchGroup             //06-09-26|0x01ab
//***************************************************************************             //06-09-26|0x01ac
    return(status);                                                                       //06-09-26|0x01ad
}                                                                                         //06-09-26|0x01ae
//                                                                                        //05-24-97|0x01ae
//***************************************************************************             //06-09-26|0x01b1
//***************************************************************************             //06-09-26|0x01b2
//******                                                               ******             //06-09-26|0x01b3
//******                             initial_step                      ******             //06-09-26|0x01b4
//******                                                               ******             //06-09-26|0x01b5
//***************************************************************************             //06-09-26|0x01b6
//***************************************************************************             //06-09-26|0x01b7
//*******************************************************************************         //10-29-97|0x01bd
//*******************************************************************************         //10-29-97|0x01bd
// initial_step                                                                           //06-09-26|0x01bd
//*******************************************************************************         //10-29-97|0x01bd
//*******************************************************************************         //10-29-97|0x01bd
UINT PRECSRCE::initial_step(void) {                                                       //06-09-26|0x01bd
//*******************************************************************************         //10-29-97|0x01bd
//***************************************************************************             //06-09-26|0x01c0
//***************************************************************************             //06-09-26|0x01c1
    MemSet(&ProcessTokens,      0x00, sizeof(TOKENS));                                    //06-09-26|0x01c2
    MemSet(&ProcessResults,     0x00, sizeof(STRING_DATA));                               //06-09-26|0x01c3
    MemSet(&ProcessParmNum,     0x00, sizeof(ARITH_DATA));                                //06-09-26|0x01c4
    MemSet(&ProcessResultNum,   0x00, sizeof(ARITH_DATA));                                //06-09-26|0x01c5
//***************************************************************************             //06-09-26|0x01c6
    switch(GetCommand)                                       _SwitchGroup                 //06-09-26|0x01c7
//***************************************************************************             //06-09-26|0x01c8
    return_test(initial_step_1);                                                          //06-09-26|0x01c9
}                                                                                         //06-09-26|0x01cb
//                                                                                        //05-24-97|0x01cb
//***************************************************************************             //06-10-09|0x01cf
//***************************************************************************             //06-10-09|0x01d0
//******                                                               ******             //06-10-09|0x01d1
//******                             check_stack                       ******             //06-10-09|0x01d2
//******                                                               ******             //06-10-09|0x01d3
//***************************************************************************             //06-10-09|0x01d4
//***************************************************************************             //06-10-09|0x01d5
//*******************************************************************************         //10-29-97|0x01dc
//*******************************************************************************         //10-29-97|0x01dc
// check_stack                                                                            //06-10-09|0x01dc
//*******************************************************************************         //10-29-97|0x01dc
//*******************************************************************************         //10-29-97|0x01dc
UINT PRECSRCE::check_stack(void) {                                                        //06-10-09|0x01dc
//*******************************************************************************         //10-29-97|0x01dc
//***************************************************************************             //06-10-09|0x01df
//***************************************************************************             //06-10-09|0x01e0
  STRING_DATA error_macro;                                                           //07-11-12|0x01e1
  STRING_DATA error_name;                                                            //07-11-12|0x01e2
//***************************************************************************             //06-10-09|0x01e3
//***************************************************************************             //06-10-09|0x01e4
    switch(StackAllEmptyTest())                                                           //07-03-05|0x01e5
      {                                                                                   //06-10-09|0x01e6
        case No:                                  return_test(check_stack_1);             //06-10-09|0x01e7
        case Yes:                                  break_test(check_stack_2);             //07-11-12|0x01e8
        default:                                           ReturnSystemError;             //06-10-09|0x01e9
        }                                                                                 //06-10-09|0x01ea
//***************************************************************************             //07-11-12|0x01eb
    MemSet(&error_macro, 0x00, sizeof(STRING_DATA));                                      //07-11-12|0x01ec
    StrCpy(ErrorMacroLineAddr, "SYSTEM");                                                 //07-11-12|0x01ed
    ErrorMacroLength = 6;                                                                 //07-11-12|0x01ee
    ErrorMacroType   = I_NAME;                                                            //07-11-12|0x01ef
//---------------------------------------------------------------------------             //07-11-12|0x01f0
    MemSet(&error_name,  0x00, sizeof(STRING_DATA));                                      //07-11-12|0x01f1
    StrCpy(ErrorNameLineAddr, "USER STACK");                                              //07-11-12|0x01f2
    ErrorNameLength  = 10;                                                                //07-11-12|0x01f3
    ErrorNameType    = I_TOKEN;                                                           //07-11-12|0x01f4
//***************************************************************************             //07-11-12|0x01f5
    switch(ErrorMailAddMacro(&error_macro))                      _SwitchGroup             //07-11-12|0x01f6
    switch(ErrorMailAddError(&error_name))                       _SwitchGroup             //07-11-12|0x01f7
//***************************************************************************             //07-11-12|0x01f8
    ReturnFinish("STACK NOT EMPTY AT END");                                               //07-11-12|0x01f9
}                                                                                         //06-10-09|0x01fb
//                                                                                        //05-24-97|0x01fb
//***************************************************************************             //04-10-05|0x01fe
//***************************************************************************             //04-10-05|0x01ff
//******                                                               ******             //04-10-05|0x0200
//******                       TEST WRAPPERS                           ******             //04-10-05|0x0201
//******                                                               ******             //04-10-05|0x0202
//***************************************************************************             //04-10-05|0x0203
//***************************************************************************             //04-10-05|0x0204
//*******************************************************************************         //10-29-97|0x0205
//*******************************************************************************         //10-29-97|0x0205
// precsrce_test_reset                                                                    //04-10-05|0x0205
//*******************************************************************************         //10-29-97|0x0205
//*******************************************************************************         //10-29-97|0x0205
UINT PRECSRCE::precsrce_test_reset(void) {                                                //04-10-05|0x0205
//*******************************************************************************         //10-29-97|0x0205
//************************************************************************                //04-10-05|0x0205
    switch(BasicTestReset())                                                              //04-10-05|0x0205
      {                                                                                   //04-10-05|0x0205
        case Success:                                     return(Success);                //04-10-05|0x0205
        default:                                        ReturnSystemError;                //04-10-05|0x0205
        }                                                                                 //04-10-05|0x0205
}                                                                                         //04-10-05|0x0205
//                                                                                        //05-24-97|0x0205
//***************************************************************************             //04-10-05|0x0206
//*******************************************************************************         //10-29-97|0x0207
//*******************************************************************************         //10-29-97|0x0207
// precsrce_test_read                                                                     //04-10-05|0x0207
//*******************************************************************************         //10-29-97|0x0207
//*******************************************************************************         //10-29-97|0x0207
UINT PRECSRCE::precsrce_test_read(void) {                                                 //04-10-05|0x0207
//*******************************************************************************         //10-29-97|0x0207
//************************************************************************                //04-10-05|0x0207
    switch(BasicTestRead(&test_samples[0], test_samples[0]))                              //04-10-05|0x0207
      {                                                                                   //04-10-05|0x0207
        case Success:                                     return(Success);                //04-10-05|0x0207
        default:                                        ReturnSystemError;                //04-10-05|0x0207
        }                                                                                 //04-10-05|0x0207
}                                                                                         //04-10-05|0x0207
//                                                                                        //05-24-97|0x0207
//***************************************************************************             //04-10-05|0x0208
//*******************************************************************************         //10-29-97|0x0209
//*******************************************************************************         //10-29-97|0x0209
// precsrce_test_write                                                                    //04-10-05|0x0209
//*******************************************************************************         //10-29-97|0x0209
//*******************************************************************************         //10-29-97|0x0209
UINT PRECSRCE::precsrce_test_write(void) {                                                //04-10-05|0x0209
//*******************************************************************************         //10-29-97|0x0209
//************************************************************************                //04-10-05|0x0209
    switch(BasicTestWrite(&test_samples[0]))                                              //04-10-05|0x0209
      {                                                                                   //04-10-05|0x0209
        case Success:                                     return(Success);                //04-10-05|0x0209
        default:                                        ReturnSystemError;                //04-10-05|0x0209
        }                                                                                 //04-10-05|0x0209
}                                                                                         //04-10-05|0x0209
//                                                                                        //05-24-97|0x0209
//***************************************************************************             //04-10-05|0x020a
//*******************************************************************************         //10-29-97|0x020b
//*******************************************************************************         //10-29-97|0x020b
// precsrce_test_report                                                                   //04-10-05|0x020b
//*******************************************************************************         //10-29-97|0x020b
//*******************************************************************************         //10-29-97|0x020b
UINT PRECSRCE::precsrce_test_report(void) {                                               //04-10-05|0x020b
//*******************************************************************************         //10-29-97|0x020b
//************************************************************************                //04-10-05|0x020b
    switch(BasicTestReport(&test_samples[0], "PRECSRCE"))                                 //04-10-05|0x020b
      {                                                                                   //04-10-05|0x020b
        case Success:                                     return(Success);                //04-10-05|0x020b
        default:                                        ReturnSystemError;                //04-10-05|0x020b
        }                                                                                 //04-10-05|0x020b
}                                                                                         //04-10-05|0x020b
//                                                                                        //05-24-97|0x020b
//***************************************************************************             //04-10-05|0x020c
//***************************************************************************             //04-10-05|0x020d
//******                                                               ******             //04-10-05|0x020e
//******                        constructor                            ******             //04-10-05|0x020f
//******                                                               ******             //04-10-05|0x0210
//***************************************************************************             //04-10-05|0x0211
//***************************************************************************             //04-10-05|0x0212
//*******************************************************************************         //10-29-97|0x0213
//*******************************************************************************         //10-29-97|0x0213
// CONSTRUCTOR                                                                            //04-10-05|0x0213
//*******************************************************************************         //10-29-97|0x0213
//*******************************************************************************         //10-29-97|0x0213
PRECSRCE::PRECSRCE() {                                                                    //04-10-05|0x0213
//***************************************************************************             //04-10-05|0x0214
//***************************************************************************             //04-10-05|0x0215
    process_addr = 0;                                                                     //06-07-12|0x0216
    { ULONG i;                                                                            //04-10-05|0x0218
      test_samples[NoTestSamples] = TestIndex;                                            //04-10-05|0x0218
      i = 1;                                                                              //04-10-05|0x0218
      while(i<TestIndex)                                                                  //04-10-05|0x0218
        {                                                                                 //04-10-05|0x0218
          test_samples[i] = 0;                                                            //04-10-05|0x0218
          ++i;                                                                            //04-10-05|0x0218
          }                                                                               //04-10-05|0x0218
      }                                                                                   //04-10-05|0x0218
}                                                                                         //04-10-05|0x0219
//                                                                                        //05-24-97|0x0219
//*******************************************************************************         //05-24-97|0x021e
//*******************************************************************************         //05-24-97|0x021e
//****                       END OF FILE                                     ****         //05-24-97|0x021e
//*******************************************************************************         //05-24-97|0x021e
//*******************************************************************************         //05-24-97|0x021e
