//*****************************************************************************           //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//                                                                                        //04-01-97|0x001e
// PRECEDENCE FILE MANAGER                                                                //04-01-97|0x001e
//                                                                                        //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//  Copyright: 2006 Robert H. Adams                                                       //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//  The purpose of this program as well as instructions regarding its use is              //04-01-97|0x001e
//  defined in the associated manual.                                                     //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//  This program is free software; you can redistribute it and/or modify                  //04-01-97|0x001e
//  it under the terms of the GNU General Public License as published by                  //04-01-97|0x001e
//  the Free Software Foundation; either version 2 of the License, or                     //04-01-97|0x001e
//  (at your option) any later version.                                                   //04-01-97|0x001e
//                                                                                        //04-01-97|0x001e
//  This program is distributed in the hope that it will be useful,                       //04-01-97|0x001e
//  but WITHOUT ANY WARRANTY; without even the implied warranty of                        //04-01-97|0x001e
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                         //04-01-97|0x001e
//  GNU General Public License for more details.                                          //04-01-97|0x001e
//                                                                                        //04-01-97|0x001e
//  You should have received a copy of the GNU General Public License                     //04-01-97|0x001e
//  along with this program; if not, write to the Free Software                           //04-01-97|0x001e
//  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA., 02110-1301            //04-01-97|0x001e
//  USA                                                                                   //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//  For further information, please contact Robert Adams:                                 //04-01-97|0x001e
//     EMail:    robert.adams@whatifwe.com                                                //04-01-97|0x001e
//     Mail:     PO Box 156, Sun Valley, Ca. 91353-0155, USA                              //04-01-97|0x001e
//  Or visit the website, "www.whatifwe.com".                                             //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
#ifdef WIN31_SYSTEM                                                                       //05-24-97|0x0023
#include "precwn31.h"                                                                     //05-24-97|0x0023
#endif                                                                                    //05-24-97|0x0023
#ifdef WIN95_SYSTEM                                                                       //05-24-97|0x0023
#include "precwn95.h"                                                                     //05-24-97|0x0023
#endif                                                                                    //05-24-97|0x0023
#ifdef MSDOS_SYSTEM                                                                       //05-24-97|0x0023
#include "precdos.h"                                                                      //05-24-97|0x0023
#endif                                                                                    //05-24-97|0x0023
#include "prechost.h"                                                                     //05-24-97|0x0023
#include "precfile.h"                                                                     //04-01-97|0x0023
#include "precfile.hxx"                                                                   //04-01-97|0x0023
#include "precfile.hpp"                                                                   //04-01-97|0x0023
#include "precdbug.h"                                                                     //check   |0x0026
#include "guicomm.h"                                                                      //04-10-18|0x0027
#include "precdiag.h"                                                                     //04-10-18|0x0028
#include "precform.h"                                                                     //98-01-16|0x0029
#include "precnum.h"                                                                      //12-10-07|0x002a
#include "global.hxx"                                                                     //07-02-02|0x002b
#define Allocate(k) (k##_FAR) calloc(1,sizeof(k))                                         //04-10-18|0x0033
#define Free(k) free(k)                                                                   //04-10-18|0x0033
#define MemSet(i,j,k) memset(i,j,k)                                                       //04-10-18|0x0033
#define MemCCpy(i,j,k,l) Mem_C_Copy((UCHAR_FAR) i, (UCHAR_FAR) j,k,l)                     //04-10-18|0x0033
#define MemCpy(i,j,k) memcpy(i,j,k)                                                       //04-10-18|0x0033
#define LineEnd 0x0d                                                                      //04-10-18|0x0033
#define StrLen(i) strlen(i)                                                               //06-09-04|0x0034
#define StrCat(i,j) strcat(i,j)                                                           //06-09-04|0x0034
#define StrCpy(i,j) strcpy(i,j)                                                           //06-09-04|0x0034
#define StrCmp(i,j) Str_Comp((SCHAR_FAR)i,j,256)                                          //06-09-04|0x0034
#define StrRChr(i,j) strrchr(i,j)                                                         //06-09-04|0x0034
#define StrChr(i,j) strchr(i,j)                                                           //06-09-04|0x0034
#define StrToByteInt(i,j) GetInteger(i,&j,0xff)                                           //06-09-04|0x0034
#define StrToInt(i,j) GetInteger(i,&j,0xffff)                                             //06-09-04|0x0034
#define StrToLongInt(i,j) GetInteger(i,&j,0xffffffffL)                                    //06-09-04|0x0034
#define StrToByteHex(i,j) GetHex(i,&j,1)                                                  //06-09-04|0x0034
#define StrToHex(i,j) GetHex(i,&j,2)                                                      //06-09-04|0x0034
#define StrToLongHex(i,j) GetHex(i,&j,4)                                                  //06-09-04|0x0034
#define FindName(i) strrchr(i, '/')                                                       //06-09-04|0x0034
#define FCloseAll fcloseall()                                                             //09-01-10|0x0035
#define CRLF 0x0d                                                                         //09-01-10|0x0035
PRECFILE prec_file;                                                                       //04-01-97|0x005a
static UINT test_samples[TestIndex];                                                      //04-10-22|0x0077
//***************************************************************************             //04-10-18|0x008b
//***************************************************************************             //04-10-18|0x008c
//******                                                               ******             //04-10-18|0x008d
//******                   CLASS MANAGEMENT ROUTINES                   ******             //04-10-18|0x008e
//******---------------------------------------------------------------******             //04-10-18|0x008f
//******                         initial_text                          ******             //04-10-18|0x0090
//******                                                               ******             //04-10-18|0x0091
//***************************************************************************             //04-10-18|0x0092
//***************************************************************************             //04-10-18|0x0093
//*******************************************************************************         //10-29-97|0x0099
//*******************************************************************************         //10-29-97|0x0099
// initial_text                                                                           //05-02-07|0x0099
//*******************************************************************************         //10-29-97|0x0099
//*******************************************************************************         //10-29-97|0x0099
UINT PRECFILE::initial_text(                                                              //05-02-07|0x0099
    TEXT_FILE_DATA_FAR file                                                               //05-02-07|0x0099
    ) {                                                                                   //05-02-07|0x0099
//*******************************************************************************         //10-29-97|0x0099
//***************************************************************************             //04-10-18|0x009d
//***************************************************************************             //04-10-18|0x009e
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //06-07-13|0x00a0
    TestSample(Initial_1);                                                                //04-10-18|0x00a2
    if(text_file_addr     != 0)                            ReturnSystemError;             //05-02-07|0x00a3
    if(file_control_addr  != 0)                            ReturnSystemError;             //05-02-01|0x00a4
    text_file_addr    = file;                                                             //04-01-97|0x00a5
    file_control_addr = &(text_file_addr->file_control);                                  //05-02-07|0x00a6
    MemSet(file_control_addr, 0x00, sizeof(FILE_CONTROL));                                //07-03-23|0x00a7
    FileState = FD_INACTIVE;                                                              //04-01-97|0x00a8
    return(Success);                                                                      //06-07-13|0x00a9
}                                                                                         //04-10-18|0x00aa
//                                                                                        //05-24-97|0x00aa
//***************************************************************************             //06-09-04|0x00ad
//***************************************************************************             //06-09-04|0x00ae
//******                                                               ******             //06-09-04|0x00af
//******                   CLASS MANAGEMENT ROUTINES                   ******             //06-09-04|0x00b0
//******---------------------------------------------------------------******             //06-09-04|0x00b1
//******                       set_display_flag                        ******             //06-09-04|0x00b2
//******                                                               ******             //06-09-04|0x00b3
//***************************************************************************             //06-09-04|0x00b4
//***************************************************************************             //06-09-04|0x00b5
//*******************************************************************************         //10-29-97|0x00bb
//*******************************************************************************         //10-29-97|0x00bb
// set_display_flag                                                                       //06-09-04|0x00bb
//*******************************************************************************         //10-29-97|0x00bb
//*******************************************************************************         //10-29-97|0x00bb
void PRECFILE::set_display_flag(                                                          //06-09-04|0x00bb
    UINT Flag                                                                             //06-09-04|0x00bb
    ) {                                                                                   //06-09-04|0x00bb
//*******************************************************************************         //10-29-97|0x00bb
//***************************************************************************             //06-09-04|0x00bf
//***************************************************************************             //06-09-04|0x00c0
    TestSample(set_display_flag_1);                                                       //06-09-04|0x00c1
    switch(Flag)                                                                          //09-01-10|0x00c2
      {                                                                                   //09-01-10|0x00c3
        case 0:                                                                           //09-01-10|0x00c4
          DisplayOff();                                                                   //09-01-10|0x00c5
          DisableDisplay();                                                               //09-01-10|0x00c6
          return;                                                                         //09-01-10|0x00c7
        default:                                                                          //09-01-10|0x00c8
          EnableDisplay();                                                                //09-01-10|0x00c9
          DisplayOn();                                                                    //09-01-10|0x00ca
          return;                                                                         //09-01-10|0x00cb
        }                                                                                 //09-01-10|0x00cc
}                                                                                         //06-09-04|0x00cd
//                                                                                        //05-24-97|0x00cd
//***************************************************************************             //09-01-10|0x00d0
//***************************************************************************             //09-01-10|0x00d1
//******                                                               ******             //09-01-10|0x00d2
//******                   CLASS MANAGEMENT ROUTINES                   ******             //09-01-10|0x00d3
//******---------------------------------------------------------------******             //09-01-10|0x00d4
//******                       enable_display                          ******             //09-01-10|0x00d5
//******                                                               ******             //09-01-10|0x00d6
//***************************************************************************             //09-01-10|0x00d7
//***************************************************************************             //09-01-10|0x00d8
//*******************************************************************************         //10-29-97|0x00de
//*******************************************************************************         //10-29-97|0x00de
// enable_display                                                                         //09-01-10|0x00de
//*******************************************************************************         //10-29-97|0x00de
//*******************************************************************************         //10-29-97|0x00de
void PRECFILE::enable_display(void) {                                                     //09-01-10|0x00de
//*******************************************************************************         //10-29-97|0x00de
//***************************************************************************             //09-01-10|0x00e0
//***************************************************************************             //09-01-10|0x00e1
    TestSample(enable_display_1);                                                         //09-01-10|0x00e2
    switch(display_state)                                                                 //09-01-10|0x00e3
      {                                                                                   //09-01-10|0x00e4
//***************************************************************************             //09-01-10|0x00e5
//****** Disabled -- Off                                               ******             //09-01-10|0x00e6
//***************************************************************************             //09-01-10|0x00e7
        case 0:                                                                           //09-01-10|0x00e8
          display_state = 2;                                                              //09-01-10|0x00e9
          display_flag  = 0;                                                              //09-01-10|0x00ea
          return;                                                                         //09-01-10|0x00eb
//***************************************************************************             //09-01-10|0x00ec
//****** Disabled -- On                                                ******             //09-01-10|0x00ed
//***************************************************************************             //09-01-10|0x00ee
        case 1:                                                                           //09-01-10|0x00ef
          display_state = 3;                                                              //09-01-10|0x00f0
          display_flag  = 1;                                                              //09-01-10|0x00f1
          return;                                                                         //09-01-10|0x00f2
//***************************************************************************             //09-01-10|0x00f3
//****** Enabled  -- Off                                               ******             //09-01-10|0x00f4
//***************************************************************************             //09-01-10|0x00f5
        case 2:                                                                           //09-01-10|0x00f6
          display_flag  = 0;                                                              //09-01-10|0x00f7
          return;                                                                         //09-01-10|0x00f8
//***************************************************************************             //09-01-10|0x00f9
//****** Enabled  -- On                                                ******             //09-01-10|0x00fa
//***************************************************************************             //09-01-10|0x00fb
        default:                                                                          //09-01-10|0x00fc
          display_flag  = 1;                                                              //09-01-10|0x00fd
          return;                                                                         //09-01-10|0x00fe
        }                                                                                 //09-01-10|0x00ff
}                                                                                         //09-01-10|0x0100
//                                                                                        //05-24-97|0x0100
//***************************************************************************             //09-01-10|0x0103
//***************************************************************************             //09-01-10|0x0104
//******                                                               ******             //09-01-10|0x0105
//******                   CLASS MANAGEMENT ROUTINES                   ******             //09-01-10|0x0106
//******---------------------------------------------------------------******             //09-01-10|0x0107
//******                       disable_display                         ******             //09-01-10|0x0108
//******                                                               ******             //09-01-10|0x0109
//***************************************************************************             //09-01-10|0x010a
//***************************************************************************             //09-01-10|0x010b
//*******************************************************************************         //10-29-97|0x0111
//*******************************************************************************         //10-29-97|0x0111
// disable_display                                                                        //09-01-10|0x0111
//*******************************************************************************         //10-29-97|0x0111
//*******************************************************************************         //10-29-97|0x0111
void PRECFILE::disable_display(void) {                                                    //09-01-10|0x0111
//*******************************************************************************         //10-29-97|0x0111
//***************************************************************************             //09-01-10|0x0113
//***************************************************************************             //09-01-10|0x0114
    TestSample(disable_display_1);                                                        //09-01-10|0x0115
    switch(display_state)                                                                 //09-01-10|0x0116
      {                                                                                   //09-01-10|0x0117
//***************************************************************************             //09-01-10|0x0118
//****** Enabled -- Off                                                ******             //09-01-10|0x0119
//***************************************************************************             //09-01-10|0x011a
        case 2:                                                                           //09-01-10|0x011b
          display_state = 0;                                                              //09-01-10|0x011c
          display_flag  = 0;                                                              //09-01-10|0x011d
          return;                                                                         //09-01-10|0x011e
//***************************************************************************             //09-01-10|0x011f
//****** Enabled  -- On                                                ******             //09-01-10|0x0120
//***************************************************************************             //09-01-10|0x0121
        case 3:                                                                           //09-01-10|0x0122
          display_state = 1;                                                              //09-01-10|0x0123
          display_flag  = 0;                                                              //09-01-10|0x0124
          return;                                                                         //09-01-10|0x0125
//***************************************************************************             //09-01-10|0x0126
//****** Disabled  -- Off                                              ******             //09-01-10|0x0127
//****** Disabled  -- On                                               ******             //09-01-10|0x0128
//***************************************************************************             //09-01-10|0x0129
        default:                                                                          //09-01-10|0x012a
          display_flag  = 0;                                                              //09-01-10|0x012b
          return;                                                                         //09-01-10|0x012c
        }                                                                                 //09-01-10|0x012d
}                                                                                         //09-01-10|0x012e
//                                                                                        //05-24-97|0x012e
//***************************************************************************             //08-04-16|0x0131
//***************************************************************************             //08-04-16|0x0132
//******                                                               ******             //08-04-16|0x0133
//******                   CLASS MANAGEMENT ROUTINES                   ******             //08-04-16|0x0134
//******---------------------------------------------------------------******             //08-04-16|0x0135
//******                         display_on                            ******             //08-04-16|0x0136
//******                                                               ******             //08-04-16|0x0137
//***************************************************************************             //08-04-16|0x0138
//***************************************************************************             //08-04-16|0x0139
//*******************************************************************************         //10-29-97|0x013f
//*******************************************************************************         //10-29-97|0x013f
// display_on                                                                             //08-04-16|0x013f
//*******************************************************************************         //10-29-97|0x013f
//*******************************************************************************         //10-29-97|0x013f
void PRECFILE::display_on(void) {                                                         //08-04-16|0x013f
//*******************************************************************************         //10-29-97|0x013f
//***************************************************************************             //08-04-16|0x0141
//***************************************************************************             //08-04-16|0x0142
    TestSample(display_on_1);                                                             //08-04-16|0x0143
    switch(display_state)                                                                 //08-04-16|0x0144
      {                                                                                   //08-04-16|0x0145
//***************************************************************************             //08-04-16|0x0146
//****** Enabled / Off  --> On                                         ******             //09-01-10|0x0147
//***************************************************************************             //08-04-16|0x0148
        case 2:                                                                           //08-04-16|0x0149
          display_state = 3;                                                              //08-04-16|0x014a
          display_flag  = 1;                                                              //08-04-16|0x014b
          return;                                                                         //08-04-16|0x014c
//***************************************************************************             //08-04-16|0x014d
//****** Enabled / On   --> On                                         ******             //09-01-10|0x014e
//***************************************************************************             //08-04-16|0x014f
        case 3:                                                                           //09-01-10|0x0150
          display_flag  = 1;                                                              //08-04-16|0x0151
          return;                                                                         //08-04-16|0x0152
//***************************************************************************             //08-04-16|0x0153
//****** Disabled / Off --> Off                                        ******             //09-01-10|0x0154
//****** Disabled / On  --> Off                                        ******             //09-01-10|0x0155
//***************************************************************************             //08-04-16|0x0156
        default:                                                                          //08-04-16|0x0157
          display_flag  = 0;                                                              //09-01-10|0x0158
          return;                                                                         //08-04-16|0x0159
        }                                                                                 //08-04-16|0x015a
}                                                                                         //08-04-16|0x015b
//                                                                                        //05-24-97|0x015b
//***************************************************************************             //08-04-16|0x015e
//***************************************************************************             //08-04-16|0x015f
//******                                                               ******             //08-04-16|0x0160
//******                   CLASS MANAGEMENT ROUTINES                   ******             //08-04-16|0x0161
//******---------------------------------------------------------------******             //08-04-16|0x0162
//******                         display_off                           ******             //08-04-16|0x0163
//******                                                               ******             //08-04-16|0x0164
//***************************************************************************             //08-04-16|0x0165
//***************************************************************************             //08-04-16|0x0166
//*******************************************************************************         //10-29-97|0x016c
//*******************************************************************************         //10-29-97|0x016c
// display_off                                                                            //08-04-16|0x016c
//*******************************************************************************         //10-29-97|0x016c
//*******************************************************************************         //10-29-97|0x016c
void PRECFILE::display_off(void) {                                                        //08-04-16|0x016c
//*******************************************************************************         //10-29-97|0x016c
//***************************************************************************             //08-04-16|0x016e
//***************************************************************************             //08-04-16|0x016f
    TestSample(display_off_1);                                                            //08-04-16|0x0170
    switch(display_state)                                                                 //08-04-16|0x0171
      {                                                                                   //08-04-16|0x0172
//***************************************************************************             //08-04-16|0x0173
//****** Enabled / On --> Off                                          ******             //09-01-10|0x0174
//***************************************************************************             //08-04-16|0x0175
        case 3:                                                                           //08-04-16|0x0176
          display_state = 2;                                                              //08-04-16|0x0177
          display_flag  = 0;                                                              //08-04-16|0x0178
          return;                                                                         //08-04-16|0x0179
//***************************************************************************             //08-04-16|0x017a
//****** Enabled  / Off --> Off                                        ******             //09-01-10|0x017b
//****** Disabled / Off --> Off                                        ******             //09-01-10|0x017c
//****** Disabled / On  --> Off                                        ******             //09-01-10|0x017d
//***************************************************************************             //08-04-16|0x017e
        default:                                                                          //08-04-16|0x017f
          display_flag  = 0;                                                              //08-04-16|0x0180
          return;                                                                         //08-04-16|0x0181
        }                                                                                 //08-04-16|0x0182
}                                                                                         //08-04-16|0x0183
//                                                                                        //05-24-97|0x0183
//***************************************************************************             //07-01-30|0x0186
//***************************************************************************             //07-01-30|0x0187
//******                                                               ******             //07-01-30|0x0188
//******                   CLASS MANAGEMENT ROUTINES                   ******             //07-01-30|0x0189
//******---------------------------------------------------------------******             //07-01-30|0x018a
//******                       open_text_state                         ******             //07-01-30|0x018b
//******                                                               ******             //07-01-30|0x018c
//***************************************************************************             //07-01-30|0x018d
//***************************************************************************             //07-01-30|0x018e
//*******************************************************************************         //10-29-97|0x0194
//*******************************************************************************         //10-29-97|0x0194
// open_text_state                                                                        //07-01-30|0x0194
//*******************************************************************************         //10-29-97|0x0194
//*******************************************************************************         //10-29-97|0x0194
UINT PRECFILE::open_text_state(                                                           //07-01-30|0x0194
    TEXT_FILE_DATA_FAR file                                                               //07-01-30|0x0194
    ) {                                                                                   //07-01-30|0x0194
//*******************************************************************************         //10-29-97|0x0194
//***************************************************************************             //07-01-30|0x0198
//***************************************************************************             //07-01-30|0x0199
    TestSample(open_text_state_1);                                                        //07-01-30|0x019a
    return((file->file_control.stream != 0) ? Yes : No);                                  //07-01-30|0x019b
}                                                                                         //07-01-30|0x019c
//                                                                                        //05-24-97|0x019c
//***************************************************************************             //05-01-28|0x019f
//***************************************************************************             //05-01-28|0x01a0
//******                                                               ******             //05-01-28|0x01a1
//******                   CLASS MANAGEMENT ROUTINES                   ******             //05-01-28|0x01a2
//******---------------------------------------------------------------******             //05-01-28|0x01a3
//******                       initial_binary                          ******             //05-01-28|0x01a4
//******                                                               ******             //05-01-28|0x01a5
//***************************************************************************             //05-01-28|0x01a6
//***************************************************************************             //05-01-28|0x01a7
//*******************************************************************************         //10-29-97|0x01ad
//*******************************************************************************         //10-29-97|0x01ad
// initial_binary                                                                         //05-02-07|0x01ad
//*******************************************************************************         //10-29-97|0x01ad
//*******************************************************************************         //10-29-97|0x01ad
UINT PRECFILE::initial_binary(                                                            //05-02-07|0x01ad
    BINARY_FILE_DATA_FAR file                                                             //05-02-07|0x01ad
    ) {                                                                                   //05-02-07|0x01ad
//*******************************************************************************         //10-29-97|0x01ad
//***************************************************************************             //05-01-28|0x01b1
//***************************************************************************             //05-01-28|0x01b2
    TestSample(InitialBinary_1);                                                          //05-01-28|0x01b3
    if(binary_file_addr   != 0)                            ReturnSystemError;             //05-02-07|0x01b4
    if(file_control_addr  != 0)                            ReturnSystemError;             //05-02-01|0x01b5
    binary_file_addr  = file;                                                             //05-02-07|0x01b6
    file_control_addr = &(binary_file_addr->file_control);                                //05-02-07|0x01b7
    if(class_manager(FCB_READY) != Success)                  ReturnSystemError;           //06-08-18|0x01b9
    MemSet(file_control_addr, 0x00, sizeof(FILE_CONTROL));                                //07-03-23|0x01bb
    FileState = FD_INACTIVE;                                                              //05-01-28|0x01bc
    return(Success);                                                                      //05-01-28|0x01bd
}                                                                                         //05-01-28|0x01be
//                                                                                        //05-24-97|0x01be
//***************************************************************************             //04-10-18|0x01c1
//***************************************************************************             //04-10-18|0x01c2
//******                                                               ******             //04-10-18|0x01c3
//******                   CLASS MANAGEMENT ROUTINES                   ******             //04-10-18|0x01c4
//******---------------------------------------------------------------******             //04-10-18|0x01c5
//******                          commit_text                          ******             //04-10-18|0x01c6
//******                                                               ******             //04-10-18|0x01c7
//***************************************************************************             //04-10-18|0x01c8
//***************************************************************************             //04-10-18|0x01c9
//*******************************************************************************         //10-29-97|0x01cf
//*******************************************************************************         //10-29-97|0x01cf
// commit_text                                                                            //05-02-07|0x01cf
//*******************************************************************************         //10-29-97|0x01cf
//*******************************************************************************         //10-29-97|0x01cf
UINT PRECFILE::commit_text(                                                               //05-02-07|0x01cf
    TEXT_FILE_DATA_FAR file                                                               //05-02-07|0x01cf
    ) {                                                                                   //05-02-07|0x01cf
//*******************************************************************************         //10-29-97|0x01cf
//***************************************************************************             //04-10-18|0x01d3
//***************************************************************************             //04-10-18|0x01d4
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //06-07-13|0x01d6
    if(text_file_addr     != 0)                            ReturnSystemError;             //05-02-07|0x01d8
    if(file_control_addr  != 0)                            ReturnSystemError;             //05-02-01|0x01d9
    text_file_addr    = file;                                                             //05-02-07|0x01da
    file_control_addr = &(text_file_addr->file_control);                                  //05-02-07|0x01db
    TestSample(Commit_1);                                                                 //04-10-18|0x01dc
    return(Success);                                                                      //04-11-97|0x01dd
}                                                                                         //04-10-18|0x01de
//                                                                                        //05-24-97|0x01de
//***************************************************************************             //05-02-01|0x01e1
//***************************************************************************             //05-02-01|0x01e2
//******                                                               ******             //05-02-01|0x01e3
//******                   CLASS MANAGEMENT ROUTINES                   ******             //05-02-01|0x01e4
//******---------------------------------------------------------------******             //05-02-01|0x01e5
//******                         commit_binary                         ******             //05-02-01|0x01e6
//******                                                               ******             //05-02-01|0x01e7
//***************************************************************************             //05-02-01|0x01e8
//***************************************************************************             //05-02-01|0x01e9
//*******************************************************************************         //10-29-97|0x01ed
//*******************************************************************************         //10-29-97|0x01ed
// commit_binary                                                                          //05-02-07|0x01ed
//*******************************************************************************         //10-29-97|0x01ed
//*******************************************************************************         //10-29-97|0x01ed
UINT PRECFILE::commit_binary(                                                             //05-02-07|0x01ed
    BINARY_FILE_DATA_FAR file                                                             //05-02-07|0x01ed
    ) {                                                                                   //05-02-07|0x01ed
//*******************************************************************************         //10-29-97|0x01ed
//***************************************************************************             //05-02-01|0x01f1
//***************************************************************************             //05-02-01|0x01f2
    TestSample(CommitBinary_1);                                                           //05-02-01|0x01f3
    if(binary_file_addr   != 0)                            ReturnSystemError;             //05-02-07|0x01f4
    if(file_control_addr  != 0)                            ReturnSystemError;             //05-02-01|0x01f5
    binary_file_addr  = file;                                                             //05-02-07|0x01f6
    file_control_addr = &(binary_file_addr->file_control);                                //05-02-07|0x01f7
    if(class_manager(FCB_READY) != Success)                  ReturnSystemError;           //06-09-04|0x01f9
    return(Success);                                                                      //05-02-01|0x01fb
}                                                                                         //05-02-01|0x01fc
//                                                                                        //05-24-97|0x01fc
//***************************************************************************             //04-10-18|0x01ff
//***************************************************************************             //04-10-18|0x0200
//******                                                               ******             //04-10-18|0x0201
//******                   CLASS MANAGEMENT ROUTINES                   ******             //04-10-18|0x0202
//******---------------------------------------------------------------******             //04-10-18|0x0203
//******                           release                             ******             //04-10-18|0x0204
//******                                                               ******             //04-10-18|0x0205
//***************************************************************************             //04-10-18|0x0206
//***************************************************************************             //04-10-18|0x0207
//*******************************************************************************         //10-29-97|0x020d
//*******************************************************************************         //10-29-97|0x020d
// release                                                                                //04-11-97|0x020d
//*******************************************************************************         //10-29-97|0x020d
//*******************************************************************************         //10-29-97|0x020d
UINT PRECFILE::release(void) {                                                            //04-11-97|0x020d
//*******************************************************************************         //10-29-97|0x020d
//***************************************************************************             //04-10-18|0x0211
//***************************************************************************             //04-10-18|0x0212
    TestSample(Release_1);                                                                //04-10-18|0x0213
    if(class_manager(FC_INACTIVE) != Success)                  ReturnSystemError;         //06-07-13|0x0215
    binary_file_addr  = 0;                                                                //05-02-07|0x0217
    text_file_addr    = 0;                                                                //05-02-07|0x0218
    file_control_addr = 0;                                                                //05-02-01|0x0219
    return(Success);                                                                      //04-10-18|0x021a
}                                                                                         //98-01-16|0x021b
//                                                                                        //05-24-97|0x021b
//***************************************************************************             //07-03-23|0x021e
//***************************************************************************             //07-03-23|0x021f
//******                                                               ******             //07-03-23|0x0220
//******               ROUTINES COMMON TO TEXT AND BINARY              ******             //07-03-23|0x0221
//******---------------------------------------------------------------******             //07-03-23|0x0222
//******                          enter_path                           ******             //07-03-23|0x0223
//******                                                               ******             //07-03-23|0x0224
//***************************************************************************             //07-03-23|0x0225
//***************************************************************************             //07-03-23|0x0226
//*******************************************************************************         //10-29-97|0x022c
//*******************************************************************************         //10-29-97|0x022c
// enter_path                                                                             //07-03-23|0x022c
//*******************************************************************************         //10-29-97|0x022c
//*******************************************************************************         //10-29-97|0x022c
UINT PRECFILE::enter_path(                                                                //07-03-23|0x022c
    SCHAR_FAR pathname                                                                    //07-03-23|0x022c
    ) {                                                                                   //07-03-23|0x022c
//*******************************************************************************         //10-29-97|0x022c
//***************************************************************************             //07-03-23|0x0230
//***************************************************************************             //07-03-23|0x0231
  ULONG size;                                                                        //07-03-23|0x0232
//***************************************************************************             //07-03-23|0x0233
//***************************************************************************             //07-03-23|0x0234
    if(file_control_addr  == 0)                            ReturnSystemError;             //07-03-23|0x0235
    TestSample(EnterPath_1);                                                              //07-03-23|0x0236
//***************************************************************************             //07-03-23|0x0237
    if(class_manager(FC_READY) != Success)                  ReturnSystemError;            //07-03-23|0x0238
    if(file_manager(FD_PATH) != Success)                   ReturnSystemError;             //07-03-23|0x0239
//***************************************************************************             //07-03-23|0x023a
    size  = strlen(pathname);                                                             //07-03-23|0x023b
    if(size > MAX_PATH_SIZE)                ReturnFinish("File Name Length");             //07-03-23|0x023c
//***************************************************************************             //07-03-23|0x023d
    strcpy(FileName, pathname);                                                           //07-03-23|0x023e
    return(Success);                                                                      //07-03-23|0x023f
}                                                                                         //07-03-23|0x0240
//                                                                                        //05-24-97|0x0240
//***************************************************************************             //04-10-18|0x0243
//***************************************************************************             //04-10-18|0x0244
//******                                                               ******             //04-10-18|0x0245
//******               ROUTINES COMMON TO TEXT AND BINARY              ******             //04-10-18|0x0246
//******---------------------------------------------------------------******             //04-10-18|0x0247
//******                          enter_name                           ******             //04-10-18|0x0248
//******                                                               ******             //04-10-18|0x0249
//***************************************************************************             //04-10-18|0x024a
//***************************************************************************             //04-10-18|0x024b
//*******************************************************************************         //10-29-97|0x0251
//*******************************************************************************         //10-29-97|0x0251
// enter_name                                                                             //04-09-97|0x0251
//*******************************************************************************         //10-29-97|0x0251
//*******************************************************************************         //10-29-97|0x0251
UINT PRECFILE::enter_name(                                                                //04-09-97|0x0251
    SCHAR_FAR filename,                                                                   //04-09-97|0x0251
    SCHAR_FAR extent                                                                      //04-09-97|0x0251
    ) {                                                                                   //04-09-97|0x0251
//*******************************************************************************         //10-29-97|0x0251
//***************************************************************************             //04-10-18|0x0255
//***************************************************************************             //04-10-18|0x0256
  ULONG size;                                                                        //06-07-13|0x0257
//***************************************************************************             //06-07-13|0x0258
//***************************************************************************             //06-07-13|0x0259
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x025a
    TestSample(EnterName_1);                                                              //04-10-18|0x025b
//***************************************************************************             //04-10-18|0x025c
    if(class_manager(FC_READY) != Success)                  ReturnSystemError;            //06-07-13|0x025d
    if(file_manager(FD_NAME) != Success)                   ReturnSystemError;             //06-07-13|0x025e
//***************************************************************************             //04-10-18|0x025f
    size  = strlen(FileName);                                                             //07-03-23|0x0260
    size += strlen(filename);                                                             //07-03-23|0x0261
    size += strlen(extent);                                                               //07-03-23|0x0262
    if(size > MAX_PATH_SIZE)                ReturnFinish("File Name Length");             //06-07-13|0x0263
//***************************************************************************             //04-10-18|0x0264
    strcat(FileName, filename);                                                           //07-03-23|0x0265
    strcat(FileName, extent);                                                             //04-09-97|0x0266
    return(Success);                                                                      //04-09-97|0x0267
}                                                                                         //98-01-16|0x0268
//                                                                                        //05-24-97|0x0268
//***************************************************************************             //04-10-18|0x026b
//***************************************************************************             //04-10-18|0x026c
//******                                                               ******             //04-10-18|0x026d
//******            ROUTINES COMMON TO TEXT AND BINARY FILES           ******             //04-10-18|0x026e
//******---------------------------------------------------------------******             //04-10-18|0x026f
//******                              exists                           ******             //04-10-18|0x0270
//******                                                               ******             //04-10-18|0x0271
//***************************************************************************             //04-10-18|0x0272
//***************************************************************************             //04-10-18|0x0273
//*******************************************************************************         //10-29-97|0x0279
//*******************************************************************************         //10-29-97|0x0279
// exists                                                                                 //04-08-06|0x0279
//*******************************************************************************         //10-29-97|0x0279
//*******************************************************************************         //10-29-97|0x0279
UINT PRECFILE::exists(                                                                    //04-08-06|0x0279
    ULONG_FAR time_far                                                                    //04-08-06|0x0279
    ) {                                                                                   //04-08-06|0x0279
//*******************************************************************************         //10-29-97|0x0279
//***************************************************************************             //04-10-18|0x027d
//***************************************************************************             //04-10-18|0x027e
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x027f
    TestSample(Exists_1);                                                                 //04-10-18|0x0280
    if(class_manager(FC_READY) != Success)                  ReturnSystemError;            //06-07-13|0x0282
    if(file_manager(FD_TIME) != Success)                   ReturnSystemError;             //06-09-04|0x0283
      {  struct stat  linux_write_time;                                                   //04-08-06|0x0284
         struct   tm  *local_time;                                                        //04-08-06|0x0284
         FILE *        file;                                                              //04-08-06|0x0284
         *time_far = 0;                                                                   //04-08-06|0x0284
         file = fopen(FileName, "rt");                                                    //04-08-06|0x0284
         if(file != 0)                                                                    //04-08-06|0x0284
           {                                                                              //04-08-06|0x0284
             stat(FileName, &linux_write_time);                                           //04-08-06|0x0284
             local_time = localtime(&linux_write_time.st_mtime);                          //04-08-06|0x0284
             *time_far = local_time->tm_year;                                             //04-08-06|0x0284
             *time_far -= 80;                                                             //04-08-06|0x0284
             *time_far *= 16;                                                             //04-08-06|0x0284
             *time_far += local_time->tm_mon;                                             //04-08-06|0x0284
             *time_far *= 32;                                                             //04-08-06|0x0284
             *time_far += local_time->tm_mday;                                            //04-08-06|0x0284
             *time_far *= 32;                                                             //04-08-06|0x0284
             *time_far += local_time->tm_hour;                                            //04-08-06|0x0284
             *time_far *= 64;                                                             //04-08-06|0x0284
             *time_far += local_time->tm_min;                                             //04-08-06|0x0284
             *time_far *= 32;                                                             //04-08-06|0x0284
             *time_far += (local_time->tm_sec / 2);                                       //04-08-06|0x0284
             fclose(file);                                                                //04-08-06|0x0284
             }                                                                            //04-08-06|0x0284
         }                                                                                //04-08-06|0x0284
  return(Success);                                                                        //04-10-18|0x0286
}                                                                                         //98-01-16|0x0287
//                                                                                        //05-24-97|0x0287
//***************************************************************************             //05-02-01|0x028a
//***************************************************************************             //05-02-01|0x028b
//******                                                               ******             //05-02-01|0x028c
//******            ROUTINES COMMON TO TEXT AND BINARY FILES           ******             //04-10-18|0x028d
//******---------------------------------------------------------------******             //04-10-18|0x028e
//******                            close                              ******             //05-02-01|0x028f
//******                                                               ******             //05-02-01|0x0290
//***************************************************************************             //05-02-01|0x0291
//***************************************************************************             //05-02-01|0x0292
//*******************************************************************************         //10-29-97|0x0298
//*******************************************************************************         //10-29-97|0x0298
// close                                                                                  //04-01-97|0x0298
//*******************************************************************************         //10-29-97|0x0298
//*******************************************************************************         //10-29-97|0x0298
UINT PRECFILE::close(void) {                                                              //04-01-97|0x0298
//*******************************************************************************         //10-29-97|0x0298
//***************************************************************************             //05-02-01|0x029b
//***************************************************************************             //05-02-01|0x029c
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x029d
    TestSample(Close_1);                                                                  //05-02-01|0x029e
    if(class_manager(FC_READY) != Success)                  ReturnSystemError;            //06-07-13|0x02a0
    if(file_manager(FD_INACTIVE) != Success)                   ReturnSystemError;         //06-07-13|0x02a1
    if(FileStream                         == 0)            ReturnSystemError;             //05-04-29|0x02a3
    if(fclose(FileStream))                                 ReturnSystemError;             //05-02-01|0x02a4
    FileStream = 0;                                                                       //05-04-29|0x02a5
    return(Success);                                                                      //04-01-97|0x02a6
}                                                                                         //98-01-16|0x02a7
//                                                                                        //05-24-97|0x02a7
//***************************************************************************             //06-09-04|0x02aa
//***************************************************************************             //06-09-04|0x02ab
//******                                                               ******             //06-09-04|0x02ac
//******            ROUTINES COMMON TO TEXT AND BINARY FILES           ******             //06-09-04|0x02ad
//******---------------------------------------------------------------******             //06-09-04|0x02ae
//******                            delete                             ******             //06-09-04|0x02af
//******                                                               ******             //06-09-04|0x02b0
//***************************************************************************             //06-09-04|0x02b1
//***************************************************************************             //06-09-04|0x02b2
//*******************************************************************************         //10-29-97|0x02b8
//*******************************************************************************         //10-29-97|0x02b8
// delete_file                                                                            //06-09-04|0x02b8
//*******************************************************************************         //10-29-97|0x02b8
//*******************************************************************************         //10-29-97|0x02b8
UINT PRECFILE::delete_file(void) {                                                        //06-09-04|0x02b8
//*******************************************************************************         //10-29-97|0x02b8
//***************************************************************************             //06-09-04|0x02bb
//***************************************************************************             //06-09-04|0x02bc
    if(file_control_addr  == 0)                            ReturnSystemError;             //06-09-04|0x02bd
    TestSample(Delete_1);                                                                 //06-09-04|0x02be
//***************************************************************************             //06-09-04|0x02bf
    if(class_manager(FC_READY) != Success)                  ReturnSystemError;            //06-09-04|0x02c1
    if(file_manager(FD_DELETE) != Success)                   ReturnSystemError;           //06-09-04|0x02c2
//***************************************************************************             //06-09-04|0x02c4
    if(FileStream  != 0)                                                                  //06-09-04|0x02c5
      {                                                                                   //06-09-04|0x02c6
        if(fclose(FileStream))                             ReturnSystemError;             //06-09-04|0x02c7
        FileStream = 0;                                                                   //06-09-04|0x02c8
        }                                                                                 //06-09-04|0x02c9
//***************************************************************************             //06-09-04|0x02ca
    if(remove(FileName) == -1)                                                            //06-09-04|0x02cb
      {                                                                                   //06-09-04|0x02cc
        switch(errno)                                                                     //06-09-04|0x02cd
          {                                                                               //06-09-04|0x02ce
            case 13:          ReturnFinish("CLEANUP -- FILE IN USE");                     //06-09-04|0x02cf
            case 2:                                                    break;             //06-09-04|0x02d0
            case 22:          ReturnFinish("CLEANUP -- INVALID NAME");                    //06-09-04|0x02d1
            default:                                       ReturnSystemError;             //06-09-04|0x02d2
            }                                                                             //06-09-04|0x02d3
        }                                                                                 //06-09-04|0x02d4
    return_test(Delete_1);                                                                //06-09-04|0x02d5
}                                                                                         //06-09-04|0x02d6
//                                                                                        //05-24-97|0x02d6
//***************************************************************************             //04-10-18|0x02d9
//***************************************************************************             //04-10-18|0x02da
//******                                                               ******             //04-10-18|0x02db
//******                      TEXT FILE ROUTINES                       ******             //04-10-18|0x02dc
//******---------------------------------------------------------------******             //04-10-18|0x02dd
//******                          set_tab                              ******             //04-10-18|0x02de
//******                                                               ******             //04-10-18|0x02df
//***************************************************************************             //04-10-18|0x02e0
//***************************************************************************             //04-10-18|0x02e1
//*******************************************************************************         //10-29-97|0x02e4
//*******************************************************************************         //10-29-97|0x02e4
// set_tab                                                                                //04-09-97|0x02e4
//*******************************************************************************         //10-29-97|0x02e4
//*******************************************************************************         //10-29-97|0x02e4
void PRECFILE::set_tab(                                                                   //04-09-97|0x02e4
    UINT Tab                                                                              //04-09-97|0x02e4
    ) {                                                                                   //04-09-97|0x02e4
//*******************************************************************************         //10-29-97|0x02e4
//***************************************************************************             //04-10-18|0x02e8
//***************************************************************************             //04-10-18|0x02e9
    tab = Tab;                                                                            //04-09-97|0x02ea
    return;                                                                               //04-09-97|0x02eb
}                                                                                         //98-01-16|0x02ec
//                                                                                        //05-24-97|0x02ec
//***************************************************************************             //07-08-11|0x02ef
//***************************************************************************             //07-08-11|0x02f0
//******                                                               ******             //07-08-11|0x02f1
//******                      TEXT FILE ROUTINES                       ******             //07-08-11|0x02f2
//******---------------------------------------------------------------******             //07-08-11|0x02f3
//******                          get_tab                              ******             //07-08-11|0x02f4
//******                                                               ******             //07-08-11|0x02f5
//***************************************************************************             //07-08-11|0x02f6
//***************************************************************************             //07-08-11|0x02f7
//*******************************************************************************         //10-29-97|0x02fa
//*******************************************************************************         //10-29-97|0x02fa
// get_tab                                                                                //07-08-11|0x02fa
//*******************************************************************************         //10-29-97|0x02fa
//*******************************************************************************         //10-29-97|0x02fa
UINT PRECFILE::get_tab(void) {                                                            //07-08-11|0x02fa
//*******************************************************************************         //10-29-97|0x02fa
//***************************************************************************             //07-08-11|0x02fe
//***************************************************************************             //07-08-11|0x02ff
    return(tab);                                                                          //07-08-11|0x0300
}                                                                                         //07-08-11|0x0301
//                                                                                        //05-24-97|0x0301
//***************************************************************************             //04-10-18|0x0304
//***************************************************************************             //04-10-18|0x0305
//******                                                               ******             //04-10-18|0x0306
//******                      TEXT FILE ROUTINES                       ******             //04-10-18|0x0307
//******---------------------------------------------------------------******             //04-10-18|0x0308
//******                            open_text                          ******             //04-10-18|0x0309
//******                                                               ******             //04-10-18|0x030a
//***************************************************************************             //04-10-18|0x030b
//***************************************************************************             //04-10-18|0x030c
//*******************************************************************************         //10-29-97|0x0312
//*******************************************************************************         //10-29-97|0x0312
// open_text                                                                              //05-01-97|0x0312
//*******************************************************************************         //10-29-97|0x0312
//*******************************************************************************         //10-29-97|0x0312
UINT PRECFILE::open_text(void) {                                                          //05-01-97|0x0312
//*******************************************************************************         //10-29-97|0x0312
//***************************************************************************             //04-10-18|0x0316
//***************************************************************************             //04-10-18|0x0317
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //06-07-13|0x0319
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x031b
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x031c
    TestSample(OpenText_1);                                                               //04-10-18|0x031d
    if(file_manager(FD_OPEN_TEXT) != Success)                   ReturnSystemError;        //06-07-13|0x031f
    if(FileStream != 0)                               ReturnSystemError;                  //10-08-19|0x0320
    FileStream = fopen(FileName,  "rb");                                                  //10-08-19|0x0320
    if(FileStream == 0)                       ReturnFinish("Open Text");                  //10-08-19|0x0320
//***************************************************************************             //06-07-13|0x0321
    TextLineNo      = 0;                                                                  //04-09-23|0x0322
    TextNextPos     = 0;                                                                  //04-09-23|0x0323
//***************************************************************************             //06-08-26|0x0324
    if(fseek(FileStream,0,SEEK_END))                       ReturnSystemError;             //09-09-25|0x0325
    if((TextLength = ftell(FileStream)) == -1)             ReturnSystemError;             //09-09-25|0x0326
    if(fseek(FileStream,0,SEEK_SET))                       ReturnSystemError;             //09-09-25|0x0327
//***************************************************************************             //06-08-26|0x0328
  TextReadState = 2286; // READ_START                                                     //06-08-26|0x0329
  TextGetState = 2286; // FT_READ_LINE                                                    //06-08-26|0x032a
//***************************************************************************             //06-08-26|0x032b
    return(Success);                                                                      //04-09-23|0x032c
}                                                                                         //98-01-16|0x032d
//                                                                                        //05-24-97|0x032d
//***************************************************************************             //07-08-11|0x0330
//***************************************************************************             //07-08-11|0x0331
//******                                                               ******             //07-08-11|0x0332
//******                      TEXT FILE ROUTINES                       ******             //07-08-11|0x0333
//******---------------------------------------------------------------******             //07-08-11|0x0334
//******                       text_read_status                        ******             //07-08-11|0x0335
//******                                                               ******             //07-08-11|0x0336
//***************************************************************************             //07-08-11|0x0337
//***************************************************************************             //07-08-11|0x0338
//*******************************************************************************         //10-29-97|0x033e
//*******************************************************************************         //10-29-97|0x033e
// text_read_status                                                                       //05-01-97|0x033e
//*******************************************************************************         //10-29-97|0x033e
//*******************************************************************************         //10-29-97|0x033e
UINT PRECFILE::text_read_status(void) {                                                   //05-01-97|0x033e
//*******************************************************************************         //10-29-97|0x033e
//***************************************************************************             //07-08-11|0x0342
//***************************************************************************             //07-08-11|0x0343
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //07-08-11|0x0344
    if(text_file_addr     == 0)                            ReturnSystemError;             //07-08-11|0x0346
    if(file_control_addr  == 0)                            ReturnSystemError;             //07-08-11|0x0347
    TestSample(text_read_status_1);                                                       //07-08-11|0x0348
    if(file_manager(FD_READ_TEXT) != Success)                   ReturnSystemError;        //07-08-11|0x034a
//***************************************************************************             //07-08-11|0x034b
    switch(end_of_textfile())                                                             //07-08-11|0x034c
      {                                                                                   //07-08-11|0x034d
        case Yes:                                                return(Yes);             //07-08-11|0x034e
        case No:                                                 return(No);              //07-08-11|0x034f
        default:                                           ReturnSystemError;             //07-08-11|0x0350
        }                                                                                 //07-08-11|0x0351
}                                                                                         //07-08-11|0x0354
//                                                                                        //05-24-97|0x0354
//***************************************************************************             //04-10-18|0x0357
//***************************************************************************             //04-10-18|0x0358
//******                                                               ******             //04-10-18|0x0359
//******                      TEXT FILE ROUTINES                       ******             //04-10-18|0x035a
//******---------------------------------------------------------------******             //04-10-18|0x035b
//******                          read text                            ******             //04-10-18|0x035c
//******                                                               ******             //04-10-18|0x035d
//***************************************************************************             //04-10-18|0x035e
//***************************************************************************             //04-10-18|0x035f
//*******************************************************************************         //10-29-97|0x0367
//*******************************************************************************         //10-29-97|0x0367
// read_text                                                                              //06-07-13|0x0367
//*******************************************************************************         //10-29-97|0x0367
//*******************************************************************************         //10-29-97|0x0367
UINT PRECFILE::read_text(                                                                 //06-07-13|0x0367
    TOKENS_FAR tokens_far                                                                 //06-07-13|0x0367
    ) {                                                                                   //06-07-13|0x0367
//*******************************************************************************         //10-29-97|0x0367
//***************************************************************************             //04-10-18|0x036a
//***************************************************************************             //04-10-18|0x036b
    TestSample(ReadText_1);                                                               //04-10-18|0x036c
//---------------------------------------------------------------------------             //06-07-13|0x036d
    if(text_file_addr               == 0)                  ReturnSystemError;             //05-02-07|0x036e
    if(file_control_addr            == 0)                  ReturnSystemError;             //05-02-01|0x036f
//---------------------------------------------------------------------------             //06-07-13|0x0370
    tokens_addr = tokens_far;                                                             //06-08-29|0x0371
//---------------------------------------------------------------------------             //06-07-13|0x0372
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //06-07-13|0x0373
//***************************************************************************             //06-07-13|0x0374
//***************************************************************************             //06-07-13|0x0375
  TextRunFlag = 1;                                                                        //06-08-26|0x0376
  while(TextRunFlag != 0)                                                                 //06-08-26|0x0376
  {                                                                                       //06-08-26|0x0376
    switch(TextReadState)                                                                 //06-08-26|0x0376
    {                                                                                     //06-08-26|0x0376
//---------------------------------------------------------------------------             //06-08-26|0x0377
      case 2286: // READ_START                                                            //06-08-29|0x0378
        switch(initial_read_text())                                                       //06-08-29|0x0378
        {                                                                                 //06-08-29|0x0378
          case Success:                                                                   //06-08-29|0x0378
            TextRunFlag = 1;                                                              //06-08-29|0x0378
            TextReadState = 38989; // FIRST_READ                                          //06-08-29|0x0378
            break;                                                                        //06-08-29|0x0378
          default:                                                                        //06-08-29|0x0378
            TextStatus = SystemError;                                                     //06-08-29|0x0378
            TextRunFlag = 0;                                                              //06-08-29|0x0378
            SystemMsg;                                                                    //06-08-29|0x0378
            break;                                                                        //06-08-29|0x0378
        }                                                                                 //06-08-29|0x0378
        break;                                                                            //06-08-29|0x0378
//---------------------------------------------------------------------------             //06-08-26|0x0379
      case 38989: // FIRST_READ                                                           //07-08-11|0x037a
        switch(GetLine)                                                                   //07-08-11|0x037a
        {                                                                                 //07-08-11|0x037a
          case Success:                                                                   //07-08-11|0x037a
            TextRunFlag = 1;                                                              //07-08-11|0x037a
            TextReadState = 7580; // LINE_TEST                                            //07-08-11|0x037a
            break;                                                                        //07-08-11|0x037a
          case Display:                                                                   //07-08-11|0x037a
            TextReadState = 63451; // LINE_DISPLAY                                        //07-08-11|0x037a
            TextStatus = Display;                                                         //07-08-11|0x037a
            TextRunFlag = 0;                                                              //07-08-11|0x037a
            break;                                                                        //07-08-11|0x037a
          case UserError:                                                                 //07-08-11|0x037a
            TextReadState = 2286; // READ_START                                           //07-08-11|0x037a
            TextStatus = UserError;                                                       //07-08-11|0x037a
            TextRunFlag = 0;                                                              //07-08-11|0x037a
            break;                                                                        //07-08-11|0x037a
          default:                                                                        //07-08-11|0x037a
            TextStatus = SystemError;                                                     //07-08-11|0x037a
            TextRunFlag = 0;                                                              //07-08-11|0x037a
            SystemMsg;                                                                    //07-08-11|0x037a
            break;                                                                        //07-08-11|0x037a
        }                                                                                 //07-08-11|0x037a
        break;                                                                            //07-08-11|0x037a
//---------------------------------------------------------------------------             //06-08-26|0x037b
      case 7580: // LINE_TEST                                                             //06-08-26|0x037c
        switch(LineTest)                                                                  //06-08-26|0x037c
        {                                                                                 //06-08-26|0x037c
          case Yes:                                                                       //06-08-26|0x037c
            TextRunFlag = 1;                                                              //06-08-26|0x037c
            TextReadState = 30218; // COMMAND                                             //06-08-26|0x037c
            break;                                                                        //06-08-26|0x037c
          case No:                                                                        //06-08-26|0x037c
            TextRunFlag = 1;                                                              //06-08-26|0x037c
            TextReadState = 38989; // FIRST_READ                                          //06-08-26|0x037c
            break;                                                                        //06-08-26|0x037c
          case UserError:                                                                 //06-08-26|0x037c
            TextReadState = 2286; // READ_START                                           //06-08-26|0x037c
            TextStatus = UserError;                                                       //06-08-26|0x037c
            TextRunFlag = 0;                                                              //06-08-26|0x037c
            break;                                                                        //06-08-26|0x037c
          case FileDone:                                                                  //06-08-26|0x037c
            TextReadState = 2286; // READ_START                                           //06-08-26|0x037c
            TextStatus = FileDone;                                                        //06-08-26|0x037c
            TextRunFlag = 0;                                                              //06-08-26|0x037c
            break;                                                                        //06-08-26|0x037c
          default:                                                                        //06-08-26|0x037c
            TextStatus = SystemError;                                                     //06-08-26|0x037c
            TextRunFlag = 0;                                                              //06-08-26|0x037c
            SystemMsg;                                                                    //06-08-26|0x037c
            break;                                                                        //06-08-26|0x037c
        }                                                                                 //06-08-26|0x037c
        break;                                                                            //06-08-26|0x037c
      case 63451: // LINE_DISPLAY                                                         //07-08-11|0x037d
        switch(LineTest)                                                                  //07-08-11|0x037d
        {                                                                                 //07-08-11|0x037d
          case Yes:                                                                       //07-08-11|0x037d
            TextRunFlag = 1;                                                              //07-08-11|0x037d
            TextReadState = 30218; // COMMAND                                             //07-08-11|0x037d
            break;                                                                        //07-08-11|0x037d
          case No:                                                                        //07-08-11|0x037d
            TextRunFlag = 1;                                                              //07-08-11|0x037d
            TextReadState = 38989; // FIRST_READ                                          //07-08-11|0x037d
            break;                                                                        //07-08-11|0x037d
          case UserError:                                                                 //07-08-11|0x037d
            TextReadState = 2286; // READ_START                                           //07-08-11|0x037d
            TextStatus = UserError;                                                       //07-08-11|0x037d
            TextRunFlag = 0;                                                              //07-08-11|0x037d
            break;                                                                        //07-08-11|0x037d
          case FileDone:                                                                  //07-08-11|0x037d
            TextReadState = 2286; // READ_START                                           //07-08-11|0x037d
            TextStatus = FileDone;                                                        //07-08-11|0x037d
            TextRunFlag = 0;                                                              //07-08-11|0x037d
            break;                                                                        //07-08-11|0x037d
          default:                                                                        //07-08-11|0x037d
            TextStatus = SystemError;                                                     //07-08-11|0x037d
            TextRunFlag = 0;                                                              //07-08-11|0x037d
            SystemMsg;                                                                    //07-08-11|0x037d
            break;                                                                        //07-08-11|0x037d
        }                                                                                 //07-08-11|0x037d
        break;                                                                            //07-08-11|0x037d
//---------------------------------------------------------------------------             //06-08-26|0x037e
      case 30218: // COMMAND                                                              //06-08-26|0x037f
        switch(GetToken)                                                                  //06-08-26|0x037f
        {                                                                                 //06-08-26|0x037f
          case Success:                                                                   //06-08-26|0x037f
            TextRunFlag = 1;                                                              //06-08-26|0x037f
            TextReadState = 55081; // FIRST_DELIM                                         //06-08-26|0x037f
            break;                                                                        //06-08-26|0x037f
          case UserError:                                                                 //06-08-26|0x037f
            TextReadState = 2286; // READ_START                                           //06-08-26|0x037f
            TextStatus = UserError;                                                       //06-08-26|0x037f
            TextRunFlag = 0;                                                              //06-08-26|0x037f
            break;                                                                        //06-08-26|0x037f
          default:                                                                        //06-08-26|0x037f
            TextStatus = SystemError;                                                     //06-08-26|0x037f
            TextRunFlag = 0;                                                              //06-08-26|0x037f
            SystemMsg;                                                                    //06-08-26|0x037f
            break;                                                                        //06-08-26|0x037f
        }                                                                                 //06-08-26|0x037f
        break;                                                                            //06-08-26|0x037f
//---------------------------------------------------------------------------             //06-08-26|0x0380
      case 55081: // FIRST_DELIM                                                          //06-08-26|0x0381
        switch(FirstDelim)                                                                //06-08-26|0x0381
        {                                                                                 //06-08-26|0x0381
          case No:                                                                        //06-08-26|0x0381
            TextRunFlag = 1;                                                              //06-08-26|0x0381
            TextReadState = 19000; // END_TEST                                            //06-08-26|0x0381
            break;                                                                        //06-08-26|0x0381
          case Yes:                                                                       //06-08-26|0x0381
            TextRunFlag = 1;                                                              //06-08-26|0x0381
            TextReadState = 60983; // LINE_END                                            //06-08-26|0x0381
            break;                                                                        //06-08-26|0x0381
          case UserError:                                                                 //06-08-26|0x0381
            TextReadState = 2286; // READ_START                                           //06-08-26|0x0381
            TextStatus = UserError;                                                       //06-08-26|0x0381
            TextRunFlag = 0;                                                              //06-08-26|0x0381
            break;                                                                        //06-08-26|0x0381
          default:                                                                        //06-08-26|0x0381
            TextStatus = SystemError;                                                     //06-08-26|0x0381
            TextRunFlag = 0;                                                              //06-08-26|0x0381
            SystemMsg;                                                                    //06-08-26|0x0381
            break;                                                                        //06-08-26|0x0381
        }                                                                                 //06-08-26|0x0381
        break;                                                                            //06-08-26|0x0381
//---------------------------------------------------------------------------             //06-08-26|0x0382
      case 19000: // END_TEST                                                             //06-08-26|0x0383
        switch(EndTest)                                                                   //06-08-26|0x0383
        {                                                                                 //06-08-26|0x0383
          case No:                                                                        //06-08-26|0x0383
            TextRunFlag = 1;                                                              //06-08-26|0x0383
            TextReadState = 53798; // ARG_TEST                                            //06-08-26|0x0383
            break;                                                                        //06-08-26|0x0383
          case Yes:                                                                       //06-08-26|0x0383
            TextRunFlag = 1;                                                              //06-08-26|0x0383
            TextReadState = 62725; // NEXT_READ                                           //06-08-26|0x0383
            break;                                                                        //06-08-26|0x0383
          case UserError:                                                                 //06-08-26|0x0383
            TextReadState = 2286; // READ_START                                           //06-08-26|0x0383
            TextStatus = UserError;                                                       //06-08-26|0x0383
            TextRunFlag = 0;                                                              //06-08-26|0x0383
            break;                                                                        //06-08-26|0x0383
          default:                                                                        //06-08-26|0x0383
            TextStatus = SystemError;                                                     //06-08-26|0x0383
            TextRunFlag = 0;                                                              //06-08-26|0x0383
            SystemMsg;                                                                    //06-08-26|0x0383
            break;                                                                        //06-08-26|0x0383
        }                                                                                 //06-08-26|0x0383
        break;                                                                            //06-08-26|0x0383
//***************************************************************************             //06-08-26|0x0384
      case 62725: // NEXT_READ                                                            //07-08-11|0x0385
        switch(GetLine)                                                                   //07-08-11|0x0385
        {                                                                                 //07-08-11|0x0385
          case Success:                                                                   //07-08-11|0x0385
            TextRunFlag = 1;                                                              //07-08-11|0x0385
            TextReadState = 17876; // CONT_TEST                                           //07-08-11|0x0385
            break;                                                                        //07-08-11|0x0385
          case Display:                                                                   //07-08-11|0x0385
            TextReadState = 41875; // CONT_DISPLAY                                        //07-08-11|0x0385
            TextStatus = Display;                                                         //07-08-11|0x0385
            TextRunFlag = 0;                                                              //07-08-11|0x0385
            break;                                                                        //07-08-11|0x0385
          case UserError:                                                                 //07-08-11|0x0385
            TextReadState = 2286; // READ_START                                           //07-08-11|0x0385
            TextStatus = UserError;                                                       //07-08-11|0x0385
            TextRunFlag = 0;                                                              //07-08-11|0x0385
            break;                                                                        //07-08-11|0x0385
          default:                                                                        //07-08-11|0x0385
            TextStatus = SystemError;                                                     //07-08-11|0x0385
            TextRunFlag = 0;                                                              //07-08-11|0x0385
            SystemMsg;                                                                    //07-08-11|0x0385
            break;                                                                        //07-08-11|0x0385
        }                                                                                 //07-08-11|0x0385
        break;                                                                            //07-08-11|0x0385
//---------------------------------------------------------------------------             //06-08-26|0x0386
      case 17876: // CONT_TEST                                                            //06-08-26|0x0387
        switch(ContTest)                                                                  //06-08-26|0x0387
        {                                                                                 //06-08-26|0x0387
          case Yes:                                                                       //06-08-26|0x0387
            TextRunFlag = 1;                                                              //06-08-26|0x0387
            TextReadState = 53798; // ARG_TEST                                            //06-08-26|0x0387
            break;                                                                        //06-08-26|0x0387
          case No:                                                                        //06-08-26|0x0387
            TextRunFlag = 1;                                                              //06-08-26|0x0387
            TextReadState = 62725; // NEXT_READ                                           //06-08-26|0x0387
            break;                                                                        //06-08-26|0x0387
          case UserError:                                                                 //06-08-26|0x0387
            TextReadState = 2286; // READ_START                                           //06-08-26|0x0387
            TextStatus = UserError;                                                       //06-08-26|0x0387
            TextRunFlag = 0;                                                              //06-08-26|0x0387
            break;                                                                        //06-08-26|0x0387
          default:                                                                        //06-08-26|0x0387
            TextStatus = SystemError;                                                     //06-08-26|0x0387
            TextRunFlag = 0;                                                              //06-08-26|0x0387
            SystemMsg;                                                                    //06-08-26|0x0387
            break;                                                                        //06-08-26|0x0387
        }                                                                                 //06-08-26|0x0387
        break;                                                                            //06-08-26|0x0387
      case 41875: // CONT_DISPLAY                                                         //07-08-11|0x0388
        switch(ContTest)                                                                  //07-08-11|0x0388
        {                                                                                 //07-08-11|0x0388
          case Yes:                                                                       //07-08-11|0x0388
            TextRunFlag = 1;                                                              //07-08-11|0x0388
            TextReadState = 53798; // ARG_TEST                                            //07-08-11|0x0388
            break;                                                                        //07-08-11|0x0388
          case No:                                                                        //07-08-11|0x0388
            TextRunFlag = 1;                                                              //07-08-11|0x0388
            TextReadState = 62725; // NEXT_READ                                           //07-08-11|0x0388
            break;                                                                        //07-08-11|0x0388
          case UserError:                                                                 //07-08-11|0x0388
            TextReadState = 2286; // READ_START                                           //07-08-11|0x0388
            TextStatus = UserError;                                                       //07-08-11|0x0388
            TextRunFlag = 0;                                                              //07-08-11|0x0388
            break;                                                                        //07-08-11|0x0388
          default:                                                                        //07-08-11|0x0388
            TextStatus = SystemError;                                                     //07-08-11|0x0388
            TextRunFlag = 0;                                                              //07-08-11|0x0388
            SystemMsg;                                                                    //07-08-11|0x0388
            break;                                                                        //07-08-11|0x0388
        }                                                                                 //07-08-11|0x0388
        break;                                                                            //07-08-11|0x0388
//***************************************************************************             //06-08-26|0x0389
      case 53798: // ARG_TEST                                                             //06-08-26|0x038a
        switch(TypeToken)                                                                 //06-08-26|0x038a
        {                                                                                 //06-08-26|0x038a
          case Success:                                                                   //06-08-26|0x038a
            TextRunFlag = 1;                                                              //06-08-26|0x038a
            TextReadState = 56642; // ARG_TYPE                                            //06-08-26|0x038a
            break;                                                                        //06-08-26|0x038a
          case UserError:                                                                 //06-08-26|0x038a
            TextReadState = 2286; // READ_START                                           //06-08-26|0x038a
            TextStatus = UserError;                                                       //06-08-26|0x038a
            TextRunFlag = 0;                                                              //06-08-26|0x038a
            break;                                                                        //06-08-26|0x038a
          default:                                                                        //06-08-26|0x038a
            TextStatus = SystemError;                                                     //06-08-26|0x038a
            TextRunFlag = 0;                                                              //06-08-26|0x038a
            SystemMsg;                                                                    //06-08-26|0x038a
            break;                                                                        //06-08-26|0x038a
        }                                                                                 //06-08-26|0x038a
        break;                                                                            //06-08-26|0x038a
//---------------------------------------------------------------------------             //06-08-26|0x038b
      case 56642: // ARG_TYPE                                                             //06-08-26|0x038c
        switch(StringType)                                                                //06-08-26|0x038c
        {                                                                                 //06-08-26|0x038c
          case I_STRING:                                                                  //06-08-26|0x038c
            TextRunFlag = 1;                                                              //06-08-26|0x038c
            TextReadState = 45537; // STRING                                              //06-08-26|0x038c
            break;                                                                        //06-08-26|0x038c
          case I_TOKEN:                                                                   //06-08-26|0x038c
            TextRunFlag = 1;                                                              //06-08-26|0x038c
            TextReadState = 53360; // TEXT                                                //06-08-26|0x038c
            break;                                                                        //06-08-26|0x038c
          case I_NAME:                                                                    //06-08-26|0x038c
            TextRunFlag = 1;                                                              //06-08-26|0x038c
            TextReadState = 55279; // TOKEN                                               //06-08-26|0x038c
            break;                                                                        //06-08-26|0x038c
          default:                                                                        //06-08-26|0x038c
            TextStatus = SystemError;                                                     //06-08-26|0x038c
            TextRunFlag = 0;                                                              //06-08-26|0x038c
            SystemMsg;                                                                    //06-08-26|0x038c
            break;                                                                        //06-08-26|0x038c
        }                                                                                 //06-08-26|0x038c
        break;                                                                            //06-08-26|0x038c
//---------------------------------------------------------------------------             //06-08-26|0x038d
      case 55279: // TOKEN                                                                //06-08-26|0x038e
        switch(GetToken)                                                                  //06-08-26|0x038e
        {                                                                                 //06-08-26|0x038e
          case Success:                                                                   //06-08-26|0x038e
            TextRunFlag = 1;                                                              //06-08-26|0x038e
            TextReadState = 22366; // NEXT_DELIM                                          //06-08-26|0x038e
            break;                                                                        //06-08-26|0x038e
          case UserError:                                                                 //06-08-26|0x038e
            TextReadState = 2286; // READ_START                                           //06-08-26|0x038e
            TextStatus = UserError;                                                       //06-08-26|0x038e
            TextRunFlag = 0;                                                              //06-08-26|0x038e
            break;                                                                        //06-08-26|0x038e
          default:                                                                        //06-08-26|0x038e
            TextStatus = SystemError;                                                     //06-08-26|0x038e
            TextRunFlag = 0;                                                              //06-08-26|0x038e
            SystemMsg;                                                                    //06-08-26|0x038e
            break;                                                                        //06-08-26|0x038e
        }                                                                                 //06-08-26|0x038e
        break;                                                                            //06-08-26|0x038e
//---------------------------------------------------------------------------             //06-08-26|0x038f
      case 53360: // TEXT                                                                 //06-08-26|0x0390
        switch(GetText)                                                                   //06-08-26|0x0390
        {                                                                                 //06-08-26|0x0390
          case Success:                                                                   //06-08-26|0x0390
            TextRunFlag = 1;                                                              //06-08-26|0x0390
            TextReadState = 22366; // NEXT_DELIM                                          //06-08-26|0x0390
            break;                                                                        //06-08-26|0x0390
          case UserError:                                                                 //06-08-26|0x0390
            TextReadState = 2286; // READ_START                                           //06-08-26|0x0390
            TextStatus = UserError;                                                       //06-08-26|0x0390
            TextRunFlag = 0;                                                              //06-08-26|0x0390
            break;                                                                        //06-08-26|0x0390
          default:                                                                        //06-08-26|0x0390
            TextStatus = SystemError;                                                     //06-08-26|0x0390
            TextRunFlag = 0;                                                              //06-08-26|0x0390
            SystemMsg;                                                                    //06-08-26|0x0390
            break;                                                                        //06-08-26|0x0390
        }                                                                                 //06-08-26|0x0390
        break;                                                                            //06-08-26|0x0390
//---------------------------------------------------------------------------             //07-02-02|0x0391
      case 45537: // STRING                                                               //07-02-02|0x0392
        switch(GetString)                                                                 //07-02-02|0x0392
        {                                                                                 //07-02-02|0x0392
          case Success:                                                                   //07-02-02|0x0392
            TextRunFlag = 1;                                                              //07-02-02|0x0392
            TextReadState = 22366; // NEXT_DELIM                                          //07-02-02|0x0392
            break;                                                                        //07-02-02|0x0392
          case UserError:                                                                 //07-02-02|0x0392
            TextReadState = 2286; // READ_START                                           //07-02-02|0x0392
            TextStatus = UserError;                                                       //07-02-02|0x0392
            TextRunFlag = 0;                                                              //07-02-02|0x0392
            break;                                                                        //07-02-02|0x0392
          default:                                                                        //07-02-02|0x0392
            TextStatus = SystemError;                                                     //07-02-02|0x0392
            TextRunFlag = 0;                                                              //07-02-02|0x0392
            SystemMsg;                                                                    //07-02-02|0x0392
            break;                                                                        //07-02-02|0x0392
        }                                                                                 //07-02-02|0x0392
        break;                                                                            //07-02-02|0x0392
//***************************************************************************             //06-08-26|0x0393
      case 22366: // NEXT_DELIM                                                           //06-08-26|0x0394
        switch(NextDelim)                                                                 //06-08-26|0x0394
        {                                                                                 //06-08-26|0x0394
          case No:                                                                        //06-08-26|0x0394
            TextRunFlag = 1;                                                              //06-08-26|0x0394
            TextReadState = 19000; // END_TEST                                            //06-08-26|0x0394
            break;                                                                        //06-08-26|0x0394
          case Yes:                                                                       //06-08-26|0x0394
            TextRunFlag = 1;                                                              //06-08-26|0x0394
            TextReadState = 60983; // LINE_END                                            //06-08-26|0x0394
            break;                                                                        //06-08-26|0x0394
          case UserError:                                                                 //06-08-26|0x0394
            TextReadState = 2286; // READ_START                                           //06-08-26|0x0394
            TextStatus = UserError;                                                       //06-08-26|0x0394
            TextRunFlag = 0;                                                              //06-08-26|0x0394
            break;                                                                        //06-08-26|0x0394
          default:                                                                        //06-08-26|0x0394
            TextStatus = SystemError;                                                     //06-08-26|0x0394
            TextRunFlag = 0;                                                              //06-08-26|0x0394
            SystemMsg;                                                                    //06-08-26|0x0394
            break;                                                                        //06-08-26|0x0394
        }                                                                                 //06-08-26|0x0394
        break;                                                                            //06-08-26|0x0394
//---------------------------------------------------------------------------             //06-08-26|0x0395
      case 60983: // LINE_END                                                             //06-08-26|0x0396
        switch(EndTest)                                                                   //06-08-26|0x0396
        {                                                                                 //06-08-26|0x0396
          case No:                                                                        //06-08-26|0x0396
            TextRunFlag = 1;                                                              //06-08-26|0x0396
            TextReadState = 52669; // LINE_ERROR                                          //06-08-26|0x0396
            break;                                                                        //06-08-26|0x0396
          case Yes:                                                                       //06-08-26|0x0396
            TextRunFlag = 1;                                                              //06-08-26|0x0396
            TextReadState = 43532; // LINE_DONE                                           //06-08-26|0x0396
            break;                                                                        //06-08-26|0x0396
          case UserError:                                                                 //06-08-26|0x0396
            TextReadState = 2286; // READ_START                                           //06-08-26|0x0396
            TextStatus = UserError;                                                       //06-08-26|0x0396
            TextRunFlag = 0;                                                              //06-08-26|0x0396
            break;                                                                        //06-08-26|0x0396
          default:                                                                        //06-08-26|0x0396
            TextStatus = SystemError;                                                     //06-08-26|0x0396
            TextRunFlag = 0;                                                              //06-08-26|0x0396
            SystemMsg;                                                                    //06-08-26|0x0396
            break;                                                                        //06-08-26|0x0396
        }                                                                                 //06-08-26|0x0396
        break;                                                                            //06-08-26|0x0396
//***************************************************************************             //06-08-26|0x0397
      case 52669: // LINE_ERROR                                                           //06-11-18|0x0398
        switch(IllegalLineEnd)                                                            //06-11-18|0x0398
        {                                                                                 //06-11-18|0x0398
          case UserError:                                                                 //06-11-18|0x0398
            TextReadState = 2286; // READ_START                                           //06-11-18|0x0398
            TextStatus = UserError;                                                       //06-11-18|0x0398
            TextRunFlag = 0;                                                              //06-11-18|0x0398
            break;                                                                        //06-11-18|0x0398
          default:                                                                        //06-11-18|0x0398
            TextStatus = SystemError;                                                     //06-11-18|0x0398
            TextRunFlag = 0;                                                              //06-11-18|0x0398
            SystemMsg;                                                                    //06-11-18|0x0398
            break;                                                                        //06-11-18|0x0398
        }                                                                                 //06-11-18|0x0398
        break;                                                                            //06-11-18|0x0398
//---------------------------------------------------------------------------             //06-08-26|0x0399
      case 43532: // LINE_DONE                                                            //06-08-26|0x039a
        TextReadState = 2286; // READ_START                                               //06-08-26|0x039a
        TextStatus = LineDone;                                                            //06-08-26|0x039a
        TextRunFlag = 0;                                                                  //06-08-26|0x039a
        break;                                                                            //06-08-26|0x039a
//***************************************************************************             //06-08-26|0x039b
//***************************************************************************             //06-08-26|0x039c
      default:                                                                            //06-08-26|0x039d
        TextStatus = SystemError;                                                         //06-08-26|0x039d
        TextRunFlag = 0;                                                                  //06-08-26|0x039d
        SystemMsg;                                                                        //06-08-26|0x039d
        break;                                                                            //06-08-26|0x039d
    }                                                                                     //06-08-26|0x039d
  }                                                                                       //06-08-26|0x039d
//***************************************************************************             //06-08-26|0x039e
    return(TextStatus);                                                                   //06-08-26|0x039f
}                                                                                         //06-08-26|0x03a0
//                                                                                        //05-24-97|0x03a0
//***************************************************************************             //08-04-18|0x03a3
//***************************************************************************             //08-04-18|0x03a4
//******                                                               ******             //08-04-18|0x03a5
//******                      TEXT FILE ROUTINES                       ******             //08-04-18|0x03a6
//******---------------------------------------------------------------******             //08-04-18|0x03a7
//******                          test_line_end                        ******             //08-04-18|0x03a8
//******                                                               ******             //08-04-18|0x03a9
//***************************************************************************             //08-04-18|0x03aa
//***************************************************************************             //08-04-18|0x03ab
//*******************************************************************************         //10-29-97|0x03b0
//*******************************************************************************         //10-29-97|0x03b0
// test_line_end                                                                          //08-04-18|0x03b0
//*******************************************************************************         //10-29-97|0x03b0
//*******************************************************************************         //10-29-97|0x03b0
UINT PRECFILE::test_line_end(                                                             //08-04-18|0x03b0
    SCHAR_FAR Addr                                                                        //08-04-18|0x03b0
    ) {                                                                                   //08-04-18|0x03b0
//*******************************************************************************         //10-29-97|0x03b0
//***************************************************************************             //08-04-18|0x03b3
//***************************************************************************             //08-04-18|0x03b4
  UINT i;                                                                            //12-10-07|0x03b5
//***************************************************************************             //08-04-18|0x03b6
//***************************************************************************             //08-04-18|0x03b7
    TestSample(ReadText_1);                                                               //08-04-18|0x03b8
//---------------------------------------------------------------------------             //08-04-18|0x03b9
    if(text_file_addr               == 0)                  ReturnSystemError;             //08-04-18|0x03ba
    if(file_control_addr            == 0)                  ReturnSystemError;             //08-04-18|0x03bb
//---------------------------------------------------------------------------             //08-04-18|0x03bc
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //08-04-18|0x03bd
    if(file_manager(FD_READ_TEXT) != Success)                   ReturnSystemError;        //08-04-18|0x03be
//***************************************************************************             //08-04-18|0x03bf
    if(StringLength               == 0)                    ReturnSystemError;             //08-04-18|0x03c0
    if(StringChar(StringLength)   != 0)                    ReturnSystemError;             //08-04-18|0x03c1
    if(StringChar(StringLength-1) != 0x0a)                 ReturnSystemError;             //08-04-18|0x03c2
    if(StringPosition             >= StringLength)         ReturnSystemError;             //08-04-18|0x03c3
//***************************************************************************             //08-04-18|0x03c4
    if(   (StringChar(StringPosition) != 0x0a)                                            //09-09-24|0x03c5
       && (StringChar(StringPosition) != 0x0d))                                           //09-09-24|0x03c6
      {                                                                                   //08-04-18|0x03c7
        if(StringChar(StringPosition) != ';')            ReturnSystemError;               //08-04-18|0x03c8
//***************************************************************************             //08-04-18|0x03c9
        i=StringPosition+1;                                                               //11-02-18|0x03ca
        while(i<StringLength)                                                             //11-02-18|0x03cb
          {                                                                               //11-02-18|0x03cc
            if(*Addr == 0)                                                                //08-04-18|0x03cd
              {                                                                           //08-04-18|0x03ce
                MemSet(TextStringAddr, 0x00, sizeof(STRING_DATA));                        //11-02-15|0x03cf
                return_yes(TestLineEnd_1);                                                //08-04-18|0x03d0
                }                                                                         //08-04-18|0x03d1
            if(*Addr != StringChar(i))                                 break;             //11-02-18|0x03d2
            ++Addr;                                                                       //08-04-18|0x03d3
            ++i;                                                                          //11-02-18|0x03d4
            }                                                                             //08-04-18|0x03d5
        }                                                                                 //08-04-18|0x03d6
//***************************************************************************             //08-04-18|0x03d7
    return_no(TestLineEnd_2);                                                             //08-04-18|0x03d8
}                                                                                         //08-04-18|0x03d9
//                                                                                        //05-24-97|0x03d9
//***************************************************************************             //11-02-15|0x03dc
//***************************************************************************             //11-02-15|0x03dd
//******                                                               ******             //11-02-15|0x03de
//******                      TEXT FILE ROUTINES                       ******             //11-02-15|0x03df
//******---------------------------------------------------------------******             //11-02-15|0x03e0
//******                          date_line_end                        ******             //11-02-15|0x03e1
//******                                                               ******             //11-02-15|0x03e2
//***************************************************************************             //11-02-15|0x03e3
//***************************************************************************             //11-02-15|0x03e4
//*******************************************************************************         //10-29-97|0x03e8
//*******************************************************************************         //10-29-97|0x03e8
// date_line_end                                                                          //11-02-15|0x03e8
//*******************************************************************************         //10-29-97|0x03e8
//*******************************************************************************         //10-29-97|0x03e8
UINT PRECFILE::date_line_end(                                                             //11-02-15|0x03e8
    ULONG_FAR DateAddr                                                                    //11-02-15|0x03e8
    ) {                                                                                   //11-02-15|0x03e8
//*******************************************************************************         //10-29-97|0x03e8
//***************************************************************************             //11-02-15|0x03eb
//***************************************************************************             //11-02-15|0x03ec
  WORDS work;                                                                        //11-02-15|0x03ed
  SCHAR_FAR addr;                                                                    //11-02-15|0x03ee
  ULONG date;                                                                        //11-02-15|0x03ef
  ULONG year;                                                                        //11-02-15|0x03f0
  ULONG month;                                                                       //11-02-15|0x03f1
  ULONG day;                                                                         //11-02-15|0x03f2
//***************************************************************************             //11-02-15|0x03f3
    if(text_file_addr               == 0)                  ReturnSystemError;             //11-02-15|0x03f4
    if(file_control_addr            == 0)                  ReturnSystemError;             //11-02-15|0x03f5
//---------------------------------------------------------------------------             //11-02-15|0x03f6
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //11-02-15|0x03f7
    if(file_manager(FD_READ_TEXT) != Success)                   ReturnSystemError;        //11-02-15|0x03f8
//***************************************************************************             //11-02-15|0x03f9
    if(StringLength               == 0)                    ReturnSystemError;             //11-02-15|0x03fa
    if(StringChar(StringLength)   != 0)                    ReturnSystemError;             //11-02-15|0x03fb
    if(StringChar(StringLength-1) != 0x0a)                 ReturnSystemError;             //11-02-15|0x03fc
    if(StringPosition             >= StringLength)         ReturnSystemError;             //11-02-15|0x03fd
//***************************************************************************             //11-02-15|0x03fe
    if(StringChar(StringPosition) == 0x0a)                 return(UserError);             //11-02-15|0x03ff
    if(StringChar(StringPosition) == 0x0d)                 return(UserError);             //11-02-15|0x0400
    if(StringChar(StringPosition) != ';')                ReturnSystemError;               //11-02-15|0x0401
    if((StringPosition+10) >= StringLength)                return(UserError);             //11-02-15|0x0402
//***************************************************************************             //11-02-15|0x0403
    addr = &(StringChar(StringPosition));                                                 //11-02-15|0x0404
//---------------------------------------------------------------------------             //11-02-15|0x0405
    if(*(addr+3)  != '-')                                return(UserError);               //11-02-15|0x0406
    if(*(addr+6)  != '-')                                return(UserError);               //11-02-15|0x0407
//***************************************************************************             //11-02-15|0x0408
    work.ulong = 0;                                                                       //11-02-15|0x0409
//---------------------------------------------------------------------------             //11-02-15|0x040a
    work.char0 = *(addr+1);                                                               //11-02-15|0x040b
    work.char1 = *(addr+2);                                                               //11-02-15|0x040c
    if(StrToByteInt(&work.char0, year) == 0)               return(UserError);             //11-02-15|0x040d
//---------------------------------------------------------------------------             //11-02-15|0x040e
    work.char0 = *(addr+4);                                                               //11-02-15|0x040f
    work.char1 = *(addr+5);                                                               //11-02-15|0x0410
    if(StrToByteInt(&work.char0, month) == 0)              return(UserError);             //11-02-15|0x0411
    if((--month) >= 12)                                    return(UserError);             //11-02-15|0x0412
//---------------------------------------------------------------------------             //11-02-15|0x0413
    work.char0 = *(addr+7);                                                               //11-02-15|0x0414
    work.char1 = *(addr+8);                                                               //11-02-15|0x0415
    if(StrToByteInt(&work.char0, day) == 0)                return(UserError);             //11-02-15|0x0416
    if((day) >= 32)                                        return(UserError);             //11-02-15|0x0417
//***************************************************************************             //11-02-15|0x0418
    date =  year + 20;                                                                    //11-02-15|0x0419
//---------------------------------------------------------------------------             //11-02-15|0x041a
    date *= 16;                                                                           //11-02-15|0x041b
    date += month;                                                                        //11-02-15|0x041c
//---------------------------------------------------------------------------             //11-02-15|0x041d
    date *= 32;                                                                           //11-02-15|0x041e
    date += day;                                                                          //11-02-15|0x041f
//---------------------------------------------------------------------------             //11-02-15|0x0420
    date *= 32;                                                                           //11-02-15|0x0421
    date *= 64;                                                                           //11-02-15|0x0422
    date *= 32;                                                                           //11-02-15|0x0423
//***************************************************************************             //11-02-15|0x0424
    *DateAddr = date;                                                                     //11-02-15|0x0425
//***************************************************************************             //11-02-15|0x0426
//***************************************************************************             //11-02-15|0x0427
    MemSet(TextStringAddr, 0x00, sizeof(STRING_DATA));                                    //11-02-15|0x0428
    return_test(DateLineEnd_1);                                                           //11-02-15|0x0429
}                                                                                         //11-02-15|0x042a
//                                                                                        //05-24-97|0x042a
//***************************************************************************             //07-02-02|0x042d
//***************************************************************************             //07-02-02|0x042e
//******                                                               ******             //07-02-02|0x042f
//******                      TEXT FILE ROUTINES                       ******             //07-02-02|0x0430
//******---------------------------------------------------------------******             //07-02-02|0x0431
//******                          get text                             ******             //07-02-02|0x0432
//******                                                               ******             //07-02-02|0x0433
//***************************************************************************             //07-02-02|0x0434
//***************************************************************************             //07-02-02|0x0435
//*******************************************************************************         //10-29-97|0x043b
//*******************************************************************************         //10-29-97|0x043b
// get_text                                                                               //07-02-02|0x043b
//*******************************************************************************         //10-29-97|0x043b
//*******************************************************************************         //10-29-97|0x043b
UINT PRECFILE::get_text(                                                                  //07-02-02|0x043b
    STRING_DATA_FAR String_Addr,                                                          //07-02-02|0x043b
    UINT DisplayFlag                                                                      //07-02-02|0x043b
    ) {                                                                                   //07-02-02|0x043b
//*******************************************************************************         //10-29-97|0x043b
//***************************************************************************             //07-02-02|0x043e
//***************************************************************************             //07-02-02|0x043f
    UINT status;                                                                          //07-02-02|0x0440
//***************************************************************************             //07-02-02|0x0441
//***************************************************************************             //07-02-02|0x0442
    TestSample(GetText_1);                                                                //07-02-02|0x0443
    status = get_line(DisplayFlag);                                                       //07-02-02|0x0444
    switch(status)                                                                        //07-02-02|0x0445
      {                                                                                   //07-02-02|0x0446
        case Success:                                                  break;             //07-02-02|0x0447
        case Display:                                                  break;             //07-02-02|0x0448
        case UserError:                                    return(UserError);             //07-02-02|0x0449
        default:                                            ReturnSystemError             //07-02-02|0x044a
        }                                                                                 //07-02-02|0x044b
    MemCpy(String_Addr, TextStringAddr,  sizeof(STRING_DATA));                            //check  2|0x044c
    return(status);                                                                       //07-02-02|0x044d
}                                                                                         //06-08-26|0x044e
//                                                                                        //05-24-97|0x044e
//***************************************************************************             //10-08-19|0x0451
//***************************************************************************             //10-08-19|0x0452
//******                                                               ******             //10-08-19|0x0453
//******                      TEXT FILE ROUTINES                       ******             //10-08-19|0x0454
//******---------------------------------------------------------------******             //10-08-19|0x0455
//******                           put_text                            ******             //10-08-19|0x0456
//******                                                               ******             //10-08-19|0x0457
//***************************************************************************             //10-08-19|0x0458
//***************************************************************************             //10-08-19|0x0459
//*******************************************************************************         //10-29-97|0x045f
//*******************************************************************************         //10-29-97|0x045f
// put_text                                                                               //10-08-19|0x045f
//*******************************************************************************         //10-29-97|0x045f
//*******************************************************************************         //10-29-97|0x045f
UINT PRECFILE::put_text(                                                                  //10-08-19|0x045f
    STRING_DATA_FAR StringAddr                                                            //10-08-19|0x045f
    ) {                                                                                   //10-08-19|0x045f
//*******************************************************************************         //10-29-97|0x045f
//***************************************************************************             //10-08-19|0x0462
//***************************************************************************             //10-08-19|0x0463
    TestSample(PutText_1);                                                                //10-08-19|0x0464
//---------------------------------------------------------------------------             //10-08-19|0x0465
    if(text_file_addr     == 0)                            ReturnSystemError;             //10-08-19|0x0466
    if(file_control_addr  == 0)                            ReturnSystemError;             //10-08-19|0x0467
//---------------------------------------------------------------------------             //10-08-19|0x0468
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //10-08-19|0x0469
//---------------------------------------------------------------------------             //10-08-19|0x046a
    MemCpy(TextStringAddr, StringAddr, sizeof(STRING_DATA));                              //11-02-15|0x046b
//***************************************************************************             //10-08-19|0x046c
    status = Continue;                                                                    //10-08-19|0x046d
    while(status == Continue)                                                             //10-08-19|0x046d
      {                                                                                   //10-08-19|0x046d
        switch(FileState)                                                                 //10-08-19|0x046d
          {                                                                               //10-08-19|0x046d
//---------------------------------------------------------------------------             //10-08-19|0x046e
            case FD_NAME:  BreakCreateText(FT_WRITE_LINE);                                //10-08-19|0x046f
            case FT_NEXT_PUT:  BreakAppendText(FT_WRITE_LINE);                            //10-08-19|0x0470
//---------------------------------------------------------------------------             //10-08-19|0x0471
            case FT_WRITE_LINE:  BreakWriteText(FT_EXIT);                                 //10-08-19|0x0472
            case FT_EXIT:  BreakPutLineExit(FT_WRITE_LINE);                               //10-08-19|0x0473
//---------------------------------------------------------------------------             //10-08-19|0x0474
            default:              ReturnSystemError;                                      //10-08-19|0x0475
            }                                                                             //10-08-19|0x0475
        }                                                                                 //10-08-19|0x0475
//***************************************************************************             //10-08-19|0x0476
    return(status);                                                                       //10-08-19|0x0477
}                                                                                         //10-08-19|0x0478
//                                                                                        //05-24-97|0x0478
//***************************************************************************             //check   |0x047b
//***************************************************************************             //check   |0x047c
//******                                                               ******             //check   |0x047d
//******                      TEXT FILE ROUTINES                       ******             //check   |0x047e
//******---------------------------------------------------------------******             //check   |0x047f
//******                           append_text                         ******             //check   |0x0480
//******                                                               ******             //check   |0x0481
//***************************************************************************             //check   |0x0482
//***************************************************************************             //check   |0x0483
//*******************************************************************************         //10-29-97|0x0489
//*******************************************************************************         //10-29-97|0x0489
// file_append_text                                                                       //check   |0x0489
//*******************************************************************************         //10-29-97|0x0489
//*******************************************************************************         //10-29-97|0x0489
UINT PRECFILE::file_append_text(                                                          //check   |0x0489
    STRING_DATA_FAR StringAddr                                                            //check   |0x0489
    ) {                                                                                   //check   |0x0489
//*******************************************************************************         //10-29-97|0x0489
//***************************************************************************             //check   |0x048c
//***************************************************************************             //check   |0x048d
    TestSample(FileAppendText_1);                                                         //check   |0x048e
//---------------------------------------------------------------------------             //check   |0x048f
    if(text_file_addr     == 0)                            ReturnSystemError;             //check   |0x0490
    if(file_control_addr  == 0)                            ReturnSystemError;             //check   |0x0491
//---------------------------------------------------------------------------             //check   |0x0492
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //check   |0x0493
//---------------------------------------------------------------------------             //check   |0x0494
    MemCpy(TextStringAddr, StringAddr, sizeof(STRING_DATA));                              //check   |0x0495
//***************************************************************************             //check   |0x0496
    status = Continue;                                                                    //check   |0x0497
    while(status == Continue)                                                             //check   |0x0497
      {                                                                                   //check   |0x0497
        switch(FileState)                                                                 //check   |0x0497
          {                                                                               //check   |0x0497
//---------------------------------------------------------------------------             //check   |0x0498
            case FD_NAME:  BreakAppendText(FT_WRITE_LINE);                                //check   |0x0499
            case FT_NEXT_PUT:  BreakAppendText(FT_WRITE_LINE);                            //check   |0x049a
//---------------------------------------------------------------------------             //check   |0x049b
            case FT_WRITE_LINE:  BreakWriteText(FT_EXIT);                                 //check   |0x049c
            case FT_EXIT:  BreakPutLineExit(FT_WRITE_LINE);                               //check   |0x049d
//---------------------------------------------------------------------------             //check   |0x049e
            default:              ReturnSystemError;                                      //check   |0x049f
            }                                                                             //check   |0x049f
        }                                                                                 //check   |0x049f
//***************************************************************************             //check   |0x04a0
    return(status);                                                                       //check   |0x04a1
}                                                                                         //check   |0x04a2
//                                                                                        //05-24-97|0x04a2
//***************************************************************************             //10-08-19|0x04a5
//***************************************************************************             //10-08-19|0x04a6
//******                                                               ******             //10-08-19|0x04a7
//******                      TEXT FILE ROUTINES                       ******             //10-08-19|0x04a8
//******---------------------------------------------------------------******             //10-08-19|0x04a9
//******                           put_crlf                            ******             //10-08-19|0x04aa
//******                                                               ******             //10-08-19|0x04ab
//***************************************************************************             //10-08-19|0x04ac
//***************************************************************************             //10-08-19|0x04ad
//*******************************************************************************         //10-29-97|0x04b3
//*******************************************************************************         //10-29-97|0x04b3
// put_crlf                                                                               //10-08-19|0x04b3
//*******************************************************************************         //10-29-97|0x04b3
//*******************************************************************************         //10-29-97|0x04b3
UINT PRECFILE::put_crlf(void) {                                                           //10-08-19|0x04b3
//*******************************************************************************         //10-29-97|0x04b3
//***************************************************************************             //10-08-19|0x04b6
//***************************************************************************             //10-08-19|0x04b7
    TestSample(PutCRLF_1);                                                                //10-08-19|0x04b8
//---------------------------------------------------------------------------             //10-08-19|0x04b9
    if(text_file_addr     == 0)                            ReturnSystemError;             //10-08-19|0x04ba
    if(file_control_addr  == 0)                            ReturnSystemError;             //10-08-19|0x04bb
//---------------------------------------------------------------------------             //10-08-19|0x04bc
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //10-08-19|0x04bd
//***************************************************************************             //10-08-19|0x04be
    status = Continue;                                                                    //10-08-19|0x04bf
    while(status == Continue)                                                             //10-08-19|0x04bf
      {                                                                                   //10-08-19|0x04bf
        switch(FileState)                                                                 //10-08-19|0x04bf
          {                                                                               //10-08-19|0x04bf
//---------------------------------------------------------------------------             //10-08-19|0x04c0
            case FD_NAME:  BreakCreateText(FT_WRITE_LINE);                                //10-08-19|0x04c1
            case FT_NEXT_PUT:  BreakAppendText(FT_WRITE_LINE);                            //10-08-19|0x04c2
//---------------------------------------------------------------------------             //10-08-19|0x04c3
            case FT_WRITE_LINE:  BreakWriteCRLF(FT_EXIT);                                 //10-08-19|0x04c4
            case FT_EXIT:  BreakPutLineExit(FT_WRITE_LINE);                               //10-08-19|0x04c5
//---------------------------------------------------------------------------             //10-08-19|0x04c6
            default:              ReturnSystemError;                                      //10-08-19|0x04c7
            }                                                                             //10-08-19|0x04c7
        }                                                                                 //10-08-19|0x04c7
//***************************************************************************             //10-08-19|0x04c8
    return(status);                                                                       //10-08-19|0x04c9
}                                                                                         //10-08-19|0x04ca
//                                                                                        //05-24-97|0x04ca
//***************************************************************************             //<----   |0x04cd
//***************************************************************************             //<----   |0x04ce
//******                                                               ******             //<----   |0x04cf
//******                      TEXT FILE ROUTINES                       ******             //<----   |0x04d0
//******---------------------------------------------------------------******             //<----   |0x04d1
//******                          put_dbug                             ******             //<----   |0x04d2
//******                                                               ******             //<----   |0x04d3
//***************************************************************************             //<----   |0x04d4
//***************************************************************************             //<----   |0x04d5
//***************************************************************************             //<----   |0x04da
//***************************************************************************             //<----   |0x04db
//*******************************************************************************         //10-29-97|0x04dd
//*******************************************************************************         //10-29-97|0x04dd
// put_dbug                                                                               //<----   |0x04dd
//*******************************************************************************         //10-29-97|0x04dd
//*******************************************************************************         //10-29-97|0x04dd
UINT PRECFILE::put_dbug(void) {                                                           //<----   |0x04dd
//*******************************************************************************         //10-29-97|0x04dd
//***************************************************************************             //<----   |0x04e0
//***************************************************************************             //<----   |0x04e1
    TestSample(PutDbug_1);                                                                //<----   |0x04e2
//---------------------------------------------------------------------------             //<----   |0x04e3
    if(text_file_addr     == 0)                            ReturnSystemError;             //<----   |0x04e4
    if(file_control_addr  == 0)                            ReturnSystemError;             //<----   |0x04e5
//---------------------------------------------------------------------------             //<----   |0x04e6
    if(class_manager(FCT_READY) != Success)                  ReturnSystemError;           //<----   |0x04e7
//***************************************************************************             //<----   |0x04e8
    status = Continue;                                                                    //<----   |0x04e9
    while(status == Continue)                                                             //<----   |0x04e9
      {                                                                                   //<----   |0x04e9
        switch(FileState)                                                                 //<----   |0x04e9
          {                                                                               //<----   |0x04e9
//---------------------------------------------------------------------------             //<----   |0x04ea
            case FD_NAME:  BreakCreateText(FT_WRITE_LINE);                                //<----   |0x04eb
            case FT_NEXT_PUT:  BreakAppendText(FT_WRITE_LINE);                            //<----   |0x04ec
//---------------------------------------------------------------------------             //<----   |0x04ed
            case FT_WRITE_LINE:  BreakWriteCRLF(FT_CLOSE_TEXT);                           //<----   |0x04ee
            case FT_CLOSE_TEXT:  BreakCloseLine(FT_NEXT_PUT);                             //<----   |0x04ef
//---------------------------------------------------------------------------             //<----   |0x04f0
            default:              ReturnSystemError;                                      //<----   |0x04f1
            }                                                                             //<----   |0x04f1
        }                                                                                 //<----   |0x04f1
//***************************************************************************             //<----   |0x04f2
    return(status);                                                                       //<----   |0x04f3
}                                                                                         //<----   |0x04f4
//                                                                                        //05-24-97|0x04f4
//***************************************************************************             //04-10-18|0x04f7
//***************************************************************************             //04-10-18|0x04f8
//******                                                               ******             //04-10-18|0x04f9
//******                      TEXT FILE ROUTINES                       ******             //04-10-18|0x04fa
//******---------------------------------------------------------------******             //04-10-18|0x04fb
//******                          create_text                          ******             //04-10-18|0x04fc
//******                                                               ******             //04-10-18|0x04fd
//***************************************************************************             //04-10-18|0x04fe
//***************************************************************************             //04-10-18|0x04ff
//*******************************************************************************         //10-29-97|0x0507
//*******************************************************************************         //10-29-97|0x0507
// create_text                                                                            //06-10-05|0x0507
//*******************************************************************************         //10-29-97|0x0507
//*******************************************************************************         //10-29-97|0x0507
UINT PRECFILE::create_text(void) {                                                        //06-10-05|0x0507
//*******************************************************************************         //10-29-97|0x0507
//***************************************************************************             //06-10-05|0x050a
//***************************************************************************             //06-10-05|0x050b
    TestSample(CreateText_1);                                                             //06-10-05|0x050c
//***************************************************************************             //06-10-05|0x050d
    if(FileStream != 0)                               ReturnSystemError;                  //07-09-20|0x050e
    {                                                                                     //07-09-20|0x050e
      int file_descriptor;                                                                //07-09-20|0x050e
      file_descriptor =  open(FileName,                                                   //07-09-20|0x050e
                           O_CREAT | O_TRUNC | O_RDWR,                                    //07-09-20|0x050e
                           S_IRUSR | S_IWUSR);                                            //07-09-20|0x050e
      if(file_descriptor == -1)             ReturnFinish("Create Text");                  //07-09-20|0x050e
      FileStream = fdopen(file_descriptor, "wt");                                         //07-09-20|0x050e
      if(FileStream == 0)                             ReturnSystemError;                  //07-09-20|0x050e
    }                                                                                     //07-09-20|0x050e
//***************************************************************************             //06-10-05|0x050f
    TextLineNo      = 0;                                                                  //05-14-97|0x0510
    TextNextPos     = -1;                                                                 //05-14-97|0x0511
    TextLength      = -1;                                                                 //09-09-25|0x0512
    return(Continue);                                                                     //05-14-97|0x0513
}                                                                                         //98-01-16|0x0514
//                                                                                        //05-24-97|0x0514
//***************************************************************************             //07-02-02|0x0517
//***************************************************************************             //07-02-02|0x0518
//******                                                               ******             //07-02-02|0x0519
//******                      TEXT FILE ROUTINES                       ******             //07-02-02|0x051a
//******---------------------------------------------------------------******             //07-02-02|0x051b
//******                          append_text                          ******             //07-02-02|0x051c
//******                                                               ******             //07-02-02|0x051d
//***************************************************************************             //07-02-02|0x051e
//***************************************************************************             //07-02-02|0x051f
//*******************************************************************************         //10-29-97|0x0522
//*******************************************************************************         //10-29-97|0x0522
// append_text                                                                            //07-08-11|0x0522
//*******************************************************************************         //10-29-97|0x0522
//*******************************************************************************         //10-29-97|0x0522
UINT PRECFILE::append_text(void) {                                                        //07-08-11|0x0522
//*******************************************************************************         //10-29-97|0x0522
//***************************************************************************             //07-08-11|0x0524
//***************************************************************************             //07-08-11|0x0525
    TestSample(append_text_1);                                                            //07-08-11|0x0526
//***************************************************************************             //07-08-11|0x0527
    if(FileStream != 0)                              ReturnSystemError;                   //07-09-20|0x0528
    FileStream = fopen(FileName, "a");                                                    //07-09-20|0x0528
    if(FileStream == 0)                    ReturnFinish("Append Text");                   //07-09-20|0x0528
//***************************************************************************             //07-08-11|0x0529
    return(Continue);                                                                     //07-08-11|0x052a
}                                                                                         //07-08-11|0x052b
//                                                                                        //05-24-97|0x052b
//***************************************************************************             //10-08-19|0x052e
//***************************************************************************             //10-08-19|0x052f
//******                                                               ******             //10-08-19|0x0530
//******                      TEXT FILE ROUTINES                       ******             //10-08-19|0x0531
//******---------------------------------------------------------------******             //10-08-19|0x0532
//******                          write_text                           ******             //10-08-19|0x0533
//******                                                               ******             //10-08-19|0x0534
//***************************************************************************             //10-08-19|0x0535
//***************************************************************************             //10-08-19|0x0536
//*******************************************************************************         //10-29-97|0x0539
//*******************************************************************************         //10-29-97|0x0539
// write_text                                                                             //10-08-19|0x0539
//*******************************************************************************         //10-29-97|0x0539
//*******************************************************************************         //10-29-97|0x0539
UINT PRECFILE::write_text(void) {                                                         //10-08-19|0x0539
//*******************************************************************************         //10-29-97|0x0539
//***************************************************************************             //10-08-19|0x053c
//***************************************************************************             //10-08-19|0x053d
  SLONG work;                                                                        //10-08-19|0x053e
//***************************************************************************             //10-08-19|0x053f
    TestSample(write_text_1);                                                             //10-08-19|0x0540
//***************************************************************************             //10-08-19|0x0541
    if(FileStream    == 0)                                 ReturnSystemError;             //10-08-19|0x0542
    if(StringLength  == 0)                                 ReturnSystemError;             //10-08-19|0x0543
//***************************************************************************             //10-08-19|0x0544
    work  = fwrite(&StringChar(0), 1, StringLength, FileStream);                          //10-08-19|0x0545
    if(work != StringLength)                               ReturnSystemError;             //10-08-19|0x0546
//***************************************************************************             //10-08-19|0x0547
    return(Continue);                                                                     //10-08-19|0x0548
}                                                                                         //10-08-19|0x0549
//                                                                                        //05-24-97|0x0549
//***************************************************************************             //10-08-19|0x054c
//***************************************************************************             //10-08-19|0x054d
//******                                                               ******             //10-08-19|0x054e
//******                      TEXT FILE ROUTINES                       ******             //10-08-19|0x054f
//******---------------------------------------------------------------******             //10-08-19|0x0550
//******                          write_crlf                           ******             //10-08-19|0x0551
//******                                                               ******             //10-08-19|0x0552
//***************************************************************************             //10-08-19|0x0553
//***************************************************************************             //10-08-19|0x0554
//*******************************************************************************         //10-29-97|0x0557
//*******************************************************************************         //10-29-97|0x0557
// write_crlf                                                                             //10-08-19|0x0557
//*******************************************************************************         //10-29-97|0x0557
//*******************************************************************************         //10-29-97|0x0557
UINT PRECFILE::write_crlf(void) {                                                         //10-08-19|0x0557
//*******************************************************************************         //10-29-97|0x0557
//***************************************************************************             //10-08-19|0x0559
//***************************************************************************             //10-08-19|0x055a
  SLONG work;                                                                        //10-08-19|0x055b
//***************************************************************************             //10-08-19|0x055c
    TestSample(write_crlf_1);                                                             //10-08-19|0x055d
//***************************************************************************             //10-08-19|0x055e
    if(FileStream                           == 0)          ReturnSystemError;             //10-08-19|0x055f
//***************************************************************************             //10-08-19|0x0560
    work  = fwrite("\n", 1, 1, FileStream);                                               //10-08-19|0x0561
    if(work != 1)                                          ReturnSystemError;             //10-08-19|0x0562
//***************************************************************************             //10-08-19|0x0563
    TextLineNo += 1;                                                                      //10-08-19|0x0564
    return(Continue);                                                                     //10-08-19|0x0565
}                                                                                         //10-08-19|0x0566
//                                                                                        //05-24-97|0x0566
//***************************************************************************             //06-10-05|0x0569
//***************************************************************************             //06-10-05|0x056a
//******                                                               ******             //06-10-05|0x056b
//******                      TEXT FILE ROUTINES                       ******             //06-10-05|0x056c
//******---------------------------------------------------------------******             //06-10-05|0x056d
//******                          close_line                           ******             //06-10-05|0x056e
//******                                                               ******             //06-10-05|0x056f
//***************************************************************************             //06-10-05|0x0570
//***************************************************************************             //06-10-05|0x0571
//*******************************************************************************         //10-29-97|0x0574
//*******************************************************************************         //10-29-97|0x0574
// close_line                                                                             //06-10-05|0x0574
//*******************************************************************************         //10-29-97|0x0574
//*******************************************************************************         //10-29-97|0x0574
UINT PRECFILE::close_line(void) {                                                         //06-10-05|0x0574
//*******************************************************************************         //10-29-97|0x0574
//***************************************************************************             //06-10-05|0x0576
//***************************************************************************             //06-10-05|0x0577
    if(FileStream                         == 0)            ReturnSystemError;             //06-10-05|0x0578
    if(fclose(FileStream))                                 ReturnSystemError;             //06-10-05|0x0579
    FileStream = 0;                                                                       //06-10-05|0x057a
    return(Success);                                                                      //06-10-05|0x057b
}                                                                                         //06-10-05|0x057c
//                                                                                        //05-24-97|0x057c
//***************************************************************************             //04-10-18|0x057f
//***************************************************************************             //04-10-18|0x0580
//******                                                               ******             //04-10-18|0x0581
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x0582
//******---------------------------------------------------------------******             //04-10-18|0x0583
//******                           get_line                            ******             //04-10-18|0x0584
//******                                                               ******             //04-10-18|0x0585
//***************************************************************************             //04-10-18|0x0586
//***************************************************************************             //04-10-18|0x0587
//*******************************************************************************         //10-29-97|0x058f
//*******************************************************************************         //10-29-97|0x058f
// get_line                                                                               //07-02-02|0x058f
//*******************************************************************************         //10-29-97|0x058f
//*******************************************************************************         //10-29-97|0x058f
UINT PRECFILE::get_line(                                                                  //07-02-02|0x058f
    UINT DisplayFlag                                                                      //07-02-02|0x058f
    ) {                                                                                   //07-02-02|0x058f
//*******************************************************************************         //10-29-97|0x058f
//***************************************************************************             //04-10-18|0x0592
//***************************************************************************             //04-10-18|0x0593
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x0594
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x0595
    TestSample(GetLine_1);                                                                //04-10-18|0x0596
//***************************************************************************             //06-08-26|0x0597
  TextRunFlag = 1;                                                                        //06-08-26|0x0598
  while(TextRunFlag != 0)                                                                 //06-08-26|0x0598
  {                                                                                       //06-08-26|0x0598
    switch(TextGetState)                                                                  //06-08-26|0x0598
    {                                                                                     //06-08-26|0x0598
//---------------------------------------------------------------------------             //06-08-26|0x0599
      case 2286: // FT_READ_LINE                                                          //06-08-26|0x059a
        switch(ReadLine)                                                                  //06-08-26|0x059a
        {                                                                                 //06-08-26|0x059a
          case Success:                                                                   //06-08-26|0x059a
            TextRunFlag = 1;                                                              //06-08-26|0x059a
            TextGetState = 38989; // FT_CHAR_TEST                                         //06-08-26|0x059a
            break;                                                                        //06-08-26|0x059a
          case UserError:                                                                 //06-08-26|0x059a
            TextGetState = 2286; // FT_READ_LINE                                          //06-08-26|0x059a
            TextStatus = UserError;                                                       //06-08-26|0x059a
            TextRunFlag = 0;                                                              //06-08-26|0x059a
            break;                                                                        //06-08-26|0x059a
          default:                                                                        //06-08-26|0x059a
            TextStatus = SystemError;                                                     //06-08-26|0x059a
            TextRunFlag = 0;                                                              //06-08-26|0x059a
            SystemMsg;                                                                    //06-08-26|0x059a
            break;                                                                        //06-08-26|0x059a
        }                                                                                 //06-08-26|0x059a
        break;                                                                            //06-08-26|0x059a
//---------------------------------------------------------------------------             //06-08-26|0x059b
      case 38989: // FT_CHAR_TEST                                                         //06-08-26|0x059c
        switch(CharTest)                                                                  //06-08-26|0x059c
        {                                                                                 //06-08-26|0x059c
          case Yes:                                                                       //06-08-26|0x059c
            TextRunFlag = 1;                                                              //06-08-26|0x059c
            TextGetState = 7580; // FT_DISP_LINE                                          //06-08-26|0x059c
            break;                                                                        //06-08-26|0x059c
          case No:                                                                        //06-08-26|0x059c
            TextRunFlag = 1;                                                              //06-08-26|0x059c
            TextGetState = 63451; // FT_TAB_CHAR                                          //06-08-26|0x059c
            break;                                                                        //06-08-26|0x059c
          default:                                                                        //06-08-26|0x059c
            TextStatus = SystemError;                                                     //06-08-26|0x059c
            TextRunFlag = 0;                                                              //06-08-26|0x059c
            SystemMsg;                                                                    //06-08-26|0x059c
            break;                                                                        //06-08-26|0x059c
        }                                                                                 //06-08-26|0x059c
        break;                                                                            //06-08-26|0x059c
//---------------------------------------------------------------------------             //06-08-26|0x059d
      case 63451: // FT_TAB_CHAR                                                          //06-09-04|0x059e
        switch(ProcTab)                                                                   //06-09-04|0x059e
        {                                                                                 //06-09-04|0x059e
          case Success:                                                                   //06-09-04|0x059e
            TextRunFlag = 1;                                                              //06-09-04|0x059e
            TextGetState = 38989; // FT_CHAR_TEST                                         //06-09-04|0x059e
            break;                                                                        //06-09-04|0x059e
          case UserError:                                                                 //06-09-04|0x059e
            TextGetState = 2286; // FT_READ_LINE                                          //06-09-04|0x059e
            TextStatus = UserError;                                                       //06-09-04|0x059e
            TextRunFlag = 0;                                                              //06-09-04|0x059e
            break;                                                                        //06-09-04|0x059e
          default:                                                                        //06-09-04|0x059e
            TextStatus = SystemError;                                                     //06-09-04|0x059e
            TextRunFlag = 0;                                                              //06-09-04|0x059e
            SystemMsg;                                                                    //06-09-04|0x059e
            break;                                                                        //06-09-04|0x059e
        }                                                                                 //06-09-04|0x059e
        break;                                                                            //06-09-04|0x059e
//---------------------------------------------------------------------------             //06-08-26|0x059f
      case 7580: // FT_DISP_LINE                                                          //06-08-26|0x05a0
        switch(DispLine)                                                                  //06-08-26|0x05a0
        {                                                                                 //06-08-26|0x05a0
          case Success:                                                                   //06-08-26|0x05a0
            TextGetState = 2286; // FT_READ_LINE                                          //06-08-26|0x05a0
            TextStatus = Success;                                                         //06-08-26|0x05a0
            TextRunFlag = 0;                                                              //06-08-26|0x05a0
            break;                                                                        //06-08-26|0x05a0
          case Display:                                                                   //06-08-26|0x05a0
            TextGetState = 2286; // FT_READ_LINE                                          //06-08-26|0x05a0
            TextStatus = Display;                                                         //06-08-26|0x05a0
            TextRunFlag = 0;                                                              //06-08-26|0x05a0
            break;                                                                        //06-08-26|0x05a0
          default:                                                                        //06-08-26|0x05a0
            TextStatus = SystemError;                                                     //06-08-26|0x05a0
            TextRunFlag = 0;                                                              //06-08-26|0x05a0
            SystemMsg;                                                                    //06-08-26|0x05a0
            break;                                                                        //06-08-26|0x05a0
        }                                                                                 //06-08-26|0x05a0
        break;                                                                            //06-08-26|0x05a0
//---------------------------------------------------------------------------             //06-08-26|0x05a1
      default:                                                                            //06-07-13|0x05a2
        TextStatus = SystemError;                                                         //06-07-13|0x05a2
        TextRunFlag = 0;                                                                  //06-07-13|0x05a2
        SystemMsg;                                                                        //06-07-13|0x05a2
        break;                                                                            //06-07-13|0x05a2
    }                                                                                     //06-07-13|0x05a2
  }                                                                                       //06-07-13|0x05a2
//---------------------------------------------------------------------------             //06-07-13|0x05a3
    return(TextStatus);                                                                   //06-08-26|0x05a4
}                                                                                         //98-01-16|0x05a5
//                                                                                        //05-24-97|0x05a5
//***************************************************************************             //check   |0x05a8
//***************************************************************************             //check   |0x05a9
//******                                                               ******             //check   |0x05aa
//******                      READ TEXT FILE SEGMENT                   ******             //check   |0x05ab
//******---------------------------------------------------------------******             //check   |0x05ac
//******                       read_text_segment                       ******             //check   |0x05ad
//******---------------------------------------------------------------******             //13-01-17|0x05ae
//******  Return:                                                      ******             //13-01-17|0x05af
//******    LineDone:   CR or LF detected.                             ******             //13-04-25|0x05b0
//******    Countinue:  Large string detected.                         ******             //13-04-25|0x05b1
//******    Success:    Legal Size String detected.                    ******             //13-04-25|0x05b2
//******    Yes:        Tab character detected                         ******             //13-04-25|0x05b3
//******    No:         Special character detected                     ******             //13-04-25|0x05b4
//******                                                               ******             //check   |0x05b5
//***************************************************************************             //check   |0x05b6
//***************************************************************************             //check   |0x05b7
//*******************************************************************************         //10-29-97|0x05bf
//*******************************************************************************         //10-29-97|0x05bf
// read_text_segment                                                                      //check   |0x05bf
//*******************************************************************************         //10-29-97|0x05bf
//*******************************************************************************         //10-29-97|0x05bf
UINT PRECFILE::read_text_segment(                                                         //check   |0x05bf
    SLONG MaxSize,                                                                        //check   |0x05bf
    STRING_DATA_FAR StringArgFar                                                          //check   |0x05bf
    ) {                                                                                   //check   |0x05bf
//*******************************************************************************         //10-29-97|0x05bf
  SLONG current_pos;                                                                 //check   |0x05c2
  SLONG buffer_length;                                                               //check   |0x05c3
  UINT flag;                                                                         //check   |0x05c4
//***************************************************************************             //check   |0x05c5
//***************************************************************************             //check   |0x05c6
    if(text_file_addr     == 0)                            ReturnSystemError;             //check   |0x05c7
    if(file_control_addr  == 0)                            ReturnSystemError;             //check   |0x05c8
//***************************************************************************             //check   |0x05c9
    MemSet(StringArgFar, 0x00, sizeof(STRING_DATA));                                      //check   |0x05ca
//---------------------------------------------------------------------------             //check   |0x05cb
    if(initial_read_segment(&current_pos) != Success) ReturnSystemError;                  //check   |0x05cc
//***************************************************************************             //check   |0x05cd
    if(read_segment(&buffer_length, 255, StringArgFar) != Success)                        //<----   |0x05ce
                                                           ReturnSystemError;             //check   |0x05cf
//***************************************************************************             //check   |0x05d0
    flag = isolate_segment(&buffer_length, MaxSize, StringArgFar);                        //check   |0x05d1
//***************************************************************************             //check   |0x05d2
    switch(flag)                                                                          //check   |0x05d3
      {                                                                                   //check   |0x05d4
//---------------------------------------------------------------------------             //check   |0x05d5
        case Yes:                              break_test(ReadTextSegment_1);             //check   |0x05d6
        case No:                               break_test(ReadTextSegment_2);             //check   |0x05d7
        case Continue:                         break_test(ReadTextSegment_3);             //check   |0x05d8
        case Success:                          break_test(ReadTextSegment_4);             //check   |0x05d9
//---------------------------------------------------------------------------             //check   |0x05da
        case LineDone:                                                                    //check   |0x05db
          if(complete_read_segment(&current_pos, StringArgFar) != Success)                //check   |0x05dc
                                                          ReturnSystemError;              //check   |0x05dd
          break_test(ReadTextSegment_5);                                                  //check   |0x05de
//---------------------------------------------------------------------------             //check   |0x05df
        case UserError:                                   return(UserError);              //check   |0x05e0
        default:                                          ReturnSystemError;              //check   |0x05e1
        }                                                                                 //check   |0x05e2
//***************************************************************************             //check   |0x05e3
    if(finish_read_segment(current_pos, StringArgFar) != Success)                         //check   |0x05e4
                                                           ReturnSystemError;             //check   |0x05e5
    if(finalize_text_segment(255, StringArgFar)!= Success) ReturnSystemError;             //check   |0x05e6
    return(flag);                                                                         //check   |0x05e7
}                                                                                         //check   |0x05e8
//                                                                                        //05-24-97|0x05e8
//***************************************************************************             //04-10-18|0x05eb
//***************************************************************************             //04-10-18|0x05ec
//******                                                               ******             //04-10-18|0x05ed
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x05ee
//******---------------------------------------------------------------******             //04-10-18|0x05ef
//******                          read_line                            ******             //04-10-18|0x05f0
//******                                                               ******             //04-10-18|0x05f1
//***************************************************************************             //04-10-18|0x05f2
//***************************************************************************             //04-10-18|0x05f3
//*******************************************************************************         //10-29-97|0x05f6
//*******************************************************************************         //10-29-97|0x05f6
// read_line                                                                              //04-02-97|0x05f6
//*******************************************************************************         //10-29-97|0x05f6
//*******************************************************************************         //10-29-97|0x05f6
UINT PRECFILE::read_line(void) {                                                          //04-02-97|0x05f6
//*******************************************************************************         //10-29-97|0x05f6
  SLONG current_position;                                                            //09-09-25|0x05f8
  SLONG buffer_length;                                                               //10-08-19|0x05f9
  UINT flag;                                                                         //13-01-17|0x05fa
//***************************************************************************             //09-09-25|0x05fb
//***************************************************************************             //09-09-25|0x05fc
    TestSample(ReadLine_1);                                                               //04-10-18|0x05fd
//---------------------------------------------------------------------------             //06-07-13|0x05fe
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x05ff
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x0600
//***************************************************************************             //10-08-19|0x0601
    MemSet(TextStringAddr, 0x00, sizeof(STRING_DATA));                                    //13-02-08|0x0602
//---------------------------------------------------------------------------             //13-01-17|0x0603
    if(initial_read_segment(&current_position) != Success) ReturnSystemError;             //13-01-17|0x0604
//***************************************************************************             //10-08-19|0x0605
    if(read_segment(&buffer_length, 255, &TextString) != Success)                         //13-02-08|0x0606
                                                           ReturnSystemError;             //13-02-08|0x0607
//***************************************************************************             //10-08-19|0x0608
    flag  = Yes;                                                                          //13-01-17|0x0609
    while(flag == Yes)                                                                    //13-01-17|0x060a
      {                                                                                   //13-01-17|0x060b
        switch(isolate_segment(&buffer_length, 255,  &TextString))                        //13-04-25|0x060c
          {                                                                               //13-01-17|0x060d
//---------------------------------------------------------------------------             //13-04-25|0x060e
            case LineDone:  flag = No;                                break;              //13-04-25|0x060f
//---------------------------------------------------------------------------             //13-04-25|0x0610
            case Success:                                             break;              //13-04-25|0x0611
            case Continue:                    ReturnFinish("Line Too Long");              //13-04-25|0x0612
//---------------------------------------------------------------------------             //13-04-25|0x0613
            case Yes:                                                 break;              //13-04-25|0x0614
            case No:                       ReturnFinish("Illegal Character");             //13-04-25|0x0615
//---------------------------------------------------------------------------             //13-04-25|0x0616
            case UserError:                               return(UserError);              //13-01-17|0x0617
            default:                                      ReturnSystemError;              //13-01-17|0x0618
            }                                                                             //13-01-17|0x0619
        }                                                                                 //13-01-17|0x061a
//***************************************************************************             //10-08-19|0x061b
    if(complete_read_segment                                                              //13-02-19|0x061c
      (                                                                                   //13-02-19|0x061d
        &current_position,                                                                //13-02-19|0x061e
        &TextString                                                                       //13-02-19|0x061f
        ) != Success)                                                                     //13-02-19|0x0620
                                                           ReturnSystemError;             //13-02-19|0x0621
//---------------------------------------------------------------------------             //13-01-17|0x0622
    if(finish_read_segment(current_position, &TextString) != Success)                     //check   |0x0623
                                                           ReturnSystemError;             //check   |0x0624
    if(finalize_text_segment(255, &TextString) != Success) ReturnSystemError;             //13-02-08|0x0625
//***************************************************************************             //10-08-19|0x0626
    return(Success);                                                                      //04-01-97|0x0627
}                                                                                         //06-09-04|0x0628
//                                                                                        //05-24-97|0x0628
//***************************************************************************             //13-01-17|0x062b
//***************************************************************************             //13-01-17|0x062c
//******                                                               ******             //13-01-17|0x062d
//******                      TEXT FILE UTILITIES                      ******             //13-01-17|0x062e
//******---------------------------------------------------------------******             //13-01-17|0x062f
//******                      initial_read_segment                     ******             //13-01-17|0x0630
//******                                                               ******             //13-01-17|0x0631
//***************************************************************************             //13-01-17|0x0632
//***************************************************************************             //13-01-17|0x0633
//*******************************************************************************         //10-29-97|0x0636
//*******************************************************************************         //10-29-97|0x0636
// initial_read_segment                                                                   //13-01-17|0x0636
//*******************************************************************************         //10-29-97|0x0636
//*******************************************************************************         //10-29-97|0x0636
UINT PRECFILE::initial_read_segment(                                                      //13-01-17|0x0636
    SLONG_FAR CurrentPosFar                                                               //13-01-17|0x0636
    ) {                                                                                   //13-01-17|0x0636
//*******************************************************************************         //10-29-97|0x0636
    if(text_file_addr     == 0)                            ReturnSystemError;             //13-04-25|0x0638
    if(file_control_addr  == 0)                            ReturnSystemError;             //13-04-25|0x0639
//***************************************************************************             //13-04-25|0x063a
    *CurrentPosFar = ftell(FileStream);                                                   //13-01-17|0x063b
//---------------------------------------------------------------------------             //13-01-17|0x063c
    if(*CurrentPosFar <= -1)                               ReturnSystemError;             //13-01-17|0x063d
    if(*CurrentPosFar != TextNextPos)                      ReturnSystemError;             //13-01-17|0x063e
    return_test(InitialReadSegment_1);                                                    //13-01-17|0x063f
}                                                                                         //13-01-17|0x0640
//                                                                                        //05-24-97|0x0640
//***************************************************************************             //12-12-07|0x0643
//***************************************************************************             //12-12-07|0x0644
//******                                                               ******             //12-12-07|0x0645
//******                      TEXT FILE UTILITIES                      ******             //12-12-07|0x0646
//******---------------------------------------------------------------******             //12-12-07|0x0647
//******                          read_segment                         ******             //12-12-07|0x0648
//******                                                               ******             //12-12-07|0x0649
//***************************************************************************             //12-12-07|0x064a
//***************************************************************************             //12-12-07|0x064b
//*******************************************************************************         //10-29-97|0x064f
//*******************************************************************************         //10-29-97|0x064f
// read_segment                                                                           //13-02-08|0x064f
//*******************************************************************************         //10-29-97|0x064f
//*******************************************************************************         //10-29-97|0x064f
UINT PRECFILE::read_segment(                                                              //13-02-08|0x064f
    SLONG_FAR BufferLengthFar,                                                            //13-02-08|0x064f
    SLONG MaxSize,                                                                        //13-02-08|0x064f
    STRING_DATA_FAR StringArgFar                                                          //13-02-08|0x064f
    ) {                                                                                   //13-02-08|0x064f
//*******************************************************************************         //10-29-97|0x064f
  SLONG test;                                                                        //12-12-07|0x0651
//***************************************************************************             //12-12-07|0x0652
//***************************************************************************             //12-12-07|0x0653
    if(text_file_addr     == 0)                            ReturnSystemError;             //13-04-25|0x0654
    if(file_control_addr  == 0)                            ReturnSystemError;             //13-04-25|0x0655
//***************************************************************************             //13-04-25|0x0656
    *BufferLengthFar       = TextLength;                                                  //12-12-07|0x0657
    *BufferLengthFar      -= TextNextPos;                                                 //12-12-07|0x0658
    if(*BufferLengthFar   <= 0)                                                           //12-12-07|0x0659
                                                           ReturnSystemError;             //12-12-07|0x065a
//***************************************************************************             //12-12-07|0x065b
    if(*BufferLengthFar    > MaxSize)                                                     //12-12-10|0x065c
      {                                                                                   //12-12-07|0x065d
        *BufferLengthFar = MaxSize;                                                       //12-12-10|0x065e
        test = fread(&StringArgChar(0), 1, MaxSize+1, FileStream);                        //13-02-08|0x065f
        if(test != MaxSize+1)                                                             //12-12-10|0x0660
                                                           ReturnSystemError;             //12-12-07|0x0661
        }                                                                                 //12-12-07|0x0662
//---------------------------------------------------------------------------             //12-12-07|0x0663
      else {                                                                              //12-12-07|0x0664
        test = fread(&StringArgChar(0), 1, *BufferLengthFar, FileStream);                 //13-02-08|0x0665
        if(test != *BufferLengthFar)                                                      //12-12-07|0x0666
                                                           ReturnSystemError;             //12-12-07|0x0667
        }                                                                                 //12-12-07|0x0668
//***************************************************************************             //12-12-07|0x0669
    return_test(ReadSegment_1);                                                           //12-12-07|0x066a
}                                                                                         //12-12-07|0x066b
//                                                                                        //05-24-97|0x066b
//***************************************************************************             //13-04-25|0x066e
//***************************************************************************             //13-04-25|0x066f
//******                                                               ******             //13-04-25|0x0670
//******                      READ TEXT FILE SEGMENT                   ******             //13-04-25|0x0671
//******---------------------------------------------------------------******             //13-04-25|0x0672
//******                       isolate_segment                         ******             //13-04-25|0x0673
//******---------------------------------------------------------------******             //13-01-17|0x0674
//******  Return:                                                      ******             //13-01-17|0x0675
//******    LineDone:   CR or LF detected.                             ******             //13-04-25|0x0676
//******    Countinue:  Large string detected.                         ******             //13-04-25|0x0677
//******    Success:    Legal Size String detected.                    ******             //13-04-25|0x0678
//******    Yes:        Tab character detected                         ******             //13-04-25|0x0679
//******    No:         Special character detected                     ******             //13-04-25|0x067a
//******                                                               ******             //13-04-25|0x067b
//***************************************************************************             //13-04-25|0x067c
//***************************************************************************             //13-04-25|0x067d
//*******************************************************************************         //10-29-97|0x0685
//*******************************************************************************         //10-29-97|0x0685
// isolate_segment                                                                        //13-04-25|0x0685
//*******************************************************************************         //10-29-97|0x0685
//*******************************************************************************         //10-29-97|0x0685
UINT PRECFILE::isolate_segment(                                                           //13-04-25|0x0685
    SLONG_FAR BufferLengthFar,                                                            //13-04-25|0x0685
    SLONG MaxSize,                                                                        //13-04-25|0x0685
    STRING_DATA_FAR StringArgFar                                                          //13-04-25|0x0685
    ) {                                                                                   //13-04-25|0x0685
//*******************************************************************************         //10-29-97|0x0685
//***************************************************************************             //13-04-25|0x0687
//***************************************************************************             //13-04-25|0x0688
    if(MaxSize            <= 0)                            ReturnSystemError;             //13-04-25|0x0689
    if(MaxSize            >  255)                          ReturnSystemError;             //13-04-25|0x068a
    if(*BufferLengthFar   < 1)                             ReturnSystemError;             //13-04-25|0x068b
//***************************************************************************             //13-04-25|0x068c
    switch(isolate_special_char(BufferLengthFar, StringArgFar))                           //13-04-25|0x068d
      {                                                                                   //13-04-25|0x068e
        case Continue:                                                 break;             //13-04-25|0x068f
        case LineDone:                        return_line(IsolateSegment_1);              //13-04-25|0x0690
        case Yes:                             return_yes(IsolateSegment_2);               //13-04-25|0x0691
        case No:                              return_no(IsolateSegment_3);                //check   |0x0692
        case UserError:                                   return(UserError);              //13-04-25|0x0693
        default:                                          ReturnSystemError;              //13-04-25|0x0694
        }                                                                                 //13-04-25|0x0695
//***************************************************************************             //13-04-25|0x0696
    switch(isolate_text_segment(BufferLengthFar, MaxSize, StringArgFar))                  //13-04-25|0x0697
      {                                                                                   //13-04-25|0x0698
        case Yes:                             return_cont(IsolateSegment_4);              //13-04-25|0x0699
        case No:                              return_test(IsolateSegment_5);              //13-04-25|0x069a
        case UserError:                                   return(UserError);              //13-04-25|0x069b
        default:                                          ReturnSystemError;              //13-04-25|0x069c
        }                                                                                 //13-04-25|0x069d
}                                                                                         //13-04-25|0x069e
//                                                                                        //05-24-97|0x069e
//***************************************************************************             //13-01-17|0x06a1
//***************************************************************************             //13-01-17|0x06a2
//******                                                               ******             //13-01-17|0x06a3
//******                      TEXT FILE UTILITIES                      ******             //13-01-17|0x06a4
//******---------------------------------------------------------------******             //13-01-17|0x06a5
//******                      isolate_special_char                     ******             //13-01-17|0x06a6
//******---------------------------------------------------------------******             //13-01-17|0x06a7
//******  Return:                                                      ******             //13-01-17|0x06a8
//******    LineDone:   CR or LF detected.                             ******             //13-04-25|0x06a9
//******    Countinue:  Text character detected.                       ******             //13-04-25|0x06aa
//******    Yes:        Tab character detected                         ******             //13-04-25|0x06ab
//******    No:         Special character detected                     ******             //13-04-25|0x06ac
//******                                                               ******             //13-01-17|0x06ad
//***************************************************************************             //13-01-17|0x06ae
//***************************************************************************             //13-01-17|0x06af
//*******************************************************************************         //10-29-97|0x06b7
//*******************************************************************************         //10-29-97|0x06b7
// isolate_special_char                                                       //13-02-05|0x06b7
//*******************************************************************************         //10-29-97|0x06b7
//*******************************************************************************         //10-29-97|0x06b7
UINT PRECFILE::isolate_special_char(                                          //13-02-05|0x06b7
    SLONG_FAR BufferLenFar,                                                   //13-02-05|0x06b7
    STRING_DATA_FAR StringArgFar                                              //13-02-05|0x06b7
    ) {                                                                       //13-02-05|0x06b7
//*******************************************************************************         //10-29-97|0x06b7
  SCHAR test_char;                                                                   //13-01-17|0x06b9
//***************************************************************************             //13-01-17|0x06ba
    if(text_file_addr     == 0)                            ReturnSystemError;             //13-04-25|0x06bb
    if(file_control_addr  == 0)                            ReturnSystemError;             //13-04-25|0x06bc
//***************************************************************************             //13-04-25|0x06bd
    if(*BufferLenFar      == 0)                            ReturnSystemError;             //13-01-17|0x06be
//***************************************************************************             //13-01-17|0x06bf
    test_char = StringArgChar(StringArgLength);                                           //13-02-05|0x06c0
//***************************************************************************             //13-01-17|0x06c1
    if((test_char == 0x0a) || test_char == 0x0d)                                          //13-04-25|0x06c2
                                            return_line(IsolateSpecialChar_1)             //13-01-17|0x06c3
//***************************************************************************             //13-01-17|0x06c4
    if((test_char >= 32)   && (test_char <= 126))                                         //13-01-17|0x06c5
                                            return_cont(IsolateSpecialChar_2)             //13-04-25|0x06c6
//***************************************************************************             //13-01-21|0x06c7
    StringArgLength   += 1;                                                               //13-02-05|0x06c8
    *BufferLenFar     -= 1;                                                               //13-01-21|0x06c9
//***************************************************************************             //13-01-21|0x06ca
    if(test_char == 0x09)                   return_yes(IsolateSpecialChar_3);             //13-04-25|0x06cb
    return_no(IsolateSpecialChar_4)                                                       //check   |0x06cc
}                                                                                         //13-04-25|0x06cd
//                                                                                        //05-24-97|0x06cd
//***************************************************************************             //13-01-17|0x06d0
//***************************************************************************             //13-01-17|0x06d1
//******                                                               ******             //13-01-17|0x06d2
//******                      TEXT FILE UTILITIES                      ******             //13-01-17|0x06d3
//******---------------------------------------------------------------******             //13-01-17|0x06d4
//******                      isolate_text_segment                     ******             //13-01-17|0x06d5
//******                                                               ******             //13-01-17|0x06d6
//***************************************************************************             //13-01-17|0x06d7
//***************************************************************************             //13-01-17|0x06d8
//*******************************************************************************         //10-29-97|0x06dd
//*******************************************************************************         //10-29-97|0x06dd
// isolate_text_segment                                                                   //13-02-05|0x06dd
//*******************************************************************************         //10-29-97|0x06dd
//*******************************************************************************         //10-29-97|0x06dd
UINT PRECFILE::isolate_text_segment(                                                      //13-02-05|0x06dd
    SLONG_FAR BufferLengthFar,                                                            //13-02-05|0x06dd
    SLONG MaxSize,                                                                        //13-02-05|0x06dd
    STRING_DATA_FAR StringArgFar                                                          //13-02-05|0x06dd
    ) {                                                                                   //13-02-05|0x06dd
//*******************************************************************************         //10-29-97|0x06dd
  SCHAR test_char;                                                                   //13-01-17|0x06df
//***************************************************************************             //13-01-17|0x06e0
    if(text_file_addr     == 0)                            ReturnSystemError;             //13-04-25|0x06e1
    if(file_control_addr  == 0)                            ReturnSystemError;             //13-04-25|0x06e2
//***************************************************************************             //13-04-25|0x06e3
    if(MaxSize            >  255)                          ReturnSystemError;             //13-01-17|0x06e4
    if(*BufferLengthFar   == 0)                            ReturnSystemError;             //13-01-17|0x06e5
//***************************************************************************             //13-01-17|0x06e6
//***************************************************************************             //13-01-17|0x06e7
    test_char = StringArgChar(StringArgLength);                                           //13-02-05|0x06e8
    while((test_char >= 32) && (test_char <= 126))                                        //13-01-17|0x06e9
      {                                                                                   //13-01-17|0x06ea
        *BufferLengthFar -= 1;                                                            //13-01-17|0x06eb
        if(*BufferLengthFar == 0)                                                         //13-01-17|0x06ec
                                                ReturnFinish("Missing CRLF");             //13-01-17|0x06ed
//---------------------------------------------------------------------------             //13-01-17|0x06ee
        StringArgLength += 1;                                                             //13-02-05|0x06ef
        if(StringArgLength >  MaxSize)                                                    //13-02-05|0x06f0
                                                           ReturnSystemError;             //13-01-17|0x06f1
//---------------------------------------------------------------------------             //13-01-17|0x06f2
        if(StringArgLength == MaxSize)                                                    //13-07-27|0x06f3
                                             return_yes(IsolateTextSegment_1)             //13-07-27|0x06f4
//---------------------------------------------------------------------------             //13-01-17|0x06f5
        test_char = StringArgChar(StringArgLength);                                       //13-02-05|0x06f6
        }                                                                                 //13-01-17|0x06f7
    return_no(IsolateTextSegment_1)                                                       //13-01-17|0x06f8
}                                                                                         //13-01-17|0x06f9
//                                                                                        //05-24-97|0x06f9
//***************************************************************************             //13-01-17|0x06fc
//***************************************************************************             //13-01-17|0x06fd
//******                                                               ******             //13-01-17|0x06fe
//******                      TEXT FILE UTILITIES                      ******             //13-01-17|0x06ff
//******---------------------------------------------------------------******             //13-01-17|0x0700
//******                      complete_read_segment                    ******             //13-01-17|0x0701
//******                                                               ******             //13-01-17|0x0702
//***************************************************************************             //13-01-17|0x0703
//***************************************************************************             //13-01-17|0x0704
//*******************************************************************************         //10-29-97|0x0708
//*******************************************************************************         //10-29-97|0x0708
// complete_read_segment                                                                  //13-02-19|0x0708
//*******************************************************************************         //10-29-97|0x0708
//*******************************************************************************         //10-29-97|0x0708
UINT PRECFILE::complete_read_segment(                                                     //13-02-19|0x0708
    SLONG_FAR PositionFar,                                                                //13-02-19|0x0708
    STRING_DATA_FAR StringArgFar                                                          //13-02-19|0x0708
    ) {                                                                                   //13-02-19|0x0708
//*******************************************************************************         //10-29-97|0x0708
    if(text_file_addr     == 0)                            ReturnSystemError;             //13-04-25|0x070a
    if(file_control_addr  == 0)                            ReturnSystemError;             //13-04-25|0x070b
//***************************************************************************             //13-04-25|0x070c
    switch(StringArgChar(StringArgLength))                                                //13-02-19|0x070d
      {                                                                                   //13-01-17|0x070e
//---------------------------------------------------------------------------             //13-01-17|0x070f
        case 0x0a:                                                                        //13-01-21|0x0710
          StringArgLength             += 1;                                               //13-02-19|0x0711
          break;                                                                          //13-01-21|0x0712
//---------------------------------------------------------------------------             //13-01-17|0x0713
        case 0x0d:                                                                        //13-01-17|0x0714
          StringArgChar(StringArgLength)     = 0x0a;                                      //13-02-19|0x0715
          StringArgLength                   += 1;                                         //13-02-19|0x0716
          *PositionFar                      += 1;                                         //13-01-17|0x0717
          if(StringArgChar(StringArgLength) != 0x0a)                                      //13-02-19|0x0718
                                                ReturnFinish("Missing CRLF");             //13-01-17|0x0719
          break;                                                                          //13-01-17|0x071a
//---------------------------------------------------------------------------             //13-01-17|0x071b
        default:                                          ReturnSystemError;              //13-01-17|0x071c
        }                                                                                 //13-01-17|0x071d
//***************************************************************************             //13-01-17|0x071e
    StringArgChar(StringArgLength)   = 0x00;                                              //13-02-19|0x071f
//***************************************************************************             //check   |0x0720
    TextLineNo                      += 1;                                                 //check   |0x0721
    StringArgMacroLineNo             = TextLineNo;                                        //check   |0x0722
//***************************************************************************             //check   |0x0723
    return_test(CompleteReadSegment_1);                                                   //13-01-17|0x0724
}                                                                                         //13-01-17|0x0725
//                                                                                        //05-24-97|0x0725
//***************************************************************************             //13-02-15|0x0728
//***************************************************************************             //13-02-15|0x0729
//******                                                               ******             //13-02-15|0x072a
//******                      TEXT FILE UTILITIES                      ******             //13-02-15|0x072b
//******---------------------------------------------------------------******             //13-02-15|0x072c
//******                      finish_read_segment                      ******             //13-02-15|0x072d
//******                                                               ******             //13-02-15|0x072e
//***************************************************************************             //13-02-15|0x072f
//***************************************************************************             //13-02-15|0x0730
//*******************************************************************************         //10-29-97|0x0734
//*******************************************************************************         //10-29-97|0x0734
// finish_read_segment                                                                    //check   |0x0734
//*******************************************************************************         //10-29-97|0x0734
//*******************************************************************************         //10-29-97|0x0734
UINT PRECFILE::finish_read_segment(                                                       //check   |0x0734
    SLONG Position,                                                                       //check   |0x0734
    STRING_DATA_FAR StringArgFar                                                          //check   |0x0734
    ) {                                                                                   //check   |0x0734
//*******************************************************************************         //10-29-97|0x0734
    if(text_file_addr     == 0)                            ReturnSystemError;             //13-04-25|0x0736
    if(file_control_addr  == 0)                            ReturnSystemError;             //13-04-25|0x0737
//***************************************************************************             //13-04-25|0x0738
    Position      +=  StringArgLength;                                                    //check   |0x0739
    TextNextPos    =  Position;                                                           //13-02-15|0x073a
    if(fseek(FileStream, Position, SEEK_SET))              ReturnSystemError;             //13-02-15|0x073c
    return_test(CompleteReadSegment_1);                                                   //13-02-15|0x073d
}                                                                                         //13-02-15|0x073e
//                                                                                        //05-24-97|0x073e
//***************************************************************************             //13-02-15|0x0741
//***************************************************************************             //13-02-15|0x0742
//******                                                               ******             //13-02-15|0x0743
//******                      TEXT FILE UTILITIES                      ******             //13-02-15|0x0744
//******---------------------------------------------------------------******             //13-02-15|0x0745
//******                      finalize_text_segment                    ******             //13-02-15|0x0746
//******                                                               ******             //13-02-15|0x0747
//***************************************************************************             //13-02-15|0x0748
//***************************************************************************             //13-02-15|0x0749
//*******************************************************************************         //10-29-97|0x074d
//*******************************************************************************         //10-29-97|0x074d
// finalize_text_segment                                                                  //13-02-19|0x074d
//*******************************************************************************         //10-29-97|0x074d
//*******************************************************************************         //10-29-97|0x074d
UINT PRECFILE::finalize_text_segment(                                                     //13-02-19|0x074d
    SLONG BufferLength,                                                                   //13-02-19|0x074d
    STRING_DATA_FAR StringArgFar                                                          //13-02-19|0x074d
    ) {                                                                                   //13-02-19|0x074d
//*******************************************************************************         //10-29-97|0x074d
//***************************************************************************             //13-02-15|0x074f
//***************************************************************************             //13-02-15|0x0750
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x0751
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x0752
//***************************************************************************             //10-08-19|0x0753
    if(StringArgChar(256)              != 0x00)            ReturnSystemError;             //13-02-19|0x0754
    if(StringArgLength                  >  255)            ReturnSystemError;             //13-02-19|0x0755
//***************************************************************************             //13-02-15|0x0756
    while(BufferLength >= StringArgLength)                                                //<----   |0x0757
      {                                                                                   //13-02-15|0x0758
        StringArgChar(BufferLength) = 0x00;                                               //13-02-19|0x0759
        BufferLength               -= 1;                                                  //13-02-15|0x075a
        }                                                                                 //13-02-15|0x075b
//***************************************************************************             //13-02-15|0x075c
    if(StringArgChar(256)               != 0x00)           ReturnSystemError;             //13-02-19|0x075d
    if(StringArgChar(StringArgLength)   != 0x00)           ReturnSystemError;             //13-02-19|0x075e
    return_test(FinalizeTextSegment_1)                                                    //13-02-15|0x075f
}                                                                                         //13-02-15|0x0760
//                                                                                        //05-24-97|0x0760
//***************************************************************************             //07-08-11|0x0763
//***************************************************************************             //07-08-11|0x0764
//******                                                               ******             //07-08-11|0x0765
//******                      TEXT FILE UTILITIES                      ******             //07-08-11|0x0766
//******---------------------------------------------------------------******             //07-08-11|0x0767
//******                        end_of_textfile                        ******             //07-08-11|0x0768
//******                                                               ******             //07-08-11|0x0769
//***************************************************************************             //07-08-11|0x076a
//***************************************************************************             //07-08-11|0x076b
//*******************************************************************************         //10-29-97|0x076e
//*******************************************************************************         //10-29-97|0x076e
// end_of_textfile                                                                        //07-08-11|0x076e
//*******************************************************************************         //10-29-97|0x076e
//*******************************************************************************         //10-29-97|0x076e
UINT PRECFILE::end_of_textfile(void) {                                                    //07-08-11|0x076e
//*******************************************************************************         //10-29-97|0x076e
  SLONG length;                                                                      //07-08-11|0x0770
//***************************************************************************             //07-08-11|0x0771
//***************************************************************************             //07-08-11|0x0772
    TestSample(end_of_textfile_1);                                                        //07-08-11|0x0773
//---------------------------------------------------------------------------             //07-08-11|0x0774
    if(text_file_addr     == 0)                            ReturnSystemError;             //07-08-11|0x0775
    if(file_control_addr  == 0)                            ReturnSystemError;             //07-08-11|0x0776
//---------------------------------------------------------------------------             //07-08-11|0x0777
    length = TextLength - TextNextPos;                                                    //09-09-25|0x0778
//---------------------------------------------------------------------------             //07-08-11|0x0779
    if(length < 0)                                         ReturnSystemError;             //07-08-11|0x077a
    if(length > 2)                                         return(No);                    //07-08-11|0x077b
    return(Yes);                                                                          //07-08-11|0x077c
}                                                                                         //07-08-11|0x077d
//                                                                                        //05-24-97|0x077d
//***************************************************************************             //04-10-18|0x0780
//***************************************************************************             //04-10-18|0x0781
//******                                                               ******             //04-10-18|0x0782
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x0783
//******---------------------------------------------------------------******             //04-10-18|0x0784
//******                           char_test                           ******             //04-10-18|0x0785
//******                                                               ******             //04-10-18|0x0786
//***************************************************************************             //04-10-18|0x0787
//***************************************************************************             //04-10-18|0x0788
//***************************************************************************             //04-10-18|0x078c
//***************************************************************************             //04-10-18|0x078d
//*******************************************************************************         //10-29-97|0x078f
//*******************************************************************************         //10-29-97|0x078f
// char_test                                                                              //04-02-97|0x078f
//*******************************************************************************         //10-29-97|0x078f
//*******************************************************************************         //10-29-97|0x078f
UINT PRECFILE::char_test(void) {                                                          //04-02-97|0x078f
//*******************************************************************************         //10-29-97|0x078f
//***************************************************************************             //04-10-18|0x0791
//***************************************************************************             //04-10-18|0x0792
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x0793
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x0794
    if(StringLength >= 256)                                                               //09-09-24|0x0795
                                                           ReturnSystemError;             //09-09-24|0x0796
    if(StringLength <= 0)                                                                 //09-09-24|0x0797
                                                           ReturnSystemError;             //09-09-24|0x0798
//***************************************************************************             //04-10-18|0x0799
loop:                                                                                     //06-08-26|0x079a
    if(StringPosition   >=256 || StringPosition < 0)       ReturnSystemError;             //06-08-26|0x079b
    if(StringPosition   >= StringLength)                   ReturnSystemError;             //06-08-26|0x079c
    switch(StringChar(StringPosition))                                                    //98-08-03|0x079d
      {                                                                                   //98-08-03|0x079e
        case 0x00:                                         ReturnSystemError;             //04-10-18|0x079f
        case 0x0d:                                                                        //09-09-24|0x07a0
        case 0x0a:                                                                        //09-09-24|0x07a1
                                                      return_yes(CharTest_1);             //09-09-24|0x07a2
        case 0x09:                                    return_no(CharTest_2);              //06-09-04|0x07a3
        default:      ++StringPosition;                goto_test(CharTest_3);             //06-08-26|0x07a4
        }                                                                                 //98-08-03|0x07a5
}                                                                                         //98-01-16|0x07a6
//                                                                                        //05-24-97|0x07a6
//***************************************************************************             //04-10-18|0x07a9
//***************************************************************************             //04-10-18|0x07aa
//******                                                               ******             //04-10-18|0x07ab
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x07ac
//******---------------------------------------------------------------******             //04-10-18|0x07ad
//******                          process_tab                          ******             //04-10-18|0x07ae
//******                                                               ******             //04-10-18|0x07af
//***************************************************************************             //04-10-18|0x07b0
//***************************************************************************             //04-10-18|0x07b1
//***************************************************************************             //04-10-18|0x07b5
//***************************************************************************             //04-10-18|0x07b6
//*******************************************************************************         //10-29-97|0x07b8
//*******************************************************************************         //10-29-97|0x07b8
// process_tab                                                                            //99-08-12|0x07b8
//*******************************************************************************         //10-29-97|0x07b8
//*******************************************************************************         //10-29-97|0x07b8
UINT PRECFILE::process_tab(void) {                                                        //99-08-12|0x07b8
//*******************************************************************************         //10-29-97|0x07b8
//***************************************************************************             //04-10-18|0x07ba
//***************************************************************************             //04-10-18|0x07bb
  SINT offset;                                                                       //99-08-12|0x07bc
  SINT input;                                                                        //99-08-12|0x07bd
  SINT output;                                                                       //99-08-12|0x07be
//***************************************************************************             //04-10-18|0x07bf
//***************************************************************************             //04-10-18|0x07c0
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x07c1
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x07c2
    TestSample(ProcessTab_1);                                                             //04-10-18|0x07c3
//***************************************************************************             //05-05-13|0x07c4
//*****                                                                ******             //05-05-13|0x07c5
//*****     Verify and zero the tab character at the character index   ******             //05-05-13|0x07c6
//*****                                                                ******             //05-05-13|0x07c7
//***************************************************************************             //05-05-13|0x07c8
    if(   (StringPosition >= StringLength)                                                //05-05-13|0x07c9
       || ((StringChar(StringPosition) ^= 0x09) != 0))                                    //05-05-13|0x07ca
                                                           ReturnSystemError;             //05-05-13|0x07cb
//***************************************************************************             //05-05-13|0x07cc
//*****                                                                ******             //05-05-13|0x07cd
//*****     Compute the tab offset                                     ******             //05-05-13|0x07ce
//*****                                                                ******             //05-05-13|0x07cf
//***************************************************************************             //05-05-13|0x07d0
    offset    = StringPosition;                                                           //05-06-03|0x07d1
    offset   /= tab;                                                                      //05-06-03|0x07d2
    offset   += 1;                                                                        //05-06-03|0x07d3
    offset   *= tab;                                                                      //05-06-03|0x07d4
    offset   -= StringPosition;                                                           //05-06-03|0x07d5
//***************************************************************************             //05-05-13|0x07d6
    if(offset <= 0)                                                                       //05-05-13|0x07d7
                                                           ReturnSystemError;             //05-05-13|0x07d8
    if(offset >= 256)                                                                     //05-05-13|0x07d9
                                                           ReturnSystemError;             //05-05-13|0x07da
//***************************************************************************             //05-06-03|0x07db
//*****                                                                ******             //05-06-03|0x07dc
//*****     Are we going to move any characters?                       ******             //05-06-03|0x07dd
//*****                                                                ******             //05-06-03|0x07de
//***************************************************************************             //05-06-03|0x07df
    if(offset > 1)                                                                        //05-06-03|0x07e0
      {                                                                                   //05-06-03|0x07e1
//***************************************************************************             //05-05-13|0x07e2
//*****                                                                ******             //05-05-13|0x07e3
//*****     Set up the tab move                                        ******             //05-05-13|0x07e4
//*****                                                                ******             //05-05-13|0x07e5
//***************************************************************************             //05-05-13|0x07e6
        input     = StringLength;                                                         //05-06-03|0x07e7
        input    -= 1;                                                                    //05-06-03|0x07e8
//---------------------------------------------------------------------------             //05-06-03|0x07e9
        output    = input;                                                                //05-06-03|0x07ea
        output   += offset;                                                               //99-08-12|0x07eb
        output   -= 1;                                                                    //99-08-12|0x07ec
//---------------------------------------------------------------------------             //05-06-03|0x07ed
        if(input < StringPosition)                                                        //05-05-13|0x07ee
                                                           ReturnSystemError;             //05-05-13|0x07ef
        if(output >= 256)                                                                 //05-05-13|0x07f0
                                  ReturnFinish("Tab Expanded Line Too Long");             //05-05-13|0x07f1
//***************************************************************************             //05-05-13|0x07f2
//*****                                                                ******             //05-05-13|0x07f3
//*****     Move the Text to the next tab position                     ******             //05-05-13|0x07f4
//*****                                                                ******             //05-05-13|0x07f5
//***************************************************************************             //05-05-13|0x07f6
        while(input >  StringPosition)                                                    //99-08-12|0x07f7
          {                                                                               //05-05-13|0x07f8
            if((StringChar(output) != 0) || (StringChar(input) == 0))                     //05-05-13|0x07f9
                                                           ReturnSystemError;             //05-05-13|0x07fa
            StringChar(output) = StringChar(input);                                       //05-05-13|0x07fb
            StringChar(input)  = 0;                                                       //05-05-13|0x07fc
            input             -= 1;                                                       //05-05-13|0x07fd
            output            -= 1;                                                       //05-05-13|0x07fe
            }                                                                             //05-05-13|0x07ff
        }                                                                                 //05-06-03|0x0800
//***************************************************************************             //05-05-13|0x0801
//*****                                                                ******             //05-05-13|0x0802
//*****     Blank out the remaining characters to the next tab         ******             //05-05-13|0x0803
//*****                                                                ******             //05-05-13|0x0804
//***************************************************************************             //05-05-13|0x0805
    output  = StringPosition;                                                             //05-06-03|0x0806
    output += offset;                                                                     //05-06-03|0x0807
    if(output > 254)                                                                      //09-09-24|0x0808
                                       ReturnFinish("Input String Too Long");             //09-09-24|0x0809
//---------------------------------------------------------------------------             //05-06-03|0x080a
    while(output > StringPosition)                                                        //05-06-03|0x080b
      {                                                                                   //05-06-03|0x080c
        output--;                                                                         //05-06-03|0x080d
        if((StringChar(output) ^= 0x20) != 0x20)                                          //05-06-03|0x080e
                                                           ReturnSystemError;             //05-05-13|0x080f
        }                                                                                 //05-05-13|0x0810
    StringLength += offset;                                                               //05-05-13|0x0811
    StringLength -= 1;                                                                    //05-06-03|0x0812
    if(StringLength > 254)                                                                //09-09-24|0x0813
                                       ReturnFinish("Input String Too Long");             //09-09-24|0x0814
//***************************************************************************             //05-05-13|0x0815
//*****                                                                ******             //05-05-13|0x0816
//*****     perform final tests                                        ******             //05-05-13|0x0817
//*****                                                                ******             //05-05-13|0x0818
//***************************************************************************             //05-05-13|0x0819
    if(StringChar(StringPosition) == 0x00)                 ReturnSystemError;             //05-05-13|0x081a
    if(StringChar(StringLength-1) != 0x0a)                 ReturnSystemError;             //04-10-18|0x081b
    if(StringChar(StringLength)   != 0x00)                 ReturnSystemError;             //04-10-18|0x081c
    return(Success);                                                                      //99-08-12|0x081d
}                                                                                         //98-01-16|0x081e
//                                                                                        //05-24-97|0x081e
//***************************************************************************             //04-10-18|0x0821
//***************************************************************************             //04-10-18|0x0822
//******                                                               ******             //04-10-18|0x0823
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x0824
//******---------------------------------------------------------------******             //04-10-18|0x0825
//******                          disp_line                            ******             //04-10-18|0x0826
//******                                                               ******             //04-10-18|0x0827
//***************************************************************************             //04-10-18|0x0828
//***************************************************************************             //04-10-18|0x0829
//*******************************************************************************         //10-29-97|0x082f
//*******************************************************************************         //10-29-97|0x082f
// disp_line                                                                              //07-02-02|0x082f
//*******************************************************************************         //10-29-97|0x082f
//*******************************************************************************         //10-29-97|0x082f
int PRECFILE::disp_line(                                                                  //07-02-02|0x082f
    UINT DisplayFlag                                                                      //07-02-02|0x082f
    ) {                                                                                   //07-02-02|0x082f
//*******************************************************************************         //10-29-97|0x082f
//***************************************************************************             //04-10-18|0x0832
//***************************************************************************             //04-10-18|0x0833
    SCHAR line[80];                                                                 //06-08-29|0x0834
//***************************************************************************             //04-10-18|0x0835
//***************************************************************************             //04-10-18|0x0836
    TestSample(DispLine_1);                                                               //05-04-13|0x0837
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x0838
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x0839
//***************************************************************************             //04-10-18|0x083a
    StringPosition = 0;                                                                   //04-02-97|0x083b
    if(DisplayFlag == 0)                                     return(Success);             //07-02-02|0x083c
//***************************************************************************             //05-04-13|0x083d
    if(StringLength > 78)                                                                 //06-08-29|0x083e
      {                                                                                   //06-08-29|0x083f
        sprintf(line, "%.78s", &StringChar(0));                                           //06-08-29|0x0840
        }                                                                                 //06-08-29|0x0841
      else {                                                                              //06-08-29|0x0842
        sprintf(line, "%s", &StringChar(0));                                              //06-08-29|0x0843
        if((line[StringLength-1] ^= 0xa) != 0x00)          ReturnSystemError;             //06-08-29|0x0844
        }                                                                                 //06-08-29|0x0845
//***************************************************************************             //05-04-13|0x0846
    if(GuiTestEmpty() == Yes)                                                             //14-05-13|0x0847
      {                                                                                   //14-05-13|0x0848
        if(GuiWriteLine(line) != Success)                  ReturnSystemError;             //14-05-13|0x0849
        }                                                                                 //14-05-13|0x084a
      else{                                                                               //14-05-13|0x084b
        if(GuiAppendLine(line) != Success)                 ReturnSystemError;             //14-05-13|0x084c
        }                                                                                 //14-05-13|0x084d
    return(Display);                                                                      //06-08-29|0x084e
}                                                                                         //98-01-16|0x084f
//                                                                                        //05-24-97|0x084f
//***************************************************************************             //06-08-29|0x0852
//***************************************************************************             //06-08-29|0x0853
//******                                                               ******             //06-08-29|0x0854
//******                      TEXT FILE UTILITIES                      ******             //06-08-29|0x0855
//******---------------------------------------------------------------******             //06-08-29|0x0856
//******                      initial_read_text                        ******             //06-08-29|0x0857
//******                                                               ******             //06-08-29|0x0858
//***************************************************************************             //06-08-29|0x0859
//***************************************************************************             //06-08-29|0x085a
//*******************************************************************************         //10-29-97|0x0860
//*******************************************************************************         //10-29-97|0x0860
// initial_read_text                                                                      //06-08-29|0x0860
//*******************************************************************************         //10-29-97|0x0860
//*******************************************************************************         //10-29-97|0x0860
int PRECFILE::initial_read_text(void) {                                                   //06-08-29|0x0860
//*******************************************************************************         //10-29-97|0x0860
    if(file_manager(FD_READ_TEXT) != Success)                   ReturnSystemError;        //06-08-29|0x0863
    MemSet(tokens_addr, 0x00, sizeof(TOKENS));                                            //06-08-29|0x0865
    return_test(InitialReadText_1);                                                       //06-08-29|0x0866
}                                                                                         //06-08-29|0x0867
//                                                                                        //05-24-97|0x0867
//***************************************************************************             //04-10-18|0x086a
//***************************************************************************             //04-10-18|0x086b
//******                                                               ******             //04-10-18|0x086c
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x086d
//******---------------------------------------------------------------******             //04-10-18|0x086e
//******                          line_test                            ******             //04-10-18|0x086f
//******                                                               ******             //04-10-18|0x0870
//***************************************************************************             //04-10-18|0x0871
//***************************************************************************             //04-10-18|0x0872
//*******************************************************************************         //10-29-97|0x0879
//*******************************************************************************         //10-29-97|0x0879
// line_test                                                                              //06-08-26|0x0879
//*******************************************************************************         //10-29-97|0x0879
//*******************************************************************************         //10-29-97|0x0879
UINT PRECFILE::line_test(void) {                                                          //06-08-26|0x0879
//*******************************************************************************         //10-29-97|0x0879
//***************************************************************************             //04-10-18|0x087b
//***************************************************************************             //04-10-18|0x087c
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x087d
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x087e
//---------------------------------------------------------------------------             //06-07-13|0x087f
    StringColumn    = 0;                                                                  //04-04-97|0x0880
    StringPosition  = 0;                                                                  //04-04-97|0x0881
//---------------------------------------------------------------------------             //06-07-13|0x0882
    token_addr  = TokensTokenAddr(0);                                                     //06-07-13|0x0883
//***************************************************************************             //04-10-18|0x0884
    switch(StringChar(0))                                                                 //04-02-97|0x0885
      {                                                                                   //04-02-97|0x0886
        case '!':   TestSample(LineTest_1);               return(FileDone);               //06-09-04|0x0887
        case ';':   TestSample(LineTest_2);               return(No);                     //06-08-26|0x0888
        case 0x0d:                                                                        //09-09-24|0x0889
        case 0x0a:                                                                        //09-09-24|0x088a
                      TestSample(LineTest_3);               return(No);                   //09-09-24|0x088b
//---------------------------------------------------------------------------             //06-07-13|0x088c
        case '_':   StringType        = I_NAME;                                           //06-07-14|0x088d
                      StringStartCol    = StringColumn;                                   //06-07-14|0x088e
                      StringStartCall   = 0;                                              //06-07-14|0x088f
                      TestSample(LineTest_4);               return(Yes);                  //06-08-26|0x0890
//---------------------------------------------------------------------------             //06-07-14|0x0891
        default:                                                                          //check   |0x0892
          switch(Finish(StringLineAddr))                                                  //check   |0x0893
            {                                                                             //check   |0x0894
              case UserError:       ReturnFinish("Illegal First Character");              //check   |0x0895
              default:                                ReturnSystemError;                  //check   |0x0896
              }                                                                           //check   |0x0897
        }                                                                                 //04-01-97|0x0898
}                                                                                         //98-01-16|0x0899
//                                                                                        //05-24-97|0x0899
//***************************************************************************             //04-10-18|0x089c
//***************************************************************************             //04-10-18|0x089d
//******                                                               ******             //04-10-18|0x089e
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x089f
//******---------------------------------------------------------------******             //04-10-18|0x08a0
//******                        first_delim                            ******             //04-10-18|0x08a1
//******                                                               ******             //04-10-18|0x08a2
//***************************************************************************             //04-10-18|0x08a3
//***************************************************************************             //04-10-18|0x08a4
//***************************************************************************             //05-02-01|0x08a9
//***************************************************************************             //05-02-01|0x08aa
//*******************************************************************************         //10-29-97|0x08ac
//*******************************************************************************         //10-29-97|0x08ac
// first_delim                                                                            //06-09-04|0x08ac
//*******************************************************************************         //10-29-97|0x08ac
//*******************************************************************************         //10-29-97|0x08ac
UINT PRECFILE::first_delim(void) {                                                        //06-09-04|0x08ac
//*******************************************************************************         //10-29-97|0x08ac
//***************************************************************************             //04-10-18|0x08ae
//***************************************************************************             //04-10-18|0x08af
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x08b0
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x08b1
loop:                                                                                     //04-04-97|0x08b2
    switch(StringChar(StringPosition++))                                                  //04-02-97|0x08b3
      {                                                                                   //04-02-97|0x08b4
        case 0x09:  ReturnSystemError;                                                    //04-04-97|0x08b5
        case 0x20:  ++StringColumn;                  goto_test(FirstDelim_1);             //04-10-18|0x08b6
        case '.': TokenChar(TokenLength) = 0;                                             //04-04-97|0x08b8
                    TokensNoTokens         = 1;                                           //04-04-97|0x08b9
                    StringColumn          += 1;                                           //98-07-28|0x08ba
                    return_yes(FirstDelim_2);                                             //06-10-05|0x08bb
        case ':': TokenChar(TokenLength) = 0;                                             //04-04-97|0x08bd
                    TokensNoTokens         = 1;                                           //04-04-97|0x08be
                    token_addr = TokensTokenAddr(TokensNoTokens);                         //98-07-28|0x08bf
                    StringColumn += 1;                                                    //98-07-28|0x08c0
                    return_no(FirstDelim_3);                                              //06-10-05|0x08c1
        default:    ReturnFinish("Illegal Command Deliminator");                          //04-02-97|0x08c3
        }                                                                                 //04-02-97|0x08c4
}                                                                                         //98-01-16|0x08c5
//                                                                                        //05-24-97|0x08c5
//***************************************************************************             //04-10-18|0x08c8
//***************************************************************************             //04-10-18|0x08c9
//******                                                               ******             //04-10-18|0x08ca
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x08cb
//******---------------------------------------------------------------******             //04-10-18|0x08cc
//******                            end_test                           ******             //04-10-18|0x08cd
//******                                                               ******             //04-10-18|0x08ce
//***************************************************************************             //04-10-18|0x08cf
//***************************************************************************             //04-10-18|0x08d0
//*******************************************************************************         //10-29-97|0x08d7
//*******************************************************************************         //10-29-97|0x08d7
// end_test                                                                               //06-08-26|0x08d7
//*******************************************************************************         //10-29-97|0x08d7
//*******************************************************************************         //10-29-97|0x08d7
UINT PRECFILE::end_test(void) {                                                           //06-08-26|0x08d7
//*******************************************************************************         //10-29-97|0x08d7
//***************************************************************************             //04-10-18|0x08d9
//***************************************************************************             //04-10-18|0x08da
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x08db
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x08dc
loop:                                                                                     //04-04-97|0x08dd
    switch(StringChar(StringPosition))                                                    //04-04-97|0x08de
      {                                                                                   //04-04-97|0x08df
        case 0x09:  ReturnSystemError;                                                    //04-04-97|0x08e0
        case 0x00:  ReturnFinish("Missing CRLF");                                         //04-04-97|0x08e1
//---------------------------------------------------------------------------             //04-10-18|0x08e2
        case 0x20:  StringColumn += 1;                                                    //04-10-18|0x08e3
                    StringPosition += 1;                                                  //04-10-18|0x08e4
                    goto_test(EndTest_1);                                                 //06-08-26|0x08e5
//---------------------------------------------------------------------------             //04-10-18|0x08e6
        case ';': StringColumn += 1;                                                      //04-10-18|0x08e7
                    return_yes(EndTest_2);                                                //06-10-05|0x08e8
//---------------------------------------------------------------------------             //04-10-18|0x08e9
        case 0x0d:                                                                        //09-09-24|0x08ea
        case 0x0a:                                                                        //09-09-24|0x08eb
                    return_yes(EndTest_3);                                                //09-09-24|0x08ec
        default:    return_no(EndTest_4);                                                 //06-08-26|0x08ed
        }                                                                                 //04-04-97|0x08ee
}                                                                                         //98-01-16|0x08ef
//                                                                                        //05-24-97|0x08ef
//***************************************************************************             //05-02-01|0x08f2
//***************************************************************************             //05-02-01|0x08f3
//******                                                               ******             //05-02-01|0x08f4
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x08f5
//******---------------------------------------------------------------******             //04-10-18|0x08f6
//******                          cont_test                            ******             //05-02-01|0x08f7
//******                                                               ******             //05-02-01|0x08f8
//***************************************************************************             //05-02-01|0x08f9
//***************************************************************************             //05-02-01|0x08fa
//*******************************************************************************         //10-29-97|0x08ff
//*******************************************************************************         //10-29-97|0x08ff
// cont_test                                                                              //07-02-02|0x08ff
//*******************************************************************************         //10-29-97|0x08ff
//*******************************************************************************         //10-29-97|0x08ff
UINT PRECFILE::cont_test(void) {                                                          //07-02-02|0x08ff
//*******************************************************************************         //10-29-97|0x08ff
//***************************************************************************             //05-02-01|0x0901
//***************************************************************************             //05-02-01|0x0902
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x0903
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x0904
    StringColumn = 0;                                                                     //98-07-28|0x0905
    StringPosition = 0;                                                                   //04-04-97|0x0906
    switch(StringChar(0))                                                                 //04-04-97|0x0907
      {                                                                                   //04-04-97|0x0908
        case 0x20:                                    return_yes(ContTest_1);             //07-02-02|0x0909
        case ';':                                   return_no(ContTest_2);                //07-02-02|0x090a
        case 0x0d:                                                                        //09-09-24|0x090b
        case 0x0a:                                                                        //09-09-24|0x090c
                                                      return_no(ContTest_3);              //09-09-24|0x090d
        case 0x09:                                    ReturnSystemError;                  //04-04-97|0x090e
        default:                                                                          //check   |0x090f
          switch(Finish(StringLineAddr))                                                  //check   |0x0910
            {                                                                             //check   |0x0911
              case UserError:       ReturnFinish("Illegal First Character");              //check   |0x0912
              default:                                ReturnSystemError;                  //check   |0x0913
              }                                                                           //check   |0x0914
        }                                                                                 //04-04-97|0x0915
}                                                                                         //98-01-16|0x0916
//                                                                                        //05-24-97|0x0916
//***************************************************************************             //04-10-18|0x0919
//***************************************************************************             //04-10-18|0x091a
//******                                                               ******             //04-10-18|0x091b
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x091c
//******---------------------------------------------------------------******             //04-10-18|0x091d
//******                         token_type                            ******             //04-10-18|0x091e
//******                                                               ******             //04-10-18|0x091f
//***************************************************************************             //04-10-18|0x0920
//***************************************************************************             //04-10-18|0x0921
//*******************************************************************************         //10-29-97|0x092e
//*******************************************************************************         //10-29-97|0x092e
// token_type                                                                             //07-02-02|0x092e
//*******************************************************************************         //10-29-97|0x092e
//*******************************************************************************         //10-29-97|0x092e
UINT PRECFILE::token_type(void) {                                                         //07-02-02|0x092e
//*******************************************************************************         //10-29-97|0x092e
//***************************************************************************             //04-10-18|0x0931
//***************************************************************************             //04-10-18|0x0932
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x0933
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x0934
loop:                                                                                     //04-04-97|0x0935
    switch(StringChar(StringPosition))                                                    //04-04-97|0x0936
      {                                                                                   //04-04-97|0x0937
        case 0x09:      ReturnSystemError;                                                //98-07-28|0x0938
//---------------------------------------------------------------------------             //04-10-18|0x0939
        case 0x20:      StringColumn     += 1;                                            //98-07-28|0x093a
                        StringPosition   += 1;                                            //98-07-28|0x093b
                        goto_test(TokenType_1);                                           //05-02-01|0x093c
//---------------------------------------------------------------------------             //04-10-18|0x093d
        case '"':    StringType        = I_STRING;                                        //05-06-03|0x093e
                        StringStartCol    = StringColumn;                                 //05-07-02|0x093f
                        StringStartCall   = 0;                                            //05-07-02|0x0940
                        return_test(TokenType_2);                                         //07-02-02|0x0941
//---------------------------------------------------------------------------             //04-10-18|0x0942
        case '\'':  StringColumn     += 1;                                                //05-04-29|0x0943
                        StringPosition   += 1;                                            //05-04-29|0x0944
                        StringType        = I_TOKEN;                                      //05-06-03|0x0945
                        StringStartCol    = StringColumn;                                 //05-07-02|0x0946
                        StringStartCall   = 0;                                            //05-07-02|0x0947
                        return_test(TokenType_3);                                         //07-02-02|0x0948
//---------------------------------------------------------------------------             //04-10-18|0x0949
        default:        break;                                                            //04-04-97|0x094a
        }                                                                                 //04-04-97|0x094b
//***************************************************************************             //04-10-18|0x094c
    StringType        = I_NAME;                                                           //05-06-03|0x094d
    StringStartCol    = StringColumn;                                                     //05-07-02|0x094e
    StringStartCall   = 0;                                                                //05-07-02|0x094f
//---------------------------------------------------------------------------             //04-10-18|0x0950
    if(StringChar(StringPosition) == '_')                                                 //04-10-18|0x0951
                                                    return_test(TokenType_4);             //06-08-26|0x0952
//---------------------------------------------------------------------------             //04-10-18|0x0953
    if(StringChar(StringPosition) == '$')                                                 //04-10-18|0x0954
                                                    return_test(TokenType_5);             //06-08-26|0x0955
//---------------------------------------------------------------------------             //04-10-18|0x0956
    if(StringChar(StringPosition) <  '0')                                                 //04-04-97|0x0957
                                         ReturnFinish("Illegal Token Start");             //04-04-97|0x0958
    if(StringChar(StringPosition) <= '9')                                                 //04-10-18|0x0959
                                                    return_test(TokenType_6);             //06-08-26|0x095a
//---------------------------------------------------------------------------             //04-10-18|0x095b
    if(StringChar(StringPosition) <  'A')                                                 //04-04-97|0x095c
                                         ReturnFinish("Illegal Token Start");             //04-04-97|0x095d
    if(StringChar(StringPosition) <= 'Z')                                                 //04-10-18|0x095e
                                                    return_test(TokenType_7);             //06-08-26|0x095f
//---------------------------------------------------------------------------             //04-10-18|0x0960
    if(StringChar(StringPosition) <  'a')                                                 //04-04-97|0x0961
                                         ReturnFinish("Illegal Token Start");             //04-04-97|0x0962
    if(StringChar(StringPosition) <= 'z')                                                 //04-10-18|0x0963
                                                    return_test(TokenType_8);             //06-08-26|0x0964
//---------------------------------------------------------------------------             //04-10-18|0x0965
    ReturnFinish("Illegal Token Start");                                                  //04-04-97|0x0966
}                                                                                         //98-01-16|0x0967
//                                                                                        //05-24-97|0x0967
//***************************************************************************             //04-10-18|0x096a
//***************************************************************************             //04-10-18|0x096b
//******                                                               ******             //04-10-18|0x096c
//******                      TEXT FILE UTILITIES                      ******             //04-10-18|0x096d
//******---------------------------------------------------------------******             //04-10-18|0x096e
//******                         next_delim                            ******             //04-10-18|0x096f
//******                                                               ******             //04-10-18|0x0970
//***************************************************************************             //04-10-18|0x0971
//***************************************************************************             //04-10-18|0x0972
//*******************************************************************************         //10-29-97|0x0979
//*******************************************************************************         //10-29-97|0x0979
// next_delim                                                                             //06-08-26|0x0979
//*******************************************************************************         //10-29-97|0x0979
//*******************************************************************************         //10-29-97|0x0979
UINT PRECFILE::next_delim(void) {                                                         //06-08-26|0x0979
//*******************************************************************************         //10-29-97|0x0979
//***************************************************************************             //04-10-18|0x097b
//***************************************************************************             //04-10-18|0x097c
    if(text_file_addr     == 0)                            ReturnSystemError;             //05-02-07|0x097d
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x097e
loop:                                                                                     //04-04-97|0x097f
    switch(StringChar(StringPosition++))                                                  //04-04-97|0x0980
      {                                                                                   //04-04-97|0x0981
        case 0x09:  ReturnSystemError;                                                    //98-07-28|0x0982
        case 0x20:  StringColumn += 1;                goto_test(NextDelim_1);             //05-02-01|0x0983
        case '.': if(FlagEnd != Success)                 ReturnSystemError;               //04-10-22|0x0985
                    ++TokensNoTokens;                                                     //98-01-16|0x0986
                    return_yes(NextDelim_2);                                              //06-08-26|0x0987
        case ',': if(FlagEnd != Success)                 ReturnSystemError;               //04-10-22|0x0989
                    TokensNoTokens += 1;                                                  //06-08-26|0x098a
                    if(TokensNoTokens >= 10)                                              //06-08-26|0x098b
                                          ReturnFinish("Too Many Arguments");             //06-08-26|0x098c
                    token_addr    = TokensTokenAddr(TokensNoTokens);                      //04-04-97|0x098d
                    StringColumn += 1;                                                    //98-07-28|0x098e
                    return_no(NextDelim_3);                                               //07-02-02|0x098f
        default:    ReturnFinish("Illegal Command Deliminator");                          //04-04-97|0x0991
        }                                                                                 //04-04-97|0x0992
}                                                                                         //98-01-16|0x0993
//                                                                                        //05-24-97|0x0993
//***************************************************************************             //04-10-18|0x0996
//***************************************************************************             //04-10-18|0x0997
//******                                                               ******             //04-10-18|0x0998
//******                       BINARY FILE ROUTINE                     ******             //04-10-18|0x0999
//******---------------------------------------------------------------******             //04-10-18|0x099a
//******                          create_record                        ******             //04-10-18|0x099b
//******                                                               ******             //04-10-18|0x099c
//***************************************************************************             //04-10-18|0x099d
//***************************************************************************             //04-10-18|0x099e
//*******************************************************************************         //10-29-97|0x09a4
//*******************************************************************************         //10-29-97|0x09a4
// create_record                                                                          //05-01-97|0x09a4
//*******************************************************************************         //10-29-97|0x09a4
//*******************************************************************************         //10-29-97|0x09a4
UINT PRECFILE::create_record(void) {                                                      //05-01-97|0x09a4
//*******************************************************************************         //10-29-97|0x09a4
//***************************************************************************             //04-10-18|0x09a7
//***************************************************************************             //04-10-18|0x09a8
    if(binary_file_addr   == 0)                            ReturnSystemError;             //05-02-07|0x09a9
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x09aa
    TestSample(CreateRecord_1);                                                           //04-10-18|0x09ab
    if(class_manager(FCB_READY) != Success)                  ReturnSystemError;           //06-07-27|0x09ad
    if(file_manager(FD_CREATE_RECORD) != Success)                   ReturnSystemError;    //06-07-27|0x09ae
    if(FileStream != 0)                               ReturnSystemError;                  //07-09-15|0x09af
    {                                                                                     //07-09-15|0x09af
      int file_descriptor;                                                                //07-09-15|0x09af
      file_descriptor =  open(FileName,                                                   //07-09-15|0x09af
                           O_CREAT | O_TRUNC | O_RDWR,                                    //07-09-15|0x09af
                           S_IRUSR | S_IWUSR);                                            //07-09-15|0x09af
      if(file_descriptor == -1)             ReturnFinish("Create Text");                  //07-09-15|0x09af
      FileStream = fdopen(file_descriptor, "w+");                                         //07-09-15|0x09af
      if(FileStream == 0)                             ReturnSystemError;                  //07-09-15|0x09af
    }                                                                                     //07-09-15|0x09af
    BinLength = 0;                                                                        //05-01-97|0x09b1
    return(Success);                                                                      //05-01-97|0x09b2
}                                                                                         //98-01-16|0x09b3
//                                                                                        //05-24-97|0x09b3
//***************************************************************************             //06-07-27|0x09b6
//***************************************************************************             //06-07-27|0x09b7
//******                                                               ******             //06-07-27|0x09b8
//******                       BINARY FILE ROUTINE                     ******             //06-07-27|0x09b9
//******---------------------------------------------------------------******             //06-07-27|0x09ba
//******                          append_record                        ******             //06-07-27|0x09bb
//******                                                               ******             //06-07-27|0x09bc
//***************************************************************************             //06-07-27|0x09bd
//***************************************************************************             //06-07-27|0x09be
//*******************************************************************************         //10-29-97|0x09c4
//*******************************************************************************         //10-29-97|0x09c4
// append_record                                                                          //06-07-27|0x09c4
//*******************************************************************************         //10-29-97|0x09c4
//*******************************************************************************         //10-29-97|0x09c4
UINT PRECFILE::append_record(void) {                                                      //06-07-27|0x09c4
//*******************************************************************************         //10-29-97|0x09c4
//***************************************************************************             //06-07-27|0x09c7
//***************************************************************************             //06-07-27|0x09c8
    if(binary_file_addr   == 0)                            ReturnSystemError;             //06-07-27|0x09c9
    if(file_control_addr  == 0)                            ReturnSystemError;             //06-07-27|0x09ca
    TestSample(AppendRecord_1);                                                           //06-07-27|0x09cb
    if(class_manager(FCB_READY) != Success)                  ReturnSystemError;           //06-07-27|0x09cd
    if(file_manager(FD_APPEND_RECORD) != Success)                   ReturnSystemError;    //06-07-27|0x09ce
    if(FileStream != 0)                               ReturnSystemError;                  //07-09-20|0x09cf
    FileStream = fopen(FileName, "r+b");                                                  //07-09-20|0x09cf
    if(FileStream == 0)                     ReturnFinish("Append File");                  //07-09-20|0x09cf
    if(fseek(FileStream, 0, SEEK_END)       != 0)          ReturnSystemError;             //06-07-27|0x09d1
    if((BinLength = ftell(FileStream))      <= 0)          ReturnSystemError;             //06-07-27|0x09d2
    return(Success);                                                                      //06-07-27|0x09d3
}                                                                                         //06-07-27|0x09d4
//                                                                                        //05-24-97|0x09d4
//***************************************************************************             //05-02-01|0x09d7
//***************************************************************************             //05-02-01|0x09d8
//******                                                               ******             //05-02-01|0x09d9
//******                       BINARY FILE ROUTINE                     ******             //04-10-18|0x09da
//******---------------------------------------------------------------******             //04-10-18|0x09db
//******                            open_record                        ******             //05-02-01|0x09dc
//******                                                               ******             //05-02-01|0x09dd
//***************************************************************************             //05-02-01|0x09de
//***************************************************************************             //05-02-01|0x09df
//*******************************************************************************         //10-29-97|0x09e5
//*******************************************************************************         //10-29-97|0x09e5
// open_record                                                                            //05-14-97|0x09e5
//*******************************************************************************         //10-29-97|0x09e5
//*******************************************************************************         //10-29-97|0x09e5
UINT PRECFILE::open_record(void) {                                                        //05-14-97|0x09e5
//*******************************************************************************         //10-29-97|0x09e5
//***************************************************************************             //05-02-01|0x09e9
//***************************************************************************             //05-02-01|0x09ea
    TestSample(OpenRecord_1);                                                             //05-02-01|0x09eb
    if(binary_file_addr   == 0)                            ReturnSystemError;             //05-02-07|0x09ec
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x09ed
    if(class_manager(FCB_READY) != Success)                  ReturnSystemError;           //06-07-27|0x09ef
    if(file_manager(FD_OPEN_RECORD) != Success)                   ReturnSystemError;      //06-07-27|0x09f0
    if(FileStream != 0)                               ReturnSystemError;                  //07-09-20|0x09f1
    FileStream = fopen(FileName, "rb");                                                   //07-09-20|0x09f1
    if(FileStream == 0)                       ReturnFinish("Open File");                  //07-09-20|0x09f1
    if(fseek(FileStream, 0L, SEEK_END))                    ReturnSystemError;             //05-02-01|0x09f3
    if((BinLength = ftell(FileStream))      ==-1l)         ReturnSystemError;             //05-02-01|0x09f4
    return(Success);                                                                      //04-01-97|0x09f5
}                                                                                         //98-01-16|0x09f6
//                                                                                        //05-24-97|0x09f6
//***************************************************************************             //04-10-18|0x09f9
//***************************************************************************             //04-10-18|0x09fa
//******                                                               ******             //04-10-18|0x09fb
//******                       BINARY FILE ROUTINE                     ******             //04-10-18|0x09fc
//******---------------------------------------------------------------******             //04-10-18|0x09fd
//******                           read_data                           ******             //04-10-18|0x09fe
//******                                                               ******             //04-10-18|0x09ff
//***************************************************************************             //04-10-18|0x0a00
//***************************************************************************             //04-10-18|0x0a01
//***************************************************************************             //04-10-18|0x0a05
//***************************************************************************             //04-10-18|0x0a06
//*******************************************************************************         //10-29-97|0x0a08
//*******************************************************************************         //10-29-97|0x0a08
// read_data                                                                              //06-06-11|0x0a08
//*******************************************************************************         //10-29-97|0x0a08
//*******************************************************************************         //10-29-97|0x0a08
UINT PRECFILE::read_data(                                                                 //06-06-11|0x0a08
    SCHAR_FAR Addr,                                                                       //06-06-11|0x0a08
    SLONG Pos,                                                                            //06-06-11|0x0a08
    SLONG Size                                                                            //06-06-11|0x0a08
    ) {                                                                                   //06-06-11|0x0a08
//*******************************************************************************         //10-29-97|0x0a08
//***************************************************************************             //04-10-18|0x0a0b
//***************************************************************************             //04-10-18|0x0a0c
  SLONG test;                                                                        //06-06-11|0x0a0d
//***************************************************************************             //04-10-18|0x0a0e
//***************************************************************************             //04-10-18|0x0a0f
    if(binary_file_addr   == 0)                            ReturnSystemError;             //05-02-07|0x0a10
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x0a11
    TestSample(ReadData_1);                                                               //04-10-18|0x0a12
    if(class_manager(FCB_READY) != Success)                  ReturnSystemError;           //06-07-27|0x0a14
    if(file_manager(FD_READ_RECORD) != Success)                   ReturnSystemError;      //06-07-27|0x0a15
    if(fseek(FileStream,Pos,SEEK_SET))                     ReturnSystemError;             //04-10-18|0x0a17
    test = fread(Addr,1,Size,FileStream);                                                 //05-14-97|0x0a18
    if(test != Size)                                       ReturnSystemError;             //04-10-18|0x0a19
    Pos += Size;                                                                          //05-01-97|0x0a1a
    if(Pos                > BinLength)                     ReturnSystemError;             //06-06-11|0x0a1b
    if(ftell(FileStream) != Pos)                           ReturnSystemError;             //06-06-11|0x0a1c
    return(Success);                                                                      //05-14-97|0x0a1d
}                                                                                         //98-01-16|0x0a1e
//                                                                                        //05-24-97|0x0a1e
//***************************************************************************             //04-10-18|0x0a21
//***************************************************************************             //04-10-18|0x0a22
//******                                                               ******             //04-10-18|0x0a23
//******                       BINARY FILE ROUTINE                     ******             //04-10-18|0x0a24
//******---------------------------------------------------------------******             //04-10-18|0x0a25
//******                           write_data                          ******             //04-10-18|0x0a26
//******                                                               ******             //04-10-18|0x0a27
//***************************************************************************             //04-10-18|0x0a28
//***************************************************************************             //04-10-18|0x0a29
//*******************************************************************************         //10-29-97|0x0a2f
//*******************************************************************************         //10-29-97|0x0a2f
// write_data                                                                             //06-06-11|0x0a2f
//*******************************************************************************         //10-29-97|0x0a2f
//*******************************************************************************         //10-29-97|0x0a2f
UINT PRECFILE::write_data(                                                                //06-06-11|0x0a2f
    SLONG Pos,                                                                            //06-06-11|0x0a2f
    SCHAR_FAR Addr,                                                                       //06-06-11|0x0a2f
    SLONG Size                                                                            //06-06-11|0x0a2f
    ) {                                                                                   //06-06-11|0x0a2f
//*******************************************************************************         //10-29-97|0x0a2f
//***************************************************************************             //04-10-18|0x0a32
//***************************************************************************             //04-10-18|0x0a33
  SLONG work;                                                                        //04-10-18|0x0a34
//***************************************************************************             //04-10-18|0x0a35
//***************************************************************************             //04-10-18|0x0a36
    if(binary_file_addr   == 0)                            ReturnSystemError;             //05-02-07|0x0a37
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x0a38
    TestSample(WriteData_1);                                                              //04-10-18|0x0a39
    if(class_manager(FCB_READY) != Success)                  ReturnSystemError;           //06-07-27|0x0a3b
    if(file_manager(FD_WRITE_RECORD) != Success)                   ReturnSystemError;     //06-07-27|0x0a3c
    if(fseek(FileStream,Pos,SEEK_SET))                     ReturnSystemError;             //04-10-18|0x0a3e
    work = fwrite(Addr,1,Size,FileStream);                                                //04-10-18|0x0a3f
    if(work != Size)                             ReturnFinish("Write Error");             //04-10-18|0x0a40
    Pos += Size;                                                                          //05-01-97|0x0a41
    if(Pos > BinLength)   BinLength = Pos;                                                //05-01-97|0x0a42
    if(ftell(FileStream) != Pos)                           ReturnSystemError;             //06-06-11|0x0a43
    return(Success);                                                                      //05-01-97|0x0a44
}                                                                                         //98-01-16|0x0a45
//                                                                                        //05-24-97|0x0a45
//***************************************************************************             //04-10-18|0x0a48
//***************************************************************************             //04-10-18|0x0a49
//******                                                               ******             //04-10-18|0x0a4a
//******                  STATE MACHINE BASED MANAGERS                 ******             //04-10-18|0x0a4b
//******---------------------------------------------------------------******             //04-10-18|0x0a4c
//******                        class_manager                          ******             //04-10-18|0x0a4d
//******                                                               ******             //04-10-18|0x0a4e
//***************************************************************************             //04-10-18|0x0a4f
//***************************************************************************             //04-10-18|0x0a50
//*******************************************************************************         //10-29-97|0x0a56
//*******************************************************************************         //10-29-97|0x0a56
// class_manager                                                                          //04-01-97|0x0a56
//*******************************************************************************         //10-29-97|0x0a56
//*******************************************************************************         //10-29-97|0x0a56
UINT PRECFILE::class_manager(                                                             //04-01-97|0x0a56
    UINT NewState                                                                         //04-01-97|0x0a56
    ) {                                                                                   //04-01-97|0x0a56
//*******************************************************************************         //10-29-97|0x0a56
//***************************************************************************             //04-10-18|0x0a59
//***************************************************************************             //04-10-18|0x0a5a
    switch(NewState)                                                                      //05-01-28|0x0a5b
      {                                                                                   //05-01-28|0x0a5c
        case FCT_READY:                                                                   //05-01-28|0x0a5d
          switch(class_state)                                                             //05-01-28|0x0a5e
          {                                                                               //05-01-28|0x0a5f
            case FC_INACTIVE:             ReturnClassSuccessState(FCT_READY);             //05-01-28|0x0a60
            case FCT_READY:               ReturnClassSuccessState(FCT_READY);             //05-01-28|0x0a61
            default:                                       ReturnSystemError;             //05-01-28|0x0a62
            }                                                                             //05-01-28|0x0a63
        case FCB_READY:                                                                   //05-01-28|0x0a65
          switch(class_state)                                                             //05-01-28|0x0a66
          {                                                                               //05-01-28|0x0a67
            case FC_INACTIVE:             ReturnClassSuccessState(FCB_READY);             //05-01-28|0x0a68
            case FCB_READY:               ReturnClassSuccessState(FCB_READY);             //05-01-28|0x0a69
            default:                                       ReturnSystemError;             //05-01-28|0x0a6a
            }                                                                             //05-01-28|0x0a6b
        case FC_READY:                                                                    //05-01-28|0x0a6d
          switch(class_state)                                                             //05-01-28|0x0a6e
          {                                                                               //05-01-28|0x0a6f
            case FCT_READY:               ReturnClassSuccessState(FCT_READY);             //05-01-28|0x0a70
            case FCB_READY:               ReturnClassSuccessState(FCB_READY);             //05-01-28|0x0a71
            default:                                       ReturnSystemError;             //05-01-28|0x0a72
            }                                                                             //05-01-28|0x0a73
        case FC_INACTIVE:                                                                 //05-01-28|0x0a75
          switch(class_state)                                                             //05-01-28|0x0a76
            {                                                                             //05-01-28|0x0a77
              case FCT_READY:           ReturnClassSuccessState(FC_INACTIVE);             //05-01-28|0x0a78
              case FCB_READY:           ReturnClassSuccessState(FC_INACTIVE);             //05-01-28|0x0a79
              default:                                     ReturnSystemError;             //05-01-28|0x0a7a
              }                                                                           //05-01-28|0x0a7b
        default:                                           ReturnSystemError;             //05-01-28|0x0a7c
        }                                                                                 //05-01-28|0x0a7d
}                                                                                         //98-01-16|0x0a7e
//                                                                                        //05-24-97|0x0a7e
//***************************************************************************             //04-10-18|0x0a81
//***************************************************************************             //04-10-18|0x0a82
//******                                                               ******             //04-10-18|0x0a83
//******                  STATE MACHINE BASED MANAGERS                 ******             //04-10-18|0x0a84
//******---------------------------------------------------------------******             //04-10-18|0x0a85
//******                        file_manager                           ******             //04-10-18|0x0a86
//******                                                               ******             //04-10-18|0x0a87
//***************************************************************************             //04-10-18|0x0a88
//***************************************************************************             //04-10-18|0x0a89
//***************************************************************************             //04-10-18|0x0a8b
//***************************************************************************             //04-10-18|0x0a8c
//*******************************************************************************         //10-29-97|0x0a8e
//*******************************************************************************         //10-29-97|0x0a8e
// file_manager                                                                           //05-01-97|0x0a8e
//*******************************************************************************         //10-29-97|0x0a8e
//*******************************************************************************         //10-29-97|0x0a8e
UINT PRECFILE::file_manager(                                                              //05-01-97|0x0a8e
    UINT NewState                                                                         //05-01-97|0x0a8e
    ) {                                                                                   //05-01-97|0x0a8e
//*******************************************************************************         //10-29-97|0x0a8e
//***************************************************************************             //04-10-18|0x0a90
//***************************************************************************             //04-10-18|0x0a91
    if(file_control_addr  == 0)                            ReturnSystemError;             //05-02-01|0x0a92
    switch(NewState)                                                                      //05-01-97|0x0a93
      {                                                                                   //05-01-97|0x0a94
        case FD_PATH:                                                                     //07-03-23|0x0a96
          switch(FileState)                                                               //07-03-23|0x0a97
            {                                                                             //07-03-23|0x0a98
              case FD_INACTIVE:       ReturnSuccessState(FD_PATH);                        //07-03-23|0x0a99
              default:                ReturnSystemError;                                  //07-03-23|0x0a9a
              }                                                                           //07-03-23|0x0a9b
        case FD_NAME:                                                                     //05-01-97|0x0a9d
          switch(FileState)                                                               //05-01-97|0x0a9e
            {                                                                             //05-01-97|0x0a9f
              case FD_PATH:           ReturnSuccessState(FD_NAME);                        //04-10-18|0x0aa0
              case FD_INACTIVE:       ReturnSuccessState(FD_NAME);                        //04-10-18|0x0aa1
              default:                ReturnSystemError;                                  //05-01-97|0x0aa2
              }                                                                           //05-01-97|0x0aa3
        case FD_TIME:                                                                     //06-08-17|0x0aa5
          switch(FileState)                                                               //06-08-17|0x0aa6
            {                                                                             //06-08-17|0x0aa7
              case FD_NAME:           ReturnSuccessState(FD_NAME);                        //06-08-17|0x0aa8
              default:                ReturnSystemError;                                  //06-08-17|0x0aa9
              }                                                                           //06-08-17|0x0aaa
        case FD_OPEN_TEXT:                                                                //05-01-97|0x0aac
          switch(FileState)                                                               //05-01-97|0x0aad
            {                                                                             //05-01-97|0x0aae
              case FD_NAME:           ReturnSuccessState(FD_OPEN_TEXT);                   //04-10-18|0x0aaf
              default:                ReturnSystemError;                                  //05-01-97|0x0ab0
              }                                                                           //05-01-97|0x0ab1
        case FD_READ_TEXT:                                                                //05-01-97|0x0ab3
          switch(FileState)                                                               //05-01-97|0x0ab4
            {                                                                             //05-01-97|0x0ab5
              case FD_OPEN_TEXT:      ReturnSuccessState(FD_READ_TEXT);                   //04-10-18|0x0ab6
              case FD_READ_TEXT:      ReturnSuccessState(FD_READ_TEXT);                   //04-10-18|0x0ab7
              default:                ReturnSystemError;                                  //05-01-97|0x0ab8
              }                                                                           //05-01-97|0x0ab9
        case FD_CREATE_RECORD:                                                            //05-01-97|0x0abb
          switch(FileState)                                                               //05-01-97|0x0abc
            {                                                                             //05-01-97|0x0abd
              case FD_NAME:           ReturnSuccessState(FD_CREATE_RECORD);               //04-10-22|0x0abe
              default:                ReturnSystemError;                                  //05-01-97|0x0abf
              }                                                                           //05-01-97|0x0ac0
        case FD_APPEND_RECORD:                                                            //06-07-27|0x0ac2
          switch(FileState)                                                               //06-07-27|0x0ac3
            {                                                                             //06-07-27|0x0ac4
              case FD_NAME:           ReturnSuccessState(FD_APPEND_RECORD);               //06-07-27|0x0ac5
              default:                ReturnSystemError;                                  //06-07-27|0x0ac6
              }                                                                           //06-07-27|0x0ac7
        case FD_OPEN_RECORD:                                                              //05-14-97|0x0ac9
          switch(FileState)                                                               //05-01-97|0x0aca
            {                                                                             //05-01-97|0x0acb
              case FD_NAME:           ReturnSuccessState(FD_OPEN_RECORD);                 //04-10-18|0x0acc
              default:                ReturnSystemError;                                  //05-01-97|0x0acd
              }                                                                           //05-01-97|0x0ace
        case FD_WRITE_RECORD:                                                             //05-01-97|0x0ad0
          switch(FileState)                                                               //05-01-97|0x0ad1
            {                                                                             //05-01-97|0x0ad2
              case FD_CREATE_RECORD:  ReturnSuccessState(FD_WRITE_RECORD);                //04-10-18|0x0ad3
              case FD_APPEND_RECORD:  ReturnSuccessState(FD_WRITE_RECORD);                //06-07-27|0x0ad4
              case FD_WRITE_RECORD:   ReturnSuccessState(FD_WRITE_RECORD);                //04-10-18|0x0ad5
              default:                ReturnSystemError;                                  //05-01-97|0x0ad6
              }                                                                           //05-01-97|0x0ad7
        case FD_READ_RECORD:                                                              //05-14-97|0x0ad9
          switch(FileState)                                                               //05-01-97|0x0ada
            {                                                                             //05-01-97|0x0adb
              case FD_OPEN_RECORD:    ReturnSuccessState(FD_READ_RECORD);                 //05-02-01|0x0adc
              case FD_READ_RECORD:    ReturnSuccessState(FD_READ_RECORD);                 //05-02-01|0x0add
              case FD_APPEND_RECORD:  ReturnSuccessState(FD_WRITE_RECORD);                //06-07-27|0x0ade
              case FD_WRITE_RECORD:   ReturnSuccessState(FD_WRITE_RECORD);                //04-10-18|0x0adf
              default:                ReturnSystemError;                                  //05-01-97|0x0ae0
              }                                                                           //05-01-97|0x0ae1
        case FD_INACTIVE:                                                                 //05-01-97|0x0ae3
          switch(FileState)                                                               //05-01-97|0x0ae4
            {                                                                             //05-01-97|0x0ae5
              case FD_OPEN_TEXT:      ReturnSuccessState(FD_NAME);                        //07-02-02|0x0ae6
              case FD_READ_TEXT:      ReturnSuccessState(FD_NAME);                        //06-08-17|0x0ae7
              case FD_NAME:           ReturnSuccessState(FD_NAME);                        //07-02-02|0x0ae8
              case FT_WRITE_LINE:     ReturnSuccessState(FD_NAME);                        //08-04-18|0x0ae9
              case FT_NEXT_PUT:       ReturnSuccessState(FD_NAME);                        //07-02-02|0x0aea
              case FD_READ_RECORD:    ReturnSuccessState(FD_NAME);                        //07-02-02|0x0aeb
              case FD_WRITE_RECORD:   ReturnSuccessState(FD_NAME);                        //07-02-02|0x0aec
              case FD_CREATE_RECORD:  ReturnSuccessState(FD_NAME);                        //10-03-22|0x0aed
              default:                ReturnSystemError;                                  //05-01-97|0x0aee
              }                                                                           //05-01-97|0x0aef
        case FD_DELETE:                                                                   //06-09-04|0x0af1
          switch(FileState)                                                               //06-09-04|0x0af2
            {                                                                             //06-09-04|0x0af3
              case FD_OPEN_TEXT:      ReturnSuccessState(FD_INACTIVE);                    //07-02-02|0x0af4
              case FD_READ_TEXT:      ReturnSuccessState(FD_INACTIVE);                    //07-02-02|0x0af5
              case FD_NAME:           ReturnSuccessState(FD_INACTIVE);                    //07-02-02|0x0af6
              case FT_WRITE_LINE:     ReturnSuccessState(FD_INACTIVE);                    //08-04-18|0x0af7
              case FT_NEXT_PUT:       ReturnSuccessState(FD_INACTIVE);                    //07-02-02|0x0af8
              case FD_CREATE_RECORD:  ReturnSuccessState(FD_INACTIVE);                    //07-09-15|0x0af9
              case FD_APPEND_RECORD:  ReturnSuccessState(FD_INACTIVE);                    //07-09-15|0x0afa
              case FD_READ_RECORD:    ReturnSuccessState(FD_INACTIVE);                    //07-02-02|0x0afb
              case FD_WRITE_RECORD:   ReturnSuccessState(FD_INACTIVE);                    //06-09-04|0x0afc
              default:                ReturnSystemError;                                  //06-09-04|0x0afd
              }                                                                           //06-09-04|0x0afe
        default:                      ReturnSystemError;                                  //05-01-97|0x0b00
        }                                                                                 //05-01-97|0x0b01
}                                                                                         //98-01-16|0x0b02
//                                                                                        //05-24-97|0x0b02
//***************************************************************************             //05-04-29|0x0b05
//***************************************************************************             //05-04-29|0x0b06
//******                                                               ******             //05-04-29|0x0b07
//******                       file_reset                              ******             //05-04-29|0x0b08
//******                                                               ******             //05-04-29|0x0b09
//***************************************************************************             //05-04-29|0x0b0a
//***************************************************************************             //05-04-29|0x0b0b
//*******************************************************************************         //10-29-97|0x0b0d
//*******************************************************************************         //10-29-97|0x0b0d
// file_reset                                                                             //05-04-29|0x0b0d
//*******************************************************************************         //10-29-97|0x0b0d
//*******************************************************************************         //10-29-97|0x0b0d
void PRECFILE::file_reset(void) {                                                         //05-04-29|0x0b0d
//*******************************************************************************         //10-29-97|0x0b0d
//***************************************************************************             //05-04-29|0x0b10
//***************************************************************************             //05-04-29|0x0b11
    fcloseall( );                                                                         //05-04-29|0x0b12
    tab = 8;                                                                              //05-04-29|0x0b13
    class_state       = FC_INACTIVE;                                                      //05-04-29|0x0b14
    text_file_addr    = 0;                                                                //05-04-29|0x0b15
    binary_file_addr  = 0;                                                                //05-04-29|0x0b16
    file_control_addr = 0;                                                                //05-04-29|0x0b17
    return;                                                                               //05-04-29|0x0b18
}                                                                                         //05-04-29|0x0b19
//                                                                                        //05-24-97|0x0b19
//***************************************************************************             //04-10-18|0x0b1c
//***************************************************************************             //04-10-18|0x0b1d
//******                                                               ******             //04-10-18|0x0b1e
//******                       TEST WRAPPERS                           ******             //04-10-18|0x0b1f
//******                                                               ******             //04-10-18|0x0b20
//***************************************************************************             //04-10-18|0x0b21
//***************************************************************************             //04-10-18|0x0b22
//*******************************************************************************         //10-29-97|0x0b23
//*******************************************************************************         //10-29-97|0x0b23
// precfile_test_reset                                                                    //04-10-18|0x0b23
//*******************************************************************************         //10-29-97|0x0b23
//*******************************************************************************         //10-29-97|0x0b23
UINT PRECFILE::precfile_test_reset(void) {                                                //04-10-18|0x0b23
//*******************************************************************************         //10-29-97|0x0b23
//************************************************************************                //04-10-18|0x0b23
    switch(BasicTestReset())                                                              //04-10-18|0x0b23
      {                                                                                   //04-10-18|0x0b23
        case Success:                                     return(Success);                //04-10-18|0x0b23
        default:                                        ReturnSystemError;                //04-10-18|0x0b23
        }                                                                                 //04-10-18|0x0b23
}                                                                                         //04-10-18|0x0b23
//                                                                                        //05-24-97|0x0b23
//***************************************************************************             //04-10-18|0x0b24
//*******************************************************************************         //10-29-97|0x0b25
//*******************************************************************************         //10-29-97|0x0b25
// precfile_test_read                                                                     //04-10-18|0x0b25
//*******************************************************************************         //10-29-97|0x0b25
//*******************************************************************************         //10-29-97|0x0b25
UINT PRECFILE::precfile_test_read(void) {                                                 //04-10-18|0x0b25
//*******************************************************************************         //10-29-97|0x0b25
//************************************************************************                //04-10-18|0x0b25
    switch(BasicTestRead(&test_samples[0], test_samples[0]))                              //04-10-18|0x0b25
      {                                                                                   //04-10-18|0x0b25
        case Success:                                     return(Success);                //04-10-18|0x0b25
        default:                                        ReturnSystemError;                //04-10-18|0x0b25
        }                                                                                 //04-10-18|0x0b25
}                                                                                         //04-10-18|0x0b25
//                                                                                        //05-24-97|0x0b25
//***************************************************************************             //04-10-18|0x0b26
//*******************************************************************************         //10-29-97|0x0b27
//*******************************************************************************         //10-29-97|0x0b27
// precfile_test_write                                                                    //04-10-18|0x0b27
//*******************************************************************************         //10-29-97|0x0b27
//*******************************************************************************         //10-29-97|0x0b27
UINT PRECFILE::precfile_test_write(void) {                                                //04-10-18|0x0b27
//*******************************************************************************         //10-29-97|0x0b27
//************************************************************************                //04-10-18|0x0b27
    switch(BasicTestWrite(&test_samples[0]))                                              //04-10-18|0x0b27
      {                                                                                   //04-10-18|0x0b27
        case Success:                                     return(Success);                //04-10-18|0x0b27
        default:                                        ReturnSystemError;                //04-10-18|0x0b27
        }                                                                                 //04-10-18|0x0b27
}                                                                                         //04-10-18|0x0b27
//                                                                                        //05-24-97|0x0b27
//***************************************************************************             //04-10-18|0x0b28
//*******************************************************************************         //10-29-97|0x0b29
//*******************************************************************************         //10-29-97|0x0b29
// precfile_test_report                                                                   //04-10-18|0x0b29
//*******************************************************************************         //10-29-97|0x0b29
//*******************************************************************************         //10-29-97|0x0b29
UINT PRECFILE::precfile_test_report(void) {                                               //04-10-18|0x0b29
//*******************************************************************************         //10-29-97|0x0b29
//************************************************************************                //04-10-18|0x0b29
    switch(BasicTestReport(&test_samples[0], "PRECFILE"))                                 //04-10-18|0x0b29
      {                                                                                   //04-10-18|0x0b29
        case Success:                                     return(Success);                //04-10-18|0x0b29
        default:                                        ReturnSystemError;                //04-10-18|0x0b29
        }                                                                                 //04-10-18|0x0b29
}                                                                                         //04-10-18|0x0b29
//                                                                                        //05-24-97|0x0b29
//***************************************************************************             //04-10-18|0x0b2c
//***************************************************************************             //04-10-18|0x0b2d
//******                                                               ******             //04-10-18|0x0b2e
//******                        constructor                            ******             //04-10-18|0x0b2f
//******                                                               ******             //04-10-18|0x0b30
//***************************************************************************             //04-10-18|0x0b31
//***************************************************************************             //04-10-18|0x0b32
//*******************************************************************************         //10-29-97|0x0b33
//*******************************************************************************         //10-29-97|0x0b33
// CONSTRUCTOR                                                                            //04-01-97|0x0b33
//*******************************************************************************         //10-29-97|0x0b33
//*******************************************************************************         //10-29-97|0x0b33
PRECFILE::PRECFILE() {                                                                    //04-01-97|0x0b33
//***************************************************************************             //04-10-18|0x0b34
//***************************************************************************             //04-10-18|0x0b35
    { ULONG i;                                                                            //04-10-18|0x0b36
      test_samples[NoTestSamples] = TestIndex;                                            //04-10-18|0x0b36
      i = 1;                                                                              //04-10-18|0x0b36
      while(i<TestIndex)                                                                  //04-10-18|0x0b36
        {                                                                                 //04-10-18|0x0b36
          test_samples[i] = 0;                                                            //04-10-18|0x0b36
          ++i;                                                                            //04-10-18|0x0b36
          }                                                                               //04-10-18|0x0b36
      }                                                                                   //04-10-18|0x0b36
//***************************************************************************             //04-10-18|0x0b37
    tab = 8;                                                                              //04-02-97|0x0b38
    class_state       = FC_INACTIVE;                                                      //04-01-97|0x0b39
    text_file_addr    = 0;                                                                //05-02-01|0x0b3a
    binary_file_addr  = 0;                                                                //05-02-07|0x0b3b
    file_control_addr = 0;                                                                //05-02-07|0x0b3c
    display_flag      = 1;                                                                //06-09-04|0x0b3d
    display_state     = 3;                                                                //08-04-16|0x0b3e
}                                                                                         //06-09-04|0x0b3f
//                                                                                        //05-24-97|0x0b3f
//*******************************************************************************         //05-24-97|0x0b43
//*******************************************************************************         //05-24-97|0x0b43
//****                       END OF FILE                                     ****         //05-24-97|0x0b43
//*******************************************************************************         //05-24-97|0x0b43
//*******************************************************************************         //05-24-97|0x0b43
