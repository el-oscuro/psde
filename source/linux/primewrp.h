/*********************************************************************************************//* 0x0002|check    */
/*********************************************************************************************//* 0x0003|check    */
/*********                                                                              ******//* 0x0004|check    */
/*********                         PRIME GENERATOR WRAPPER SOURCE                       ******//* 0x0005|check    */
/*********                                                                              ******//* 0x0006|check    */
/*********************************************************************************************//* 0x0007|check    */
/*********************************************************************************************//* 0x0008|check    */
/*****                Copyright: 2006 Robert H. Adams                                    *****//* 0x0009|check    */
/*********************************************************************************************//* 0x0009|check    */
/*********************************************************************************************//* 0x0009|check    */
/*****           The purpose of this program as well as instructions regarding           *****//* 0x0009|check    */
/*****           its use is defined in the associated manual.                            *****//* 0x0009|check    */
/*********************************************************************************************//* 0x0009|check    */
/*********************************************************************************************//* 0x0009|check    */
/*****           This program is free software; you can redistribute it and/or           *****//* 0x0009|check    */
/*****           modify it under the terms of the GNU General Public License             *****//* 0x0009|check    */
/*****           as published by the Free Software Foundation; either version 2          *****//* 0x0009|check    */
/*****           of the License, or(at your option) any later version.                   *****//* 0x0009|check    */
/*****                                                                                   *****//* 0x0009|check    */
/*****           This program is distributed in the hope that it will be useful,         *****//* 0x0009|check    */
/*****           but WITHOUT ANY WARRANTY; without even the implied warranty of          *****//* 0x0009|check    */
/*****           MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *****//* 0x0009|check    */
/*****           GNU General Public License for more details.                            *****//* 0x0009|check    */
/*****                                                                                   *****//* 0x0009|check    */
/*****           You should have received a copy of the GNU General Public               *****//* 0x0009|check    */
/*****           License along with this program; if not, write to the Free              *****//* 0x0009|check    */
/*****           Software Foundation, Inc., 51 Franklin Street, Fifth Floor,             *****//* 0x0009|check    */
/*****           Boston, MA., 02110-1301USA                                              *****//* 0x0009|check    */
/*********************************************************************************************//* 0x0009|check    */
/*****           For further information, please contact Robert Adams:                   *****//* 0x0009|check    */
/*****               EMail:    robert.adams@whatifwe.com                                 *****//* 0x0009|check    */
/*****               Mail:     PO Box 156, Sun Valley, Ca. 91353-0155, USA               *****//* 0x0009|check    */
/*****           Or visit the website, "www.whatifwe.com".                               *****//* 0x0009|check    */
/*********************************************************************************************//* 0x000a|check    */
/*********************************************************************************************//* 0x000b|check    */
#ifndef  primewrp_h                                                                            /* 0x000d|check    */
#define  primewrp_h                                                                            /* 0x000d|check    */
/*********************************************************************************************//* 0x001b|check    */
/*********************************************************************************************//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                     HANDLE INITIALIZATION                                         *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*********************************************************************************************//* 0x001b|check    */
/*********************************************************************************************//* 0x001b|check    */
#ifndef NoClasses                                                                              /* 0x001b|check    */
#define NoClasses  0x0000                                                                      /* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*********************************************************************************************//* 0x001b|check    */
/*********************************************************************************************//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                   GLOBAL TYPEDEF STATEMENTS                                       *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*********************************************************************************************//* 0x001b|check    */
/*********************************************************************************************//* 0x001b|check    */
#ifndef ULONG_H                                                                                /* 0x001b|check    */
#define ULONG_H                                                                                /* 0x001b|check    */
typedef unsigned int                            ULONG;                                         /* 0x001b|check    */
typedef unsigned int *                          ULONG_ADDR;                                    /* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef USHORT_H                                                                               /* 0x001b|check    */
#define USHORT_H                                                                               /* 0x001b|check    */
typedef unsigned short                          USHORT;                                        /* 0x001b|check    */
typedef unsigned short *                        USHORT_ADDR;                                   /* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef UCHAR_H                                                                                /* 0x001b|check    */
#define UCHAR_H                                                                                /* 0x001b|check    */
typedef unsigned char                           UCHAR;                                         /* 0x001b|check    */
typedef unsigned char *                         UCHAR_ADDR;                                    /* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef SLONG_H                                                                                /* 0x001b|check    */
#define SLONG_H                                                                                /* 0x001b|check    */
typedef jnt                                     SLONG;                                         /* 0x001b|check    */
typedef int *                                   SLONG_ADDR;                                    /* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef SSHORT_H                                                                               /* 0x001b|check    */
#define SSHORT_H                                                                               /* 0x001b|check    */
typedef short                                   SSHORT;                                        /* 0x001b|check    */
typedef short *                                 SSHORT_ADDR;                                   /* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef SCHAR_H                                                                                /* 0x001b|check    */
#define SCHAR_H                                                                                /* 0x001b|check    */
typedef char                                    SCHAR;                                         /* 0x001b|check    */
typedef char *                                  SCHAR_ADDR;                                    /* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef SUBSCRIPT_H                                                                            /* 0x001b|check    */
#define SUBSCRIPT_H                                                                            /* 0x001b|check    */
typedef unsigned int                            SUBSCRIPT;                                     /* 0x001b|check    */
typedef unsigned int *                          SUBSCRIPT_ADDR;                                /* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                      WORDS_SSHORT STRUCTURE TYPEDEF                               *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef WORDS_SSHORT_H                                                                         /* 0x001b|check    */
#define WORDS_SSHORT_H                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
typedef struct _WORDS_SSHORT                                                                   /* 0x001b|check    */
{                                                                                              /* 0x001b|check    */
  SCHAR                                                             schar0;                    /* 0x001b|check    */
  SCHAR                                                             schar1;                    /* 0x001b|check    */
} WORDS_SSHORT, * WORDS_SSHORT_ADDR;                                                           /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                      WORDS_SLONG STRUCTURE TYPEDEF                                *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef WORDS_SLONG_H                                                                          /* 0x001b|check    */
#define WORDS_SLONG_H                                                                          /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
typedef struct _WORDS_SLONG                                                                    /* 0x001b|check    */
{                                                                                              /* 0x001b|check    */
  WORDS_SSHORT                                                      sshort0;                   /* 0x001b|check    */
  WORDS_SSHORT                                                      sshort1;                   /* 0x001b|check    */
} WORDS_SLONG, * WORDS_SLONG_ADDR;                                                             /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                      WORDS_USHORT STRUCTURE TYPEDEF                               *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef WORDS_USHORT_H                                                                         /* 0x001b|check    */
#define WORDS_USHORT_H                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
typedef struct _WORDS_USHORT                                                                   /* 0x001b|check    */
{                                                                                              /* 0x001b|check    */
  UCHAR                                                             uchar0;                    /* 0x001b|check    */
  UCHAR                                                             uchar1;                    /* 0x001b|check    */
} WORDS_USHORT, * WORDS_USHORT_ADDR;                                                           /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                      WORDS_ULONG STRUCTURE TYPEDEF                                *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef WORDS_ULONG_H                                                                          /* 0x001b|check    */
#define WORDS_ULONG_H                                                                          /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
typedef struct _WORDS_ULONG                                                                    /* 0x001b|check    */
{                                                                                              /* 0x001b|check    */
  WORDS_USHORT                                                      ushort0;                   /* 0x001b|check    */
  WORDS_USHORT                                                      ushort1;                   /* 0x001b|check    */
} WORDS_ULONG, * WORDS_ULONG_ADDR;                                                             /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                      WORDS_BASE UNION TYPEDEF                                     *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef WORDS_BASE_H                                                                           /* 0x001b|check    */
#define WORDS_BASE_H                                                                           /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
typedef union _WORDS_BASE                                                                      /* 0x001b|check    */
{                                                                                              /* 0x001b|check    */
  SCHAR                                                             schar[4];                  /* 0x001b|check    */
  UCHAR                                                             uchar[4];                  /* 0x001b|check    */
  SSHORT                                                            sshort[2];                 /* 0x001b|check    */
  USHORT                                                            ushort[2];                 /* 0x001b|check    */
  WORDS_SLONG                                                       shorts;                    /* 0x001b|check    */
  WORDS_ULONG                                                       uhorts;                    /* 0x001b|check    */
  SLONG                                                             slong;                     /* 0x001b|check    */
  ULONG                                                             ulong;                     /* 0x001b|check    */
  SLONG_ADDR                                                        slong_far;                 /* 0x001b|check    */
  ULONG_ADDR                                                        ulong_far;                 /* 0x001b|check    */
  SSHORT_ADDR                                                       sshort_far;                /* 0x001b|check    */
  ULONG_ADDR                                                        ushort_far;                /* 0x001b|check    */
  SCHAR_ADDR                                                        schar_far;                 /* 0x001b|check    */
  UCHAR_ADDR                                                        uchar_far;                 /* 0x001b|check    */
} WORDS_BASE, * WORDS_BASE_ADDR;                                                               /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                      WORDS UNION TYPEDEF                                          *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef WORDS_H                                                                                /* 0x001b|check    */
#define WORDS_H                                                                                /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
typedef union _WORDS                                                                           /* 0x001b|check    */
{                                                                                              /* 0x001b|check    */
  WORDS_BASE_ADDR                                                   words_base_far;            /* 0x001b|check    */
  WORDS_BASE                                                        words_base;                /* 0x001b|check    */
} WORDS, * WORDS_ADDR;                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                      INSTANCE_ADDR STRUCTURE TYPEDEF                              *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef INSTANCE_ADDR_H                                                                        /* 0x001b|check    */
#define INSTANCE_ADDR_H                                                                        /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
typedef struct _INSTANCE_ADDR                                                                  /* 0x001b|check    */
{                                                                                              /* 0x001b|check    */
  UCHAR_ADDR                                                        instance_first;            /* 0x001b|check    */
  UCHAR_ADDR                                                        instance_last;             /* 0x001b|check    */
  ULONG                                                             instance_size;             /* 0x001b|check    */
} INSTANCE_ADDR, * INSTANCE_ADDR_ADDR;                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                      ERROR_MESSAGE STRUCTURE TYPEDEF                              *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef ERROR_MESSAGE_H                                                                        /* 0x001b|check    */
#define ERROR_MESSAGE_H                                                                        /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
typedef struct _ERROR_MESSAGE                                                                  /* 0x001b|check    */
{                                                                                              /* 0x001b|check    */
  SCHAR_ADDR                                                        error_file_name_addr;      /* 0x001b|check    */
  USHORT                                                            error_line_no;             /* 0x001b|check    */
} ERROR_MESSAGE, * ERROR_MESSAGE_ADDR;                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****                      ERROR_MESSAGES STRUCTURE TYPEDEF                             *****//* 0x001b|check    */
/*****                                                                                   *****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#ifndef ERROR_MESSAGES_H                                                                       /* 0x001b|check    */
#define ERROR_MESSAGES_H                                                                       /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
typedef struct _ERROR_MESSAGES                                                                 /* 0x001b|check    */
{                                                                                              /* 0x001b|check    */
  USHORT                                                            no_error_messages;         /* 0x001b|check    */
  ERROR_MESSAGE                    error_message[64];                                          /* 0x001b|check    */
} ERROR_MESSAGES, * ERROR_MESSAGES_ADDR;                                                       /* 0x001b|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x001b|check    */
#endif                                                                                         /* 0x001b|check    */
#define GlobalMax                    0x4000                                                    /* 0x0029|check    */
/*********************************************************************************************//* 0x0032|check    */
/*********************************************************************************************//* 0x0032|check    */
/*****                                                                                   *****//* 0x0032|check    */
/*****                   SUB-CLASS RELATIVE HANDLES                                      *****//* 0x0032|check    */
/*****                                                                                   *****//* 0x0032|check    */
/*********************************************************************************************//* 0x0032|check    */
/*********************************************************************************************//* 0x0032|check    */
#define WRAPPER_NoInstances      0x0001                                                        /* 0x0032|check    */
/*********************************************************************************************//* 0x0033|check    */
enum                                                                                           /* 0x0033|check    */
{                                                                                              /* 0x0033|check    */
  PrimeGen_WRAPPER__Handle = WRAPPER_NoInstances                                               /* 0x0033|check    */
};                                                                                             /* 0x0033|check    */
#undef WRAPPER_NoInstances                                                                     /* 0x0033|check    */
#define WRAPPER_NoInstances PrimeGen_WRAPPER__Handle+PRIME_NoInstances                         /* 0x0033|check    */
/*********************************************************************************************//* 0x0034|check    */
/*********************************************************************************************//* 0x0034|check    */
/*****                                                                                   *****//* 0x0034|check    */
/*****                     CONSTRUCTOR                                                   *****//* 0x0034|check    */
/*****                                                                                   *****//* 0x0034|check    */
/*********************************************************************************************//* 0x0034|check    */
/*********************************************************************************************//* 0x0034|check    */
ULONG WRAPPER_Construct                                                                        /* 0x0034|check    */
  (                                                                                            /* 0x0034|check    */
    INSTANCE_ADDR_ADDR __InstanceAddrAddr,                                                     /* 0x0034|check    */
    ULONG              __InstanceHandle                                                        /* 0x0034|check    */
  );                                                                                           /* 0x0034|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x0034|check    */
extern SCHAR WRAPPER_cpp_file_name[17];                                                        /* 0x0034|check    */
/*********************************************************************************************//* 0x0034|check    */
/*********************************************************************************************//* 0x0034|check    */
/*****                                                                                   *****//* 0x0034|check    */
/*****                     DESTRUCTOR                                                    *****//* 0x0034|check    */
/*****                                                                                   *****//* 0x0034|check    */
/*********************************************************************************************//* 0x0034|check    */
/*********************************************************************************************//* 0x0034|check    */
ULONG WRAPPER_Destruct                                                                         /* 0x0034|check    */
  (                                                                                            /* 0x0034|check    */
    INSTANCE_ADDR_ADDR __InstanceAddrAddr,                                                     /* 0x0034|check    */
    ULONG              __InstanceHandle                                                        /* 0x0034|check    */
  );                                                                                           /* 0x0034|check    */
/*********************************************************************************************//* 0x003c|check    */
/*********************************************************************************************//* 0x003c|check    */
/*****                                                                                   *****//* 0x003c|check    */
/*****                                INSTANCE HANDLE                                    *****//* 0x003c|check    */
/*****                                                                                   *****//* 0x003c|check    */
/*********************************************************************************************//* 0x003c|check    */
/*********************************************************************************************//* 0x003c|check    */
#define NoInstances WRAPPER_NoInstances                                                        /* 0x003c|check    */
/*********************************************************************************************//* 0x0040|check    */
/*********************************************************************************************//* 0x0041|check    */
/*********                                                                              ******//* 0x0042|check    */
/*********                PrimeConstruct(void)                                          ******//* 0x0043|check    */
/*********                                                                              ******//* 0x0044|check    */
/*********------------------------------------------------------------------------------******//* 0x0045|check    */
/*********                                                                              ******//* 0x0046|check    */
/*********  This routine initializes the simulated classs                               ******//* 0x0047|check    */
/*********                                                                              ******//* 0x0048|check    */
/*********------------------------------------------------------------------------------******//* 0x0049|check    */
/*********  Returns:                                                                    ******//* 0x004a|check    */
/*********      0x0000:         Successful Operation.                                   ******//* 0x004b|check    */
/*********      0xffff:         System Error                                            ******//* 0x004c|check    */
/*********                                                                              ******//* 0x004d|check    */
/*********************************************************************************************//* 0x004e|check    */
/*********************************************************************************************//* 0x004f|check    */
ULONG  PrimeConstruct(void);                                                                   /* 0x0052|check    */
/*********************************************************************************************//* 0x0055|check    */
/*********************************************************************************************//* 0x0056|check    */
/*********                                                                              ******//* 0x0057|check    */
/*********                PrimeOpen(void)                                               ******//* 0x0058|check    */
/*********                                                                              ******//* 0x0059|check    */
/*********------------------------------------------------------------------------------******//* 0x005a|check    */
/*********                                                                              ******//* 0x005b|check    */
/*********  This routine prepares the Prime Number Generator for use by:                ******//* 0x005c|check    */
/*********      1.  Allocating the required Object related memory                       ******//* 0x005d|check    */
/*********      2.  Compute and store all two-byte prime numbers                        ******//* 0x005e|check    */
/*********                                                                              ******//* 0x005f|check    */
/*********------------------------------------------------------------------------------******//* 0x0060|check    */
/*********  Returns:                                                                    ******//* 0x0061|check    */
/*********      0x0000:         Successful Operation.                                   ******//* 0x0062|check    */
/*********      0xffff:         System Failure.                                         ******//* 0x0063|check    */
/*********                                                                              ******//* 0x0064|check    */
/*********************************************************************************************//* 0x0065|check    */
/*********************************************************************************************//* 0x0066|check    */
ULONG  PrimeOpen                                                                               /* 0x0069|check    */
  (                                                                                            /* 0x0069|check    */
    void                                                                                       /* 0x006a|check    */
  );                                                                                           /* 0x006a|check    */
/*********************************************************************************************//* 0x006f|check    */
/*********************************************************************************************//* 0x0070|check    */
/*********                                                                              ******//* 0x0071|check    */
/*********   PrimeGetPrime(PrimeValueAddr, PrimeIndex)                                  ******//* 0x0072|check    */
/*********                                                                              ******//* 0x0073|check    */
/*********------------------------------------------------------------------------------******//* 0x0074|check    */
/*********                                                                              ******//* 0x0075|check    */
/*********  This routine gets the prime number contained at a specified location        ******//* 0x0076|check    */
/*********  in the prime number table.                                                  ******//* 0x0077|check    */
/*********                                                                              ******//* 0x0078|check    */
/*********------------------------------------------------------------------------------******//* 0x0079|check    */
/*********  Inputs:                                                                     ******//* 0x007a|check    */
/*********                                                                              ******//* 0x007b|check    */
/*********      PrimeIndex:       Index in Prime Number Table                           ******//* 0x007c|check    */
/*********                                                                              ******//* 0x007d|check    */
/*********------------------------------------------------------------------------------******//* 0x007e|check    */
/*********  Output:                                                                     ******//* 0x007f|check    */
/*********      PrimeValueAddr:   Address of unsigned long variable to receive the      ******//* 0x0080|check    */
/*********                        prime number contained in the specified index         ******//* 0x0081|check    */
/*********                        in the Prime Number Table                             ******//* 0x0082|check    */
/*********                                                                              ******//* 0x0083|check    */
/*********------------------------------------------------------------------------------******//* 0x0084|check    */
/*********  Returns:                                                                    ******//* 0x0085|check    */
/*********      Success:          Successful Operation.                                 ******//* 0x0086|check    */
/*********      0xffff:           System Failure.                                       ******//* 0x0087|check    */
/*********                                                                              ******//* 0x0088|check    */
/*********************************************************************************************//* 0x0089|check    */
/*********************************************************************************************//* 0x008a|check    */
ULONG  PrimeGetPrime                                                                           /* 0x008d|check    */
  (                                                                                            /* 0x008d|check    */
    ULONG_ADDR PrimeValueAddr,                                                                 /* 0x008e|check    */
    ULONG PrimeIndex                                                                           /* 0x008f|check    */
  );                                                                                           /* 0x0090|check    */
/*********************************************************************************************//* 0x0095|check    */
/*********************************************************************************************//* 0x0096|check    */
/*********                                                                              ******//* 0x0097|check    */
/*********                PrimeClose                                                    ******//* 0x0098|check    */
/*********                                                                              ******//* 0x0099|check    */
/*********------------------------------------------------------------------------------******//* 0x009a|check    */
/*********                                                                              ******//* 0x009b|check    */
/*********  This routine frees the Object Related memory                                ******//* 0x009c|check    */
/*********                                                                              ******//* 0x009d|check    */
/*********------------------------------------------------------------------------------******//* 0x009e|check    */
/*********  Returns:                                                                    ******//* 0x009f|check    */
/*********      Success:        Successful Operation.                                   ******//* 0x00a0|check    */
/*********      0xffff:         System Failure.                                         ******//* 0x00a1|check    */
/*********                                                                              ******//* 0x00a2|check    */
/*********************************************************************************************//* 0x00a3|check    */
/*********************************************************************************************//* 0x00a4|check    */
ULONG  PrimeClose                                                                              /* 0x00a7|check     */
  (                                                                                            /* 0x00a7|check     */
    void                                                                                       /* 0x00a8|check     */
  );                                                                                           /* 0x00a8|check     */
/*********************************************************************************************//* 0x00ad|check    */
/*********************************************************************************************//* 0x00ae|check    */
/*********                                                                              ******//* 0x00af|check    */
/*********                PrimeErrorReport(MessageAddr, MessageNo)                      ******//* 0x00b0|check    */
/*********                                                                              ******//* 0x00b1|check    */
/*********------------------------------------------------------------------------------******//* 0x00b2|check    */
/*********                                                                              ******//* 0x00b3|check    */
/*********  This routine places the specified error message into the String Array       ******//* 0x00b4|check    */
/*********                                                                              ******//* 0x00b5|check    */
/*********------------------------------------------------------------------------------******//* 0x00b6|check    */
/*********                                                                              ******//* 0x00b7|check    */
/*********  Input Parameter:                                                            ******//* 0x00b8|check    */
/*********      1)  MessageNo:  The message number (0 -- first one received)            ******//* 0x00b9|check    */
/*********                                                                              ******//* 0x00ba|check    */
/*********------------------------------------------------------------------------------******//* 0x00bb|check    */
/*********                                                                              ******//* 0x00bc|check    */
/*********  Output Parameter::                                                          ******//* 0x00bd|check    */
/*********      1)  MessageAddr: The address of the character array to store the        ******//* 0x00be|check    */
/*********                       message. This string must have at least 32 bytes.      ******//* 0x00bf|check    */
/*********------------------------------------------------------------------------------******//* 0x00c0|check    */
/*********  Returns:                                                                    ******//* 0x00c1|check    */
/*********      0x0000:         Successful Operation.                                   ******//* 0x00c2|check    */
/*********      0xffff:         Specified Message does not exist                        ******//* 0x00c3|check    */
/*********                                                                              ******//* 0x00c4|check    */
/*********************************************************************************************//* 0x00c5|check    */
/*********************************************************************************************//* 0x00c6|check    */
ULONG PrimeErrorReport                                                                         /* 0x00c9|check    */
  (                                                                                            /* 0x00c9|check    */
    SCHAR_ADDR         MessageAddr,                                                            /* 0x00c9|check    */
    ULONG              MessageNo                                                               /* 0x00c9|check    */
  );                                                                                           /* 0x00c9|check    */
/*********************************************************************************************//* 0x00ce|check    */
/*********************************************************************************************//* 0x00cf|check    */
/*********                                                                              ******//* 0x00d0|check    */
/*********                PrimeDestruct(void)                                           ******//* 0x00d1|check    */
/*********                                                                              ******//* 0x00d2|check    */
/*********------------------------------------------------------------------------------******//* 0x00d3|check    */
/*********                                                                              ******//* 0x00d4|check    */
/*********  This routine completes memory cleanup                                       ******//* 0x00d5|check    */
/*********                                                                              ******//* 0x00d6|check    */
/*********------------------------------------------------------------------------------******//* 0x00d7|check    */
/*********  Returns:                                                                    ******//* 0x00d8|check    */
/*********      0x0000:         Successful Operation.                                   ******//* 0x00d9|check    */
/*********      0xffff:         System Error                                            ******//* 0x00da|check    */
/*********                                                                              ******//* 0x00db|check    */
/*********************************************************************************************//* 0x00dc|check    */
/*********************************************************************************************//* 0x00dd|check    */
ULONG  PrimeDestruct(void);                                                                    /* 0x00e0|check    */
/*********************************************************************************************//* 0x00e5|check    */
/*********************************************************************************************//* 0x00e5|check    */
/*****                                                                                   *****//* 0x00e5|check    */
/*****                   WRAPPER_CLASS_DATA STRUCTURE                                    *****//* 0x00e5|check    */
/*****                                                                                   *****//* 0x00e5|check    */
/*********************************************************************************************//* 0x00e5|check    */
/*********************************************************************************************//* 0x00e5|check    */
typedef struct                                                                                 /* 0x00e5|check    */
{                                                                                              /* 0x00e5|check    */
  UCHAR_ADDR   __class_addr;                                                                   /* 0x00e5|check    */
  ULONG        __class_size;                                                                   /* 0x00e5|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x00e5|check    */
  INSTANCE_ADDR                                      __PrimeGen__Addr;                         /* 0x0033|check    */
/*****-----------------------------------------------------------------------------------*****//* 0x00e5|check    */
  UCHAR_ADDR   __last_addr;                                                                    /* 0x00e5|check    */
} WRAPPER_CLASS_DATA, * WRAPPER_CLASS_DATA_ADDR;                                               /* 0x00e5|check    */
/*********************************************************************************************//* 0x00e5|check    */
/*********************************************************************************************//* 0x00e5|check    */
#endif                                                                                         /* 0x00e5|check    */
