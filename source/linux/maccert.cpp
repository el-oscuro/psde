//*****************************************************************************           //11-02-12|0x000b
//*****************************************************************************           //11-02-12|0x000b
//                                                                                        //11-02-12|0x000b
// MACRO VERSION MANAGER                                                                  //11-02-12|0x000b
//                                                                                        //11-02-12|0x000b
//*****************************************************************************           //11-02-12|0x000b
//*****************************************************************************           //11-02-12|0x000b
//  Copyright: 2006 Robert H. Adams                                                       //11-02-12|0x000b
//*****************************************************************************           //11-02-12|0x000b
//  The purpose of this program as well as instructions regarding its use is              //11-02-12|0x000b
//  defined in the associated manual.                                                     //11-02-12|0x000b
//*****************************************************************************           //11-02-12|0x000b
//  This program is free software; you can redistribute it and/or modify                  //11-02-12|0x000b
//  it under the terms of the GNU General Public License as published by                  //11-02-12|0x000b
//  the Free Software Foundation; either version 2 of the License, or                     //11-02-12|0x000b
//  (at your option) any later version.                                                   //11-02-12|0x000b
//                                                                                        //11-02-12|0x000b
//  This program is distributed in the hope that it will be useful,                       //11-02-12|0x000b
//  but WITHOUT ANY WARRANTY; without even the implied warranty of                        //11-02-12|0x000b
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                         //11-02-12|0x000b
//  GNU General Public License for more details.                                          //11-02-12|0x000b
//                                                                                        //11-02-12|0x000b
//  You should have received a copy of the GNU General Public License                     //11-02-12|0x000b
//  along with this program; if not, write to the Free Software                           //11-02-12|0x000b
//  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA., 02110-1301            //11-02-12|0x000b
//  USA                                                                                   //11-02-12|0x000b
//*****************************************************************************           //11-02-12|0x000b
//  For further information, please contact Robert Adams:                                 //11-02-12|0x000b
//     EMail:    robert.adams@whatifwe.com                                                //11-02-12|0x000b
//     Mail:     PO Box 156, Sun Valley, Ca. 91353-0155, USA                              //11-02-12|0x000b
//  Or visit the website, "www.whatifwe.com".                                             //11-02-12|0x000b
//*****************************************************************************           //11-02-12|0x000b
//*****************************************************************************           //11-02-12|0x000b
#ifdef WIN31_SYSTEM                                                                       //05-24-97|0x000c
#include "precwn31.h"                                                                     //05-24-97|0x000c
#endif                                                                                    //05-24-97|0x000c
#ifdef WIN95_SYSTEM                                                                       //05-24-97|0x000c
#include "precwn95.h"                                                                     //05-24-97|0x000c
#endif                                                                                    //05-24-97|0x000c
#ifdef MSDOS_SYSTEM                                                                       //05-24-97|0x000c
#include "precdos.h"                                                                      //05-24-97|0x000c
#endif                                                                                    //05-24-97|0x000c
#include "prechost.h"                                                                     //05-24-97|0x000c
#include "maccert.h"                                                                      //11-02-12|0x000c
#include "maccert.hxx"                                                                    //11-02-12|0x000c
#include "maccert.hpp"                                                                    //11-02-12|0x000c
#include "precdiag.h"                                                                     //11-02-12|0x000d
#include "crypto.h"                                                                       //11-02-12|0x000e
#include "global.hxx"                                                                     //11-02-12|0x000f
#include "macdict.h"                                                                      //11-02-12|0x0010
#include "apnddict.h"                                                                     //11-02-26|0x0011
#define StrLen(i) strlen(i)                                                               //11-02-12|0x0019
#define StrCat(i,j) strcat(i,j)                                                           //11-02-12|0x0019
#define StrCpy(i,j) strcpy(i,j)                                                           //11-02-12|0x0019
#define StrCmp(i,j) Str_Comp((SCHAR_FAR)i,j,256)                                          //11-02-12|0x0019
#define StrRChr(i,j) strrchr(i,j)                                                         //11-02-12|0x0019
#define StrChr(i,j) strchr(i,j)                                                           //11-02-12|0x0019
#define StrToByteInt(i,j) GetInteger(i,&j,0xff)                                           //11-02-12|0x0019
#define StrToInt(i,j) GetInteger(i,&j,0xffff)                                             //11-02-12|0x0019
#define StrToLongInt(i,j) GetInteger(i,&j,0xffffffffL)                                    //11-02-12|0x0019
#define StrToByteHex(i,j) GetHex(i,&j,1)                                                  //11-02-12|0x0019
#define StrToHex(i,j) GetHex(i,&j,2)                                                      //11-02-12|0x0019
#define StrToLongHex(i,j) GetHex(i,&j,4)                                                  //11-02-12|0x0019
#define FindName(i) strrchr(i, '/')                                                       //11-02-12|0x0019
#define Allocate(k) (k##_FAR) calloc(1,sizeof(k))                                         //11-02-12|0x001a
#define Free(k) free(k)                                                                   //11-02-12|0x001a
#define MemSet(i,j,k) memset(i,j,k)                                                       //11-02-12|0x001a
#define MemCCpy(i,j,k,l) Mem_C_Copy((UCHAR_FAR) i, (UCHAR_FAR) j,k,l)                     //11-02-12|0x001a
#define MemCpy(i,j,k) memcpy(i,j,k)                                                       //11-02-12|0x001a
#define LineEnd 0x0d                                                                      //11-02-12|0x001a
MAC_CERT mac_cert;                                                                        //11-02-12|0x0039
static UINT test_samples[TestIndex];                                                      //11-02-12|0x0049
//***************************************************************************             //11-02-19|0x0054
//***************************************************************************             //11-02-19|0x0055
//******                                                               ******             //11-02-19|0x0056
//******               mac_cert_create(LibrarnPathName)                ******             //11-02-19|0x0057
//******                                                               ******             //11-02-19|0x0058
//***************************************************************************             //11-02-19|0x0059
//***************************************************************************             //11-02-19|0x005a
//*******************************************************************************         //10-29-97|0x005f
//*******************************************************************************         //10-29-97|0x005f
// mac_cert_create                                                                        //11-02-19|0x005f
//*******************************************************************************         //10-29-97|0x005f
//*******************************************************************************         //10-29-97|0x005f
UINT MAC_CERT::mac_cert_create(                                                           //11-02-19|0x005f
    STRING_DATA_FAR String                                                                //11-02-19|0x005f
    ) {                                                                                   //11-02-19|0x005f
//*******************************************************************************         //10-29-97|0x005f
//***************************************************************************             //11-02-19|0x0063
//***************************************************************************             //11-02-19|0x0064
//***************************************************************************             //11-02-19|0x0065
    switch(CryptoInitial(StringLineAddr, RAN_EXTENT))            _SwitchGroup             //11-02-19|0x0066
    return_test(mac_cert_create_1);                                                       //11-02-19|0x0067
}                                                                                         //11-02-19|0x0068
//                                                                                        //05-24-97|0x0068
//***************************************************************************             //11-02-19|0x006b
//***************************************************************************             //11-02-19|0x006c
//******                                                               ******             //11-02-19|0x006d
//******               mac_cert_initial(ClassName)                     ******             //11-02-19|0x006e
//******                                                               ******             //11-02-19|0x006f
//***************************************************************************             //11-02-19|0x0070
//***************************************************************************             //11-02-19|0x0071
//*******************************************************************************         //10-29-97|0x0076
//*******************************************************************************         //10-29-97|0x0076
// mac_cert_initial                                                                       //11-02-12|0x0076
//*******************************************************************************         //10-29-97|0x0076
//*******************************************************************************         //10-29-97|0x0076
UINT MAC_CERT::mac_cert_initial(                                                          //11-02-12|0x0076
    STRING_DATA_FAR ClassName                                                             //11-02-12|0x0076
    ) {                                                                                   //11-02-12|0x0076
//*******************************************************************************         //10-29-97|0x0076
//***************************************************************************             //11-02-12|0x007a
//***************************************************************************             //11-02-12|0x007b
  STRING_DATA work;                                                                  //11-02-12|0x007c
//***************************************************************************             //11-02-12|0x007d
//***************************************************************************             //11-02-12|0x007e
    MemSet(&mac_cert, 0, sizeof(MACRO_CERTIFY));                                          //11-02-12|0x007f
    MemSet(&work,     0, sizeof(STRING_DATA));                                            //11-02-12|0x0080
//***************************************************************************             //11-02-12|0x0081
    switch(CryptoCreate(&MacCertBaseRandom))                     _SwitchGroup             //11-02-12|0x0082
    switch(CryptoLoad(ClassName))                                _SwitchGroup             //11-02-12|0x0083
    switch(CryptoClose())                                        _SwitchGroup             //11-02-12|0x0084
//***************************************************************************             //11-02-12|0x0085
    switch(CryptoOpen(MacCertBaseRandom))                        _SwitchGroup             //11-02-12|0x0086
    switch(CryptoGetRandom(&work, 127))                          _SwitchGroup             //11-02-12|0x0087
    switch(CryptoClose())                                        _SwitchGroup             //11-02-12|0x0088
//***************************************************************************             //11-02-12|0x0089
    switch(CryptoCreate(&MacCertGlobalRandom))                   _SwitchGroup             //11-02-12|0x008a
    switch(CryptoLoad(&work))                                    _SwitchGroup             //11-02-12|0x008b
    switch(CryptoClose())                                        _SwitchGroup             //11-02-12|0x008c
//***************************************************************************             //11-02-12|0x008d
    return_test(mac_cert_initial_1);                                                      //11-02-12|0x008e
}                                                                                         //11-02-12|0x008f
//                                                                                        //05-24-97|0x008f
//***************************************************************************             //11-02-14|0x0092
//***************************************************************************             //11-02-14|0x0093
//******                                                               ******             //11-02-14|0x0094
//******               mac_cert_delete                                 ******             //11-02-14|0x0095
//******                                                               ******             //11-02-14|0x0096
//***************************************************************************             //11-02-14|0x0097
//***************************************************************************             //11-02-14|0x0098
//*******************************************************************************         //10-29-97|0x009c
//*******************************************************************************         //10-29-97|0x009c
// mac_cert_delete                                                                        //11-02-14|0x009c
//*******************************************************************************         //10-29-97|0x009c
//*******************************************************************************         //10-29-97|0x009c
UINT MAC_CERT::mac_cert_delete(void) {                                                    //11-02-14|0x009c
//*******************************************************************************         //10-29-97|0x009c
//***************************************************************************             //11-02-14|0x00a0
//***************************************************************************             //11-02-14|0x00a1
    switch(CryptoDelete())                                       _SwitchGroup             //11-02-14|0x00a2
//***************************************************************************             //11-02-14|0x00a3
    return_test(mac_cert_delete_1);                                                       //11-02-14|0x00a4
}                                                                                         //11-02-14|0x00a5
//                                                                                        //05-24-97|0x00a5
//***************************************************************************             //11-02-19|0x00a8
//***************************************************************************             //11-02-19|0x00a9
//******                                                               ******             //11-02-19|0x00aa
//******                           mac_cert_previous()                 ******             //11-02-19|0x00ab
//******                                                               ******             //11-02-19|0x00ac
//***************************************************************************             //11-02-19|0x00ad
//***************************************************************************             //11-02-19|0x00ae
//*******************************************************************************         //10-29-97|0x00b3
//*******************************************************************************         //10-29-97|0x00b3
// mac_cert_get_prev                                                                      //11-02-19|0x00b3
//*******************************************************************************         //10-29-97|0x00b3
//*******************************************************************************         //10-29-97|0x00b3
UINT MAC_CERT::mac_cert_get_prev(void) {                                                  //11-02-19|0x00b3
//*******************************************************************************         //10-29-97|0x00b3
//***************************************************************************             //11-02-19|0x00b7
//***************************************************************************             //11-02-19|0x00b8
    switch(MacDictGetCert(MacCertPreviousAddr))                  _SwitchGroup             //11-02-19|0x00b9
//***************************************************************************             //11-02-19|0x00ba
    return_test(mac_cert_get_prev_1);                                                     //11-02-19|0x00bb
}                                                                                         //11-02-19|0x00bc
//                                                                                        //05-24-97|0x00bc
//***************************************************************************             //11-02-19|0x00bf
//***************************************************************************             //11-02-19|0x00c0
//******                                                               ******             //11-02-22|0x00c1
//******                    mac_cert_append(Version)                   ******             //11-02-22|0x00c2
//******                                                               ******             //11-02-22|0x00c3
//***************************************************************************             //11-02-22|0x00c4
//***************************************************************************             //11-02-22|0x00c5
//*******************************************************************************         //10-29-97|0x00cd
//*******************************************************************************         //10-29-97|0x00cd
// mac_cert_append                                                                        //11-02-22|0x00cd
//*******************************************************************************         //10-29-97|0x00cd
//*******************************************************************************         //10-29-97|0x00cd
UINT MAC_CERT::mac_cert_append(                                                           //11-02-22|0x00cd
    UINT VersionNo                                                                        //11-02-22|0x00cd
    ) {                                                                                   //11-02-22|0x00cd
//*******************************************************************************         //10-29-97|0x00cd
//***************************************************************************             //11-02-22|0x00d1
//***************************************************************************             //11-02-22|0x00d2
  STRING_DATA work;                                                                  //11-02-22|0x00d3
  UCHAR current_parity;                                                              //11-02-26|0x00d4
  UINT current_version;                                                              //11-02-26|0x00d5
  UCHAR prev_parity;                                                                 //11-02-26|0x00d6
  UINT prev_version;                                                                 //11-02-26|0x00d7
//***************************************************************************             //11-02-26|0x00d8
    switch(ApndDictGetCert(&work))                                                        //11-02-26|0x00d9
      {                                                                                   //11-02-22|0x00da
        case Success:                                                  break;             //11-02-22|0x00db
        case UserError:       ReturnFinish("Unexpected Experimental Append");             //11-02-26|0x00dc
        default:                                            ReturnSystemError             //11-02-22|0x00dd
        }                                                                                 //11-02-22|0x00de
//***************************************************************************             //11-02-22|0x00df
    if(WorkLength <  4)                                     ReturnSystemError             //11-02-22|0x00e0
    if(CurrentLength >= 252)           ReturnFinish("Too Many Append Files");             //11-02-22|0x00e1
//***************************************************************************             //11-02-22|0x00e2
    ++MacCertNoAppends;                                                                   //11-02-22|0x00e3
//***************************************************************************             //11-02-22|0x00e4
    WorkPosition = WorkLength;                                                            //11-02-26|0x00e5
//---------------------------------------------------------------------------             //11-02-26|0x00e6
    switch(read_parity   (&current_parity,  &work))              _SwitchGroup             //11-02-26|0x00e7
    switch(read_version  (&current_version, &work))              _SwitchGroup             //11-02-26|0x00e8
    switch(prepare_string(current_parity,   current_version))    _SwitchGroup             //11-02-26|0x00e9
//***************************************************************************             //11-02-22|0x00ea
    switch(VersionNo)                                                                     //11-02-22|0x00eb
      {                                                                                   //11-02-22|0x00ec
        case DS_ALPHA:                        return_test(mac_cert_append_1);             //11-02-22|0x00ed
        case DS_BETA:                                                  break;             //11-02-26|0x00ee
        case DS_RELEASE:                                               break;             //11-02-26|0x00ef
        default:                                            ReturnSystemError             //11-02-22|0x00f0
        }                                                                                 //11-02-22|0x00f1
//***************************************************************************             //11-02-26|0x00f2
    if(CurrentLength >= PreviousLength) ReturnFinish("Illegal Modification");             //11-02-26|0x00f3
//***************************************************************************             //11-02-26|0x00f4
    PreviousPosition = CurrentLength;                                                     //11-02-26|0x00f5
//---------------------------------------------------------------------------             //11-02-26|0x00f6
    switch(read_parity (&prev_parity,  MacCertPreviousAddr))     _SwitchGroup             //11-02-26|0x00f7
    switch(read_version(&prev_version, MacCertPreviousAddr))     _SwitchGroup             //11-02-26|0x00f8
//***************************************************************************             //11-02-26|0x00f9
    if(current_parity  != prev_parity)  ReturnFinish("Illegally Modified");               //11-02-26|0x00fa
    if(current_version <  2)            ReturnFinish("Illegal Alpha Append");             //11-02-26|0x00fb
//***************************************************************************             //11-02-26|0x00fc
    return_test(mac_cert_append_3);                                                       //11-02-26|0x00fd
}                                                                                         //11-02-26|0x00fe
//                                                                                        //05-24-97|0x00fe
//***************************************************************************             //11-02-13|0x0101
//***************************************************************************             //11-02-13|0x0102
//******                                                               ******             //11-02-13|0x0103
//******                       mac_cert_macro_begin(Time)              ******             //11-02-13|0x0104
//******                                                               ******             //11-02-13|0x0105
//***************************************************************************             //11-02-13|0x0106
//***************************************************************************             //11-02-13|0x0107
//*******************************************************************************         //10-29-97|0x010d
//*******************************************************************************         //10-29-97|0x010d
// mac_cert_macro_begin                                                                   //11-02-13|0x010d
//*******************************************************************************         //10-29-97|0x010d
//*******************************************************************************         //10-29-97|0x010d
UINT MAC_CERT::mac_cert_macro_begin(void) {                                               //11-02-13|0x010d
//*******************************************************************************         //10-29-97|0x010d
//***************************************************************************             //11-02-13|0x0111
//***************************************************************************             //11-02-13|0x0112
  STRING_DATA work;                                                                  //11-02-13|0x0113
//***************************************************************************             //11-02-13|0x0114
//***************************************************************************             //11-02-13|0x0115
    MemSet(&work,     0, sizeof(STRING_DATA));                                            //11-02-13|0x0116
//***************************************************************************             //11-02-13|0x0117
    switch(CryptoOpen(MacCertBaseRandom))                        _SwitchGroup             //11-02-13|0x0118
    switch(CryptoGetRandom(&work, 127))                          _SwitchGroup             //11-02-13|0x0119
    switch(CryptoClose())                                        _SwitchGroup             //11-02-13|0x011a
//***************************************************************************             //11-02-13|0x011b
    switch(CryptoCreate(&MacCertCurrentRandom))                  _SwitchGroup             //11-02-13|0x011c
    switch(CryptoLoad(&work))                                    _SwitchGroup             //11-02-13|0x011d
    switch(CryptoClose())                                        _SwitchGroup             //11-02-13|0x011e
//***************************************************************************             //11-02-13|0x011f
      {  time_t   long_time;                                                              //11-02-19|0x0120
         struct tm *local_time;                                                           //11-02-19|0x0120
         time(&long_time);                                                                //11-02-19|0x0120
         local_time = localtime(&long_time);                                              //11-02-19|0x0120
         MacCertCurrentTime =  local_time->tm_year;                                       //11-02-19|0x0120
         MacCertCurrentTime -= 80;                                                        //11-02-19|0x0120
         MacCertCurrentTime *= 16;                                                        //11-02-19|0x0120
         MacCertCurrentTime += local_time->tm_mon;                                        //11-02-19|0x0120
         MacCertCurrentTime *= 32;                                                        //11-02-19|0x0120
         MacCertCurrentTime += local_time->tm_mday;                                       //11-02-19|0x0120
         MacCertCurrentTime *= 32;                                                        //11-02-19|0x0120
         MacCertCurrentTime += local_time->tm_hour;                                       //11-02-19|0x0120
         MacCertCurrentTime *= 64;                                                        //11-02-19|0x0120
         MacCertCurrentTime += local_time->tm_min;                                        //11-02-19|0x0120
         MacCertCurrentTime *= 32;                                                        //11-02-19|0x0120
         MacCertCurrentTime += (local_time->tm_sec / 2);                                  //11-02-19|0x0120
         }                                                                                //11-02-19|0x0120
//***************************************************************************             //11-02-19|0x0121
    MacCertCurrentTime /= 32;                                                             //11-02-13|0x0122
    MacCertCurrentTime /= 64;                                                             //11-02-13|0x0123
    MacCertCurrentTime /= 32;                                                             //11-02-13|0x0124
//***************************************************************************             //11-02-13|0x0125
    MacCertNoCommands  = 0;                                                               //11-02-13|0x0126
    MacCertNoTodays    = 0;                                                               //11-02-13|0x0127
    MacCertNoArrows    = 0;                                                               //11-02-13|0x0128
//***************************************************************************             //11-02-13|0x0129
    return_test(mac_cert_macro_begin_1);                                                  //11-02-13|0x012a
}                                                                                         //11-02-13|0x012b
//                                                                                        //05-24-97|0x012b
//***************************************************************************             //11-02-15|0x012e
//***************************************************************************             //11-02-15|0x012f
//******                                                               ******             //11-02-15|0x0130
//******               mac_cert_parity_command(Token)                  ******             //11-02-15|0x0131
//******                                                               ******             //11-02-15|0x0132
//***************************************************************************             //11-02-15|0x0133
//***************************************************************************             //11-02-15|0x0134
//*******************************************************************************         //10-29-97|0x0139
//*******************************************************************************         //10-29-97|0x0139
// mac_cert_parity_command                                                                //11-02-15|0x0139
//*******************************************************************************         //10-29-97|0x0139
//*******************************************************************************         //10-29-97|0x0139
UINT MAC_CERT::mac_cert_parity_command(                                                   //11-02-15|0x0139
    TOKENS_FAR Token                                                                      //11-02-15|0x0139
    ) {                                                                                   //11-02-15|0x0139
//*******************************************************************************         //10-29-97|0x0139
//***************************************************************************             //11-02-15|0x013d
//***************************************************************************             //11-02-15|0x013e
  UINT i;                                                                            //11-02-15|0x013f
//***************************************************************************             //11-02-15|0x0140
//***************************************************************************             //11-02-15|0x0141
    if(CryptoOpen(MacCertCurrentRandom)   != Success)       ReturnSystemError             //11-02-15|0x0142
//---------------------------------------------------------------------------             //11-02-15|0x0143
    for(i=0;  i<TokenNoTokens; ++i)                                                       //11-02-15|0x0144
      {                                                                                   //11-02-15|0x0145
        if(CryptoComputeParity(TokenTokenAddr(i)) !=Success)                              //11-02-15|0x0146
                                                            ReturnSystemError             //11-02-15|0x0147
        }                                                                                 //11-02-15|0x0148
//---------------------------------------------------------------------------             //11-02-15|0x0149
    if(CryptoClose()                != Success)             ReturnSystemError             //11-02-15|0x014a
//***************************************************************************             //11-02-15|0x014b
    ++MacCertNoCommands;                                                                  //11-02-15|0x014c
//***************************************************************************             //11-02-15|0x014d
//***************************************************************************             //11-02-15|0x014e
    return_test(mac_cert_parity_command_1);                                               //11-02-15|0x014f
}                                                                                         //11-02-15|0x0150
//                                                                                        //05-24-97|0x0150
//***************************************************************************             //11-02-18|0x0153
//***************************************************************************             //11-02-18|0x0154
//******                                                               ******             //11-02-18|0x0155
//******               mac_cert_parity_arrow()                         ******             //11-02-18|0x0156
//******                                                               ******             //11-02-18|0x0157
//***************************************************************************             //11-02-18|0x0158
//***************************************************************************             //11-02-18|0x0159
//*******************************************************************************         //10-29-97|0x015d
//*******************************************************************************         //10-29-97|0x015d
// mac_cert_parity_arrow                                                                  //11-02-18|0x015d
//*******************************************************************************         //10-29-97|0x015d
//*******************************************************************************         //10-29-97|0x015d
UINT MAC_CERT::mac_cert_parity_arrow(void) {                                              //11-02-18|0x015d
//*******************************************************************************         //10-29-97|0x015d
//***************************************************************************             //11-02-18|0x0161
//***************************************************************************             //11-02-18|0x0162
  STRING_DATA work;                                                                  //11-02-18|0x0163
//***************************************************************************             //11-02-18|0x0164
//***************************************************************************             //11-02-18|0x0165
    MemSet(&work, 0, sizeof(STRING_DATA));                                                //11-02-18|0x0166
//---------------------------------------------------------------------------             //11-02-18|0x0167
    StrCpy(WorkLineAddr, "<----");                                                        //11-02-18|0x0168
//---------------------------------------------------------------------------             //11-02-18|0x0169
    WorkLength   = 5;                                                                     //11-02-18|0x016a
//***************************************************************************             //11-02-18|0x016b
    if(CryptoOpen(MacCertCurrentRandom)   != Success)       ReturnSystemError             //11-02-18|0x016c
    if(CryptoComputeParity(&work)         != Success)       ReturnSystemError             //11-02-18|0x016d
    if(CryptoClose()                      != Success)       ReturnSystemError             //11-02-18|0x016e
//***************************************************************************             //11-02-18|0x016f
    ++MacCertNoArrows;                                                                    //11-02-18|0x0170
//***************************************************************************             //11-02-18|0x0171
//***************************************************************************             //11-02-18|0x0172
    return_test(mac_cert_parity_arrow_1);                                                 //11-02-18|0x0173
}                                                                                         //11-02-18|0x0174
//                                                                                        //05-24-97|0x0174
//***************************************************************************             //11-02-15|0x0177
//***************************************************************************             //11-02-15|0x0178
//******                                                               ******             //11-02-15|0x0179
//******               mac_cert_parity_time(CommandDate)               ******             //11-02-15|0x017a
//******                                                               ******             //11-02-15|0x017b
//***************************************************************************             //11-02-15|0x017c
//***************************************************************************             //11-02-15|0x017d
//*******************************************************************************         //10-29-97|0x0182
//*******************************************************************************         //10-29-97|0x0182
// mac_cert_parity_time                                                                   //11-02-15|0x0182
//*******************************************************************************         //10-29-97|0x0182
//*******************************************************************************         //10-29-97|0x0182
UINT MAC_CERT::mac_cert_parity_time(                                                      //11-02-15|0x0182
    ULONG CommandDate                                                                     //11-02-15|0x0182
    ) {                                                                                   //11-02-15|0x0182
//*******************************************************************************         //10-29-97|0x0182
//***************************************************************************             //11-02-15|0x0186
//***************************************************************************             //11-02-15|0x0187
  WORDS date;                                                                        //11-02-15|0x0188
  STRING_DATA work;                                                                  //11-02-15|0x0189
//***************************************************************************             //11-02-15|0x018a
//***************************************************************************             //11-02-15|0x018b
    CommandDate         /= 32;                                                            //11-02-15|0x018c
    CommandDate         /= 64;                                                            //11-02-15|0x018d
    CommandDate         /= 32;                                                            //11-02-15|0x018e
//***************************************************************************             //11-02-15|0x018f
    if(CommandDate > MacCertCurrentTime)        ReturnFinish("Illegal Date");             //11-02-15|0x0190
//---------------------------------------------------------------------------             //11-02-15|0x0191
    if(CommandDate == MacCertCurrentTime)                                                 //11-02-15|0x0192
      {                                                                                   //11-02-15|0x0193
        ++MacCertNoTodays;                                                                //11-02-15|0x0194
        }                                                                                 //11-02-15|0x0195
//***************************************************************************             //11-02-15|0x0196
//***************************************************************************             //11-02-15|0x0197
    MemSet(&work, 0, sizeof(STRING_DATA));                                                //11-02-15|0x0198
//---------------------------------------------------------------------------             //11-02-15|0x0199
    for(WorkLength=0; WorkLength<8; ++WorkLength)                                         //11-02-15|0x019a
      {                                                                                   //11-02-15|0x019b
        date.ulong            = CommandDate;                                              //11-02-15|0x019c
        date.ulong           %= 16;                                                       //11-02-15|0x019d
        date.byte0           += 'a';                                                      //11-02-15|0x019e
        WorkChar(WorkLength)  = date.char0;                                               //11-02-15|0x019f
        CommandDate           /= 16;                                                      //11-02-15|0x01a0
        }                                                                                 //11-02-15|0x01a1
//***************************************************************************             //11-02-15|0x01a2
    if(CryptoOpen(MacCertCurrentRandom)   != Success)       ReturnSystemError             //11-02-15|0x01a3
    if(CryptoComputeParity(&work)         != Success)       ReturnSystemError             //11-02-15|0x01a4
    if(CryptoClose()                      != Success)       ReturnSystemError             //11-02-15|0x01a5
//***************************************************************************             //11-02-15|0x01a6
//***************************************************************************             //11-02-15|0x01a7
    return_test(mac_cert_parity_time_1);                                                  //11-02-15|0x01a8
}                                                                                         //11-02-15|0x01a9
//                                                                                        //05-24-97|0x01a9
//***************************************************************************             //11-02-15|0x01ac
//***************************************************************************             //11-02-15|0x01ad
//******                                                               ******             //11-02-15|0x01ae
//******       mac_cert_report(&NoCoomands, &NoArrows, &NoTodays)      ******             //11-02-15|0x01af
//******                                                               ******             //11-02-15|0x01b0
//***************************************************************************             //11-02-15|0x01b1
//***************************************************************************             //11-02-15|0x01b2
//*******************************************************************************         //10-29-97|0x01b6
//*******************************************************************************         //10-29-97|0x01b6
// mac_cert_report                                                                        //11-02-15|0x01b6
//*******************************************************************************         //10-29-97|0x01b6
//*******************************************************************************         //10-29-97|0x01b6
void MAC_CERT::mac_cert_report(                                                           //11-02-15|0x01b6
    UINT_FAR NoCommandsFar,                                                               //11-02-15|0x01b6
    UINT_FAR NoArrowsFar,                                                                 //11-02-15|0x01b6
    UINT_FAR NoTodaysFar                                                                  //11-02-15|0x01b6
    ) {                                                                                   //11-02-15|0x01b6
//*******************************************************************************         //10-29-97|0x01b6
//***************************************************************************             //11-02-15|0x01ba
//***************************************************************************             //11-02-15|0x01bb
    *NoCommandsFar    = MacCertNoCommands;                                                //11-02-15|0x01bc
    *NoArrowsFar      = MacCertNoArrows;                                                  //11-02-15|0x01bd
    *NoTodaysFar      = MacCertNoTodays;                                                  //11-02-15|0x01be
//***************************************************************************             //11-02-15|0x01bf
    MacCertNoCommands = 0;                                                                //11-02-15|0x01c0
    MacCertNoArrows   = 0;                                                                //11-02-15|0x01c1
    MacCertNoTodays   = 0;                                                                //11-02-15|0x01c2
//***************************************************************************             //11-02-15|0x01c3
    return;                                                                               //11-02-15|0x01c4
}                                                                                         //11-02-15|0x01c5
//                                                                                        //05-24-97|0x01c5
//***************************************************************************             //11-02-17|0x01c8
//***************************************************************************             //11-02-17|0x01c9
//******                                                               ******             //11-02-17|0x01ca
//******                         mac_cert_end()                        ******             //11-02-17|0x01cb
//******                                                               ******             //11-02-17|0x01cc
//***************************************************************************             //11-02-17|0x01cd
//***************************************************************************             //11-02-17|0x01ce
//*******************************************************************************         //10-29-97|0x01d3
//*******************************************************************************         //10-29-97|0x01d3
// mac_cert_end                                                                           //11-02-17|0x01d3
//*******************************************************************************         //10-29-97|0x01d3
//*******************************************************************************         //10-29-97|0x01d3
UINT MAC_CERT::mac_cert_end(void) {                                                       //11-02-17|0x01d3
//*******************************************************************************         //10-29-97|0x01d3
//***************************************************************************             //11-02-17|0x01d7
//***************************************************************************             //11-02-17|0x01d8
  UCHAR parity;                                                                      //11-02-25|0x01d9
//***************************************************************************             //11-02-17|0x01da
//***************************************************************************             //11-02-17|0x01db
    if(CryptoOpen(MacCertCurrentRandom)   != Success)       ReturnSystemError             //11-02-17|0x01dc
    switch(CryptoGetParity(&parity))                                                      //<----   |0x01de
      {                                                                                   //<----   |0x01df
        case Success:                                                  break;             //<----   |0x01e0
        case UserError:              ReturnFinish("No Commands or Includes");             //<----   |0x01e1
        default:                                            ReturnSystemError             //<----   |0x01e2
        }                                                                                 //<----   |0x01e3
    if(CryptoClose()                      != Success)       ReturnSystemError             //11-02-17|0x01e4
//***************************************************************************             //11-02-17|0x01e5
    if(CurrentLength >= 252)           ReturnFinish("Too Many Append Files");             //11-02-17|0x01e6
//---------------------------------------------------------------------------             //11-02-17|0x01e7
    switch(prepare_string(parity,      0))                       _SwitchGroup             //11-02-25|0x01e8
//***************************************************************************             //11-02-17|0x01e9
    return_test(mac_cert_end_1);                                                          //11-02-17|0x01ea
}                                                                                         //11-02-17|0x01eb
//                                                                                        //05-24-97|0x01eb
//***************************************************************************             //11-02-14|0x01ee
//***************************************************************************             //11-02-14|0x01ef
//******                                                               ******             //11-02-14|0x01f0
//******                    mac_cert_finish(Version)                   ******             //11-02-14|0x01f1
//******                                                               ******             //11-02-14|0x01f2
//***************************************************************************             //11-02-14|0x01f3
//***************************************************************************             //11-02-14|0x01f4
//*******************************************************************************         //10-29-97|0x01fc
//*******************************************************************************         //10-29-97|0x01fc
// mac_cert_finish                                                                        //11-02-14|0x01fc
//*******************************************************************************         //10-29-97|0x01fc
//*******************************************************************************         //10-29-97|0x01fc
UINT MAC_CERT::mac_cert_finish(                                                           //11-02-14|0x01fc
    UINT VersionNo                                                                        //11-02-14|0x01fc
    ) {                                                                                   //11-02-14|0x01fc
//*******************************************************************************         //10-29-97|0x01fc
//***************************************************************************             //11-02-14|0x0200
//***************************************************************************             //11-02-14|0x0201
  UCHAR current_parity;                                                              //11-02-25|0x0202
  UINT current_version;                                                              //11-02-25|0x0203
  UCHAR prev_parity;                                                                 //11-02-25|0x0204
//***************************************************************************             //11-02-14|0x0205
//***************************************************************************             //11-02-14|0x0206
    switch(VersionNo)                                                                     //11-02-14|0x0207
      {                                                                                   //11-02-14|0x0208
        case DS_EXPERIMENT:                   return_test(mac_cert_finish_1);             //11-02-14|0x0209
        case DS_ALPHA:        current_version = 1;                     break;             //11-02-25|0x020a
        case DS_BETA:         current_version = 2;                     break;             //11-02-25|0x020b
        case DS_RELEASE:      current_version = 3;                     break;             //11-02-26|0x020c
        default:                                            ReturnSystemError             //11-02-18|0x020d
        }                                                                                 //11-02-18|0x020e
//***************************************************************************             //11-02-18|0x020f
    if(CryptoOpen(MacCertCurrentRandom)         != Success) ReturnSystemError             //11-02-18|0x0210
    if(CryptoComputeParity(MacCertCurrentAddr)  != Success) ReturnSystemError             //11-02-18|0x0211
    if(CryptoGetParity(&current_parity)         != Success) ReturnSystemError             //11-02-18|0x0212
    if(CryptoClose()                            != Success) ReturnSystemError             //11-02-18|0x0213
//***************************************************************************             //11-02-18|0x0214
    switch(prepare_string(current_parity,   current_version))    _SwitchGroup             //11-02-25|0x0215
//***************************************************************************             //11-02-18|0x0216
    if(MacDictLoadCert(MacCertCurrentAddr)      != Success) ReturnSystemError             //11-02-18|0x0217
//***************************************************************************             //11-02-18|0x0218
    switch(VersionNo)                                                                     //11-02-18|0x0219
      {                                                                                   //11-02-18|0x021a
        case DS_ALPHA:                        return_test(mac_cert_finish_1);             //11-02-18|0x021b
        case DS_BETA:                                                  break;             //11-02-19|0x021c
        case DS_RELEASE:                                               break;             //11-02-26|0x021d
        default:                                            ReturnSystemError             //11-02-18|0x021e
        }                                                                                 //11-02-18|0x021f
//***************************************************************************             //11-02-19|0x0220
    if(CurrentLength != PreviousLength)                                                   //11-02-19|0x0221
                                    ReturnFinish("Illegal Modified Version");             //11-02-19|0x0222
//***************************************************************************             //11-02-19|0x0223
    PreviousPosition = PreviousLength;                                                    //11-02-25|0x0224
//---------------------------------------------------------------------------             //11-02-25|0x0225
    switch(read_parity (&prev_parity,  MacCertPreviousAddr))     _SwitchGroup             //11-02-25|0x0226
//***************************************************************************             //11-02-19|0x0227
    if(prev_parity != current_parity)                                                     //11-02-25|0x0228
                                    ReturnFinish("Illegal Modified Version");             //11-02-25|0x0229
//***************************************************************************             //11-02-19|0x022a
    return_test(mac_cert_finish_2);                                                       //11-02-19|0x022b
}                                                                                         //11-02-19|0x022c
//                                                                                        //05-24-97|0x022c
//***************************************************************************             //11-02-25|0x0230
//***************************************************************************             //11-02-25|0x0231
//******                                                               ******             //11-02-25|0x0232
//******                  prepare_string(parity, version)              ******             //11-02-25|0x0233
//******                                                               ******             //11-02-25|0x0234
//***************************************************************************             //11-02-25|0x0235
//***************************************************************************             //11-02-25|0x0236
//*******************************************************************************         //10-29-97|0x023b
//*******************************************************************************         //10-29-97|0x023b
// prepare_string                                                                         //11-02-25|0x023b
//*******************************************************************************         //10-29-97|0x023b
//*******************************************************************************         //10-29-97|0x023b
UINT MAC_CERT::prepare_string(                                                            //11-02-25|0x023b
    UCHAR ParityByte,                                                                     //11-02-25|0x023b
    UINT VersionNo                                                                        //11-02-25|0x023b
    ) {                                                                                   //11-02-25|0x023b
//*******************************************************************************         //10-29-97|0x023b
//***************************************************************************             //11-02-25|0x023e
//***************************************************************************             //11-02-25|0x023f
  WORDS current;                                                                     //11-02-25|0x0240
//***************************************************************************             //11-02-25|0x0241
//***************************************************************************             //11-02-25|0x0242
    current.ulong   = 0;                                                                  //11-02-25|0x0243
//***************************************************************************             //11-02-25|0x0244
    current.byte0   = ParityByte;                                                         //11-02-25|0x0245
    current.byte2   = ParityByte;                                                         //11-02-26|0x0246
//***************************************************************************             //11-02-25|0x0247
    current.word0  %= 0x40;                                                               //11-02-25|0x0248
    current.word1  /= 0x40;                                                               //11-02-25|0x0249
//***************************************************************************             //11-02-25|0x024a
    VersionNo      *= 4;                                                                  //11-02-26|0x024b
    current.word1  += VersionNo;                                                          //11-02-26|0x024c
//***************************************************************************             //11-02-25|0x024d
    if((current.word0 += 0x20) >= 0x60)                     ReturnSystemError             //11-02-25|0x024e
    if((current.word1 += 0x20) >= 0x30)                     ReturnSystemError             //11-02-25|0x024f
//***************************************************************************             //11-02-25|0x0250
    if(CurrentLength       >= 254)                          ReturnSystemError             //11-02-25|0x0251
    if((CurrentLength & 1) != 0)                            ReturnSystemError             //11-02-25|0x0252
//---------------------------------------------------------------------------             //11-02-25|0x0253
    CurrentChar(CurrentLength++) = current.char0;                                         //11-02-25|0x0254
    CurrentChar(CurrentLength++) = current.char2;                                         //11-02-25|0x0255
//***************************************************************************             //11-02-25|0x0256
    return_test(prepare_string_1);                                                        //11-02-25|0x0257
}                                                                                         //11-02-25|0x0258
//                                                                                        //05-24-97|0x0258
//***************************************************************************             //11-02-25|0x025b
//***************************************************************************             //11-02-25|0x025c
//******                                                               ******             //11-02-25|0x025d
//******                  read_parity(&parity, String)                 ******             //11-02-25|0x025e
//******                                                               ******             //11-02-25|0x025f
//***************************************************************************             //11-02-25|0x0260
//***************************************************************************             //11-02-25|0x0261
//*******************************************************************************         //10-29-97|0x0266
//*******************************************************************************         //10-29-97|0x0266
// read_parity                                                                           // 11-02-25|0x0266
//*******************************************************************************         //10-29-97|0x0266
//*******************************************************************************         //10-29-97|0x0266
UINT MAC_CERT::read_parity(                                                              // 11-02-25|0x0266
    UCHAR_FAR ParityByteAddr,                                                            // 11-02-25|0x0266
    STRING_DATA_FAR String                                                               // 11-02-25|0x0266
    ) {                                                                                  // 11-02-25|0x0266
//*******************************************************************************         //10-29-97|0x0266
//***************************************************************************             //11-02-25|0x0269
//***************************************************************************             //11-02-25|0x026a
  WORDS current;                                                                     //11-02-25|0x026b
//***************************************************************************             //11-02-25|0x026c
//***************************************************************************             //11-02-25|0x026d
    if (StringLength         >= 256)                        ReturnSystemError             //11-02-25|0x026e
    if((StringLength & 1)   != 0)                           ReturnSystemError             //11-02-25|0x026f
    if (StringPosition       > StringLength)                ReturnSystemError             //11-02-25|0x0270
    if (StringPosition       < 2)                           ReturnSystemError             //11-02-25|0x0271
    if((StringPosition & 1) != 0)                           ReturnSystemError             //11-02-25|0x0272
//***************************************************************************             //11-02-25|0x0273
    current.ulong   = 0;                                                                  //11-02-25|0x0274
    current.char0   = StringChar(StringPosition-2);                                       //11-02-25|0x0275
    current.char2   = StringChar(StringPosition-1);                                       //11-02-25|0x0276
//***************************************************************************             //11-02-25|0x0277
//***************************************************************************             //11-02-25|0x0278
    if((current.word0 -= 0x20) >= 0x40)                     ReturnSystemError             //11-02-25|0x0279
    if((current.word1 -= 0x20) >= 0x10)                     ReturnSystemError             //11-02-25|0x027a
//***************************************************************************             //11-02-25|0x027b
    current.word1  %= 0x04;                                                               //11-02-25|0x027c
    current.word1  *= 0x40;                                                               //11-02-25|0x027d
    current.word0  += current.word1;                                                      //11-02-25|0x027e
//***************************************************************************             //11-02-25|0x027f
    *ParityByteAddr = current.byte0;                                                      //11-02-25|0x0280
//***************************************************************************             //11-02-25|0x0281
    return_test(read_parity_1);                                                           //11-02-25|0x0282
}                                                                                         //11-02-25|0x0283
//                                                                                        //05-24-97|0x0283
//***************************************************************************             //11-02-26|0x0287
//***************************************************************************             //11-02-26|0x0288
//******                                                               ******             //11-02-26|0x0289
//******                  read_version(&Version, String)               ******             //11-02-26|0x028a
//******                                                               ******             //11-02-26|0x028b
//***************************************************************************             //11-02-26|0x028c
//***************************************************************************             //11-02-26|0x028d
//*******************************************************************************         //10-29-97|0x0292
//*******************************************************************************         //10-29-97|0x0292
// read_version                                                                          // 11-02-26|0x0292
//*******************************************************************************         //10-29-97|0x0292
//*******************************************************************************         //10-29-97|0x0292
UINT MAC_CERT::read_version(                                                             // 11-02-26|0x0292
    UINT_FAR VersionAddr,                                                                // 11-02-26|0x0292
    STRING_DATA_FAR String                                                               // 11-02-26|0x0292
    ) {                                                                                  // 11-02-26|0x0292
//*******************************************************************************         //10-29-97|0x0292
//***************************************************************************             //11-02-26|0x0295
//***************************************************************************             //11-02-26|0x0296
  WORDS current;                                                                     //11-02-26|0x0297
//***************************************************************************             //11-02-26|0x0298
//***************************************************************************             //11-02-26|0x0299
    if (StringLength         >= 256)                        ReturnSystemError             //11-02-26|0x029a
    if((StringLength & 1)   != 0)                           ReturnSystemError             //11-02-26|0x029b
    if (StringPosition       > StringLength)                ReturnSystemError             //11-02-26|0x029c
    if (StringPosition       < 2)                           ReturnSystemError             //11-02-26|0x029d
    if((StringPosition & 1) != 0)                           ReturnSystemError             //11-02-26|0x029e
//***************************************************************************             //11-02-26|0x029f
    current.ulong   = 0;                                                                  //11-02-26|0x02a0
    current.char0   = StringChar(StringPosition-1);                                       //11-02-26|0x02a1
//***************************************************************************             //11-02-26|0x02a2
//***************************************************************************             //11-02-26|0x02a3
    if((current.word0 -= 0x20) >= 0x10)                     ReturnSystemError             //11-02-26|0x02a4
//***************************************************************************             //11-02-26|0x02a5
    current.word0  /= 0x04;                                                               //11-02-26|0x02a6
//***************************************************************************             //11-02-26|0x02a7
    *VersionAddr    = current.word0;                                                      //11-02-26|0x02a8
//***************************************************************************             //11-02-26|0x02a9
    return_test(read_parity_1);                                                           //11-02-26|0x02aa
}                                                                                         //11-02-26|0x02ab
//                                                                                        //05-24-97|0x02ab
//***************************************************************************             //11-02-14|0x02ae
//***************************************************************************             //11-02-14|0x02af
//******                                                               ******             //11-02-14|0x02b0
//******                        constructor                            ******             //11-02-14|0x02b1
//******                                                               ******             //11-02-14|0x02b2
//***************************************************************************             //11-02-14|0x02b3
//***************************************************************************             //11-02-14|0x02b4
//*******************************************************************************         //10-29-97|0x02b5
//*******************************************************************************         //10-29-97|0x02b5
// CONSTRUCTOR                                                                            //11-02-14|0x02b5
//*******************************************************************************         //10-29-97|0x02b5
//*******************************************************************************         //10-29-97|0x02b5
MAC_CERT::MAC_CERT() {                                                                    //11-02-14|0x02b5
//***************************************************************************             //11-02-14|0x02b6
//***************************************************************************             //11-02-14|0x02b7
    MemSet(&mac_cert, 0, sizeof(MACRO_CERTIFY));                                          //11-02-14|0x02b8
//***************************************************************************             //11-02-14|0x02b9
    { ULONG i;                                                                            //11-02-14|0x02ba
      test_samples[NoTestSamples] = TestIndex;                                            //11-02-14|0x02ba
      i = 1;                                                                              //11-02-14|0x02ba
      while(i<TestIndex)                                                                  //11-02-14|0x02ba
        {                                                                                 //11-02-14|0x02ba
          test_samples[i] = 0;                                                            //11-02-14|0x02ba
          ++i;                                                                            //11-02-14|0x02ba
          }                                                                               //11-02-14|0x02ba
      }                                                                                   //11-02-14|0x02ba
//***************************************************************************             //11-02-14|0x02bb
}                                                                                         //11-02-14|0x02bc
//                                                                                        //05-24-97|0x02bc
//*******************************************************************************         //05-24-97|0x02c0
//*******************************************************************************         //05-24-97|0x02c0
//****                       END OF FILE                                     ****         //05-24-97|0x02c0
//*******************************************************************************         //05-24-97|0x02c0
//*******************************************************************************         //05-24-97|0x02c0
