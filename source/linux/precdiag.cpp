//*****************************************************************************           //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//                                                                                        //04-01-97|0x001e
// PRECEDENCE DIAGNOSTIC MANAGER                                                          //04-01-97|0x001e
//                                                                                        //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//  Copyright: 2006 Robert H. Adams                                                       //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//  The purpose of this program as well as instructions regarding its use is              //04-01-97|0x001e
//  defined in the associated manual.                                                     //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//  This program is free software; you can redistribute it and/or modify                  //04-01-97|0x001e
//  it under the terms of the GNU General Public License as published by                  //04-01-97|0x001e
//  the Free Software Foundation; either version 2 of the License, or                     //04-01-97|0x001e
//  (at your option) any later version.                                                   //04-01-97|0x001e
//                                                                                        //04-01-97|0x001e
//  This program is distributed in the hope that it will be useful,                       //04-01-97|0x001e
//  but WITHOUT ANY WARRANTY; without even the implied warranty of                        //04-01-97|0x001e
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                         //04-01-97|0x001e
//  GNU General Public License for more details.                                          //04-01-97|0x001e
//                                                                                        //04-01-97|0x001e
//  You should have received a copy of the GNU General Public License                     //04-01-97|0x001e
//  along with this program; if not, write to the Free Software                           //04-01-97|0x001e
//  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA., 02110-1301            //04-01-97|0x001e
//  USA                                                                                   //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//  For further information, please contact Robert Adams:                                 //04-01-97|0x001e
//     EMail:    robert.adams@whatifwe.com                                                //04-01-97|0x001e
//     Mail:     PO Box 156, Sun Valley, Ca. 91353-0155, USA                              //04-01-97|0x001e
//  Or visit the website, "www.whatifwe.com".                                             //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
//*****************************************************************************           //04-01-97|0x001e
#ifdef WIN31_SYSTEM                                                                       //05-24-97|0x0021
#include "precwn31.h"                                                                     //05-24-97|0x0021
#endif                                                                                    //05-24-97|0x0021
#ifdef WIN95_SYSTEM                                                                       //05-24-97|0x0021
#include "precwn95.h"                                                                     //05-24-97|0x0021
#endif                                                                                    //05-24-97|0x0021
#ifdef MSDOS_SYSTEM                                                                       //05-24-97|0x0021
#include "precdos.h"                                                                      //05-24-97|0x0021
#endif                                                                                    //05-24-97|0x0021
#include "prechost.h"                                                                     //05-24-97|0x0021
#include "precdiag.h"                                                                     //06-08-23|0x0021
#include "precdiag.hxx"                                                                   //06-08-23|0x0021
#include "precdiag.hpp"                                                                   //06-08-23|0x0021
#include "precutil.h"                                                                      //06-08-23|0x0024
#include "guicomm.h"                                                                      //06-08-23|0x0025
#include "preccall.h"                                                                     //07-02-10|0x0026
#define StrLen(i) strlen(i)                                                               //06-08-23|0x002e
#define StrCat(i,j) strcat(i,j)                                                           //06-08-23|0x002e
#define StrCpy(i,j) strcpy(i,j)                                                           //06-08-23|0x002e
#define StrCmp(i,j) Str_Comp((SCHAR_FAR)i,j,256)                                          //06-08-23|0x002e
#define StrRChr(i,j) strrchr(i,j)                                                         //06-08-23|0x002e
#define StrChr(i,j) strchr(i,j)                                                           //06-08-23|0x002e
#define StrToByteInt(i,j) GetInteger(i,&j,0xff)                                           //06-08-23|0x002e
#define StrToInt(i,j) GetInteger(i,&j,0xffff)                                             //06-08-23|0x002e
#define StrToLongInt(i,j) GetInteger(i,&j,0xffffffffL)                                    //06-08-23|0x002e
#define StrToByteHex(i,j) GetHex(i,&j,1)                                                  //06-08-23|0x002e
#define StrToHex(i,j) GetHex(i,&j,2)                                                      //06-08-23|0x002e
#define StrToLongHex(i,j) GetHex(i,&j,4)                                                  //06-08-23|0x002e
#define FindName(i) strrchr(i, '/')                                                       //06-08-23|0x002e
#define Allocate(k) (k##_FAR) calloc(1,sizeof(k))                                         //07-02-19|0x002f
#define Free(k) free(k)                                                                   //07-02-19|0x002f
#define MemSet(i,j,k) memset(i,j,k)                                                       //07-02-19|0x002f
#define MemCCpy(i,j,k,l) Mem_C_Copy((UCHAR_FAR) i, (UCHAR_FAR) j,k,l)                     //07-02-19|0x002f
#define MemCpy(i,j,k) memcpy(i,j,k)                                                       //07-02-19|0x002f
#define LineEnd 0x0d                                                                      //07-02-19|0x002f
//***************************************************************************             //06-08-23|0x0042
//***************************************************************************             //06-08-23|0x0043
//******                                                               ******             //06-08-23|0x0044
//******                   CLASS BEGIN                                 ******             //06-08-23|0x0045
//******                                                               ******             //06-08-23|0x0046
//***************************************************************************             //06-08-23|0x0047
//***************************************************************************             //06-08-23|0x0048
PRECDIAG prec_diag;                                                                       //04-09-24|0x0049
//***************************************************************************             //04-09-24|0x004a
//***************************************************************************             //04-09-24|0x004b
//******                                                               ******             //04-09-24|0x004c
//******                   diagnostic_file_names                       ******             //04-09-24|0x004d
//******                                                               ******             //04-09-24|0x004e
//***************************************************************************             //04-09-24|0x004f
//***************************************************************************             //04-09-24|0x0050
//***************************************************************************             //04-09-24|0x0057
//***************************************************************************             //04-09-24|0x0058
//*******************************************************************************         //10-29-97|0x0059
//*******************************************************************************         //10-29-97|0x0059
// diagnostic_file_names                                                                  //04-09-24|0x0059
//*******************************************************************************         //10-29-97|0x0059
//*******************************************************************************         //10-29-97|0x0059
void PRECDIAG::diagnostic_file_names(                                                     //04-09-24|0x0059
    SCHAR_FAR file_name                                                                   //04-09-24|0x0059
    ) {                                                                                   //04-09-24|0x0059
//*******************************************************************************         //10-29-97|0x0059
//***************************************************************************             //04-09-24|0x005b
//***************************************************************************             //04-09-24|0x005c
  SCHAR_FAR period_addr;                                                             //04-09-24|0x005d
  FILE * file;                                                                       //04-09-27|0x005e
//***************************************************************************             //04-09-24|0x005f
    StrCpy(base_name, file_name);                                                         //04-09-24|0x0060
    period_addr = StrRChr(base_name, '.');                                                //04-09-24|0x0061
    if(period_addr != 0) *period_addr = 0x00;                                             //04-09-24|0x0062
//***************************************************************************             //04-09-24|0x0063
    sprintf(error_name,  "%s.err", base_name);                                            //04-09-24|0x0064
    sprintf(test_name,   "%s.tst", base_name);                                            //04-09-27|0x0065
    sprintf(report_name, "%s.rpt", base_name);                                            //04-09-27|0x0066
//***************************************************************************             //04-09-24|0x0067
    file = fopen(error_name, "wt");                                                       //04-09-27|0x0068
    if(file != 0) fclose(file);                                                           //04-09-27|0x0069
//***************************************************************************             //04-09-27|0x006a
    test_read_position  = 0;                                                              //04-09-27|0x006b
    test_write_position = 0;                                                              //04-09-27|0x006c
//---------------------------------------------------------------------------             //04-09-27|0x006d
    file = fopen(test_name, "ab");                                                        //04-09-27|0x006e
    if(file != 0) fclose(file);                                                           //04-09-27|0x006f
//***************************************************************************             //04-09-27|0x0070
    file = fopen(report_name, "wt");                                                      //04-09-27|0x0071
    if(file != 0) fclose(file);                                                           //04-09-27|0x0072
//***************************************************************************             //04-09-27|0x0073
    return;                                                                               //04-09-24|0x0074
}                                                                                         //04-09-24|0x0075
//                                                                                        //05-24-97|0x0075
//***************************************************************************             //07-10-29|0x0078
//***************************************************************************             //07-10-29|0x0079
//******                                                               ******             //07-10-29|0x007a
//******                       executable_date                         ******             //07-10-29|0x007b
//******                                                               ******             //07-10-29|0x007c
//***************************************************************************             //07-10-29|0x007d
//***************************************************************************             //07-10-29|0x007e
//*******************************************************************************         //10-29-97|0x007f
//*******************************************************************************         //10-29-97|0x007f
// executable_date                                                                        //07-10-29|0x007f
//*******************************************************************************         //10-29-97|0x007f
//*******************************************************************************         //10-29-97|0x007f
ULONG PRECDIAG::executable_date(void) {                                                   //07-10-29|0x007f
//*******************************************************************************         //10-29-97|0x007f
//***************************************************************************             //07-10-29|0x0081
//***************************************************************************             //07-10-29|0x0082
  SCHAR executable_name[_MAX_PATH];                                                  //07-10-29|0x0083
  ULONG executable_time;                                                             //07-10-29|0x0084
//***************************************************************************             //07-10-29|0x0085
//***************************************************************************             //07-10-29|0x0086
    StrCpy(executable_name, base_name);                                                   //07-10-29|0x0087
      {  struct stat  linux_write_time;                                                   //07-10-29|0x0088
         struct   tm  *local_time;                                                        //07-10-29|0x0088
         FILE *        file;                                                              //07-10-29|0x0088
         executable_time = 0;                                                             //07-10-29|0x0088
         file = fopen(executable_name, "rt");                                             //07-10-29|0x0088
         if(file != 0)                                                                    //07-10-29|0x0088
           {                                                                              //07-10-29|0x0088
             stat(executable_name, &linux_write_time);                                    //07-10-29|0x0088
             local_time = localtime(&linux_write_time.st_mtime);                          //07-10-29|0x0088
             executable_time = local_time->tm_year;                                       //07-10-29|0x0088
             executable_time -= 80;                                                       //07-10-29|0x0088
             executable_time *= 16;                                                       //07-10-29|0x0088
             executable_time += local_time->tm_mon;                                       //07-10-29|0x0088
             executable_time *= 32;                                                       //07-10-29|0x0088
             executable_time += local_time->tm_mday;                                      //07-10-29|0x0088
             executable_time *= 32;                                                       //07-10-29|0x0088
             executable_time += local_time->tm_hour;                                      //07-10-29|0x0088
             executable_time *= 64;                                                       //07-10-29|0x0088
             executable_time += local_time->tm_min;                                       //07-10-29|0x0088
             executable_time *= 32;                                                       //07-10-29|0x0088
             executable_time += (local_time->tm_sec / 2);                                 //07-10-29|0x0088
             fclose(file);                                                                //07-10-29|0x0088
             }                                                                            //07-10-29|0x0088
         }                                                                                //07-10-29|0x0088
    return(executable_time);                                                              //07-10-29|0x0089
}                                                                                         //07-10-29|0x008a
//                                                                                        //05-24-97|0x008a
//***************************************************************************             //04-08-23|0x008d
//***************************************************************************             //04-08-23|0x008e
//******                                                               ******             //04-08-23|0x008f
//******                   pcg_system_error                            ******             //04-08-23|0x0090
//******                                                               ******             //04-08-23|0x0091
//***************************************************************************             //04-08-23|0x0092
//***************************************************************************             //04-08-23|0x0093
//*******************************************************************************         //10-29-97|0x0094
//*******************************************************************************         //10-29-97|0x0094
// pcg_system_error                                                                       //04-08-23|0x0094
//*******************************************************************************         //10-29-97|0x0094
//*******************************************************************************         //10-29-97|0x0094
void PRECDIAG::pcg_system_error(                                                          //04-08-23|0x0094
    SCHAR_FAR file_name,                                                                  //04-08-23|0x0094
    SWORD line_no                                                                         //04-08-23|0x0094
    ) {                                                                                   //04-08-23|0x0094
//*******************************************************************************         //10-29-97|0x0094
//***************************************************************************             //04-08-23|0x0096
//***************************************************************************             //04-08-23|0x0097
  FILE * error_file;                                                                 //04-08-23|0x0098
  SCHAR message[128];                                                                //04-08-23|0x0099
//***************************************************************************             //04-08-23|0x009a
//***************************************************************************             //04-08-23|0x009b
    sprintf(message, "PCG ERROR: %s -- %d", file_name, line_no);                          //04-08-23|0x009c
    printf("%s\n", message);                                                              //04-08-23|0x009d
//***************************************************************************             //04-08-23|0x009e
    if((error_file = fopen(error_name, "at")) == 0)                   return;             //04-09-27|0x009f
    if(fprintf(error_file, "%s\n", message)  == 0)                   return;              //04-08-23|0x00a0
    fclose(error_file);                                                                   //04-08-23|0x00a1
    return;                                                                               //04-08-23|0x00a2
}                                                                                         //04-08-23|0x00a3
//                                                                                        //05-24-97|0x00a3
//***************************************************************************             //04-10-05|0x00a6
//***************************************************************************             //04-10-05|0x00a7
//******                                                               ******             //04-10-05|0x00a8
//******                   basic_test_reset                            ******             //04-10-05|0x00a9
//******                                                               ******             //04-10-05|0x00aa
//***************************************************************************             //04-10-05|0x00ab
//***************************************************************************             //04-10-05|0x00ac
//*******************************************************************************         //10-29-97|0x00ad
//*******************************************************************************         //10-29-97|0x00ad
// basic_test_reset                                                                       //04-10-05|0x00ad
//*******************************************************************************         //10-29-97|0x00ad
//*******************************************************************************         //10-29-97|0x00ad
UINT PRECDIAG::basic_test_reset(void) {                                                   //04-10-05|0x00ad
//*******************************************************************************         //10-29-97|0x00ad
//***************************************************************************             //04-10-05|0x00af
//***************************************************************************             //04-10-05|0x00b0
  FILE * file;                                                                       //04-10-05|0x00b1
//***************************************************************************             //04-10-05|0x00b2
    file = fopen(test_name, "wb");                                                        //04-10-05|0x00b3
    if(file == 0)                                          ReturnSystemError;             //04-10-05|0x00b4
//***************************************************************************             //04-10-05|0x00b5
    if(fclose(file))                                       ReturnSystemError;             //04-10-05|0x00b6
    return(Success);                                                                      //04-10-05|0x00b7
}                                                                                         //04-10-05|0x00b8
//                                                                                        //05-24-97|0x00b8
//***************************************************************************             //04-09-27|0x00bb
//***************************************************************************             //04-09-27|0x00bc
//******                                                               ******             //04-09-27|0x00bd
//******                   basic_test_read                             ******             //04-09-27|0x00be
//******                                                               ******             //04-09-27|0x00bf
//***************************************************************************             //04-09-27|0x00c0
//***************************************************************************             //04-09-27|0x00c1
//*******************************************************************************         //10-29-97|0x00c2
//*******************************************************************************         //10-29-97|0x00c2
// basic_test_read                                                                        //04-09-27|0x00c2
//*******************************************************************************         //10-29-97|0x00c2
//*******************************************************************************         //10-29-97|0x00c2
UINT PRECDIAG::basic_test_read(                                                           //04-09-27|0x00c2
    UINT_FAR record_far,                                                                  //04-09-27|0x00c2
    UINT record_length                                                                    //04-09-27|0x00c2
    ) {                                                                                   //04-09-27|0x00c2
//*******************************************************************************         //10-29-97|0x00c2
//***************************************************************************             //04-09-27|0x00c4
//***************************************************************************             //04-09-27|0x00c5
  FILE * file;                                                                       //04-09-27|0x00c6
  ULONG file_length;                                                                 //04-09-27|0x00c7
  SLONG test_length;                                                                 //04-09-27|0x00c8
  SLONG test_position;                                                               //04-09-27|0x00c9
//***************************************************************************             //04-09-27|0x00ca
    file = fopen(test_name, "rb");                                                        //04-09-27|0x00cb
    if(file == 0)                                          ReturnSystemError;             //04-09-27|0x00cc
//***************************************************************************             //04-09-27|0x00cd
    if(fseek(file, 0L, SEEK_END))                          ReturnSystemError;             //04-09-27|0x00ce
    if((file_length = ftell(file)) == -1L)                 ReturnSystemError;             //04-09-27|0x00cf
//***************************************************************************             //04-09-27|0x00d0
    if(file_length > 0)                                                                   //04-09-27|0x00d1
      {                                                                                   //04-09-27|0x00d2
        if(fseek(file, test_read_position, SEEK_SET))      ReturnSystemError;             //04-09-27|0x00d3
//---------------------------------------------------------------------------             //04-09-27|0x00d4
        test_length = fread(&test_position, 2, 2, file);                                  //04-09-27|0x00d5
        if(test_length != 2)                               ReturnSystemError;             //04-09-27|0x00d6
        if(test_read_position != test_position)            ReturnSystemError;             //04-09-27|0x00d7
//---------------------------------------------------------------------------             //04-09-27|0x00d8
        test_length = fread(record_far, 2, record_length, file);                          //04-09-27|0x00d9
        if(test_length != record_length)                   ReturnSystemError;             //04-09-27|0x00da
        if(*record_far != record_length)                   ReturnSystemError;             //04-09-27|0x00db
//---------------------------------------------------------------------------             //04-09-27|0x00dc
        if(fseek(file, 0L, SEEK_CUR))                      ReturnSystemError;             //04-09-27|0x00dd
        if((test_read_position = ftell(file)) == -1L)      ReturnSystemError;             //04-09-27|0x00de
        }                                                                                 //04-09-27|0x00df
//***************************************************************************             //04-09-27|0x00e0
    if(fclose(file))                                       ReturnSystemError;             //04-09-27|0x00e1
    return(Success);                                                                      //04-09-27|0x00e2
}                                                                                         //04-09-27|0x00e3
//                                                                                        //05-24-97|0x00e3
//***************************************************************************             //04-09-27|0x00e6
//***************************************************************************             //04-09-27|0x00e7
//******                                                               ******             //04-09-27|0x00e8
//******                   basic_test_write                            ******             //04-09-27|0x00e9
//******                                                               ******             //04-09-27|0x00ea
//***************************************************************************             //04-09-27|0x00eb
//***************************************************************************             //04-09-27|0x00ec
//*******************************************************************************         //10-29-97|0x00ed
//*******************************************************************************         //10-29-97|0x00ed
// basic_test_write                                                                       //04-09-27|0x00ed
//*******************************************************************************         //10-29-97|0x00ed
//*******************************************************************************         //10-29-97|0x00ed
UINT PRECDIAG::basic_test_write(                                                          //04-09-27|0x00ed
    UINT_FAR record_far                                                                   //04-09-27|0x00ed
    ) {                                                                                   //04-09-27|0x00ed
//*******************************************************************************         //10-29-97|0x00ed
//***************************************************************************             //04-09-27|0x00ef
//***************************************************************************             //04-09-27|0x00f0
  FILE * file;                                                                       //04-09-27|0x00f1
  ULONG test_length;                                                                 //04-09-27|0x00f2
//***************************************************************************             //04-09-27|0x00f3
    file = fopen(test_name, "r+b");                                                       //04-09-27|0x00f4
    if(file == 0)                                          ReturnSystemError;             //04-09-27|0x00f5
//***************************************************************************             //04-09-27|0x00f6
    if(fseek(file, test_write_position, SEEK_SET))         ReturnSystemError;             //04-09-27|0x00f7
//***************************************************************************             //04-09-27|0x00f8
    test_length = fwrite(&test_write_position, 2, 2, file);                               //04-09-27|0x00f9
    if(test_length != 2)                                   ReturnSystemError;             //04-09-27|0x00fa
//***************************************************************************             //04-09-27|0x00fb
    test_length = fwrite(record_far, 2, *record_far, file);                               //04-09-27|0x00fc
    if(test_length != *record_far)                         ReturnSystemError;             //04-09-27|0x00fd
//***************************************************************************             //04-09-27|0x00fe
    if(fseek(file, 0L, SEEK_CUR))                          ReturnSystemError;             //04-09-27|0x00ff
    if((test_write_position = ftell(file)) == -1L)         ReturnSystemError;             //04-09-27|0x0100
//***************************************************************************             //04-09-27|0x0101
    if(fclose(file))                                       ReturnSystemError;             //04-09-27|0x0102
    return(Success);                                                                      //04-09-27|0x0103
}                                                                                         //04-09-27|0x0104
//                                                                                        //05-24-97|0x0104
//***************************************************************************             //04-09-27|0x0107
//***************************************************************************             //04-09-27|0x0108
//******                                                               ******             //04-09-27|0x0109
//******                   basic_test_report                           ******             //04-09-27|0x010a
//******                                                               ******             //04-09-27|0x010b
//***************************************************************************             //04-09-27|0x010c
//***************************************************************************             //04-09-27|0x010d
//*******************************************************************************         //10-29-97|0x010e
//*******************************************************************************         //10-29-97|0x010e
// basic_test_report                                                                      //04-09-27|0x010e
//*******************************************************************************         //10-29-97|0x010e
//*******************************************************************************         //10-29-97|0x010e
UINT PRECDIAG::basic_test_report(                                                         //04-09-27|0x010e
    UINT_FAR record_far,                                                                  //04-09-27|0x010e
    SCHAR_FAR name                                                                        //04-09-27|0x010e
    ) {                                                                                   //04-09-27|0x010e
//*******************************************************************************         //10-29-97|0x010e
//***************************************************************************             //04-09-27|0x0110
//***************************************************************************             //04-09-27|0x0111
  UWORD index;                                                                       //04-09-27|0x0112
  FILE * file;                                                                       //04-09-27|0x0113
  UINT_FAR addr;                                                                     //04-09-27|0x0114
//***************************************************************************             //04-09-27|0x0115
    file = fopen(report_name, "at");                                                      //04-09-27|0x0116
    if(file == 0)                                          ReturnSystemError;             //04-09-27|0x0117
//***************************************************************************             //04-09-27|0x0118
    if(fprintf(file, "Routine Name: %s\n", name) == 0)    ReturnSystemError;              //04-09-27|0x0119
//***************************************************************************             //04-09-27|0x011a
    for(index=1;  index<*record_far; ++index)                                             //04-09-27|0x011b
      {                                                                                   //04-09-27|0x011c
        addr = record_far + index;                                                        //04-09-27|0x011d
        switch((index & 0x0007))                                                          //04-09-27|0x011e
          {                                                                               //04-09-27|0x011f
//---------------------------------------------------------------------------             //04-09-27|0x0120
            case 0x0001:                                                                  //04-09-27|0x0121
              if(fprintf(file, "      %8d", *addr) == 0)   ReturnSystemError;             //04-09-27|0x0122
              break;                                                                      //04-09-27|0x0123
//---------------------------------------------------------------------------             //04-10-05|0x0124
            case 0x0000:                                                                  //04-10-05|0x0125
              if(fprintf(file,    "%8d\n", *addr) == 0)   ReturnSystemError;              //04-10-05|0x0126
              break;                                                                      //04-10-05|0x0127
//---------------------------------------------------------------------------             //04-09-27|0x0128
            default:                                                                      //04-09-27|0x0129
              if(fprintf(file,      "%8d", *addr)  == 0)   ReturnSystemError;             //04-09-27|0x012a
              break;                                                                      //04-09-27|0x012b
            }                                                                             //04-09-27|0x012c
        }                                                                                 //04-09-27|0x012d
//***************************************************************************             //04-09-27|0x012e
    switch((index & 0x0007))                                                              //04-09-27|0x012f
      {                                                                                   //04-09-27|0x0130
//---------------------------------------------------------------------------             //06-08-23|0x0131
        case 0x0001:                                                                      //06-08-23|0x0132
          break;                                                                          //06-08-23|0x0133
//---------------------------------------------------------------------------             //04-09-27|0x0134
        default:                                                                          //04-09-27|0x0135
          if(fprintf(file,          "\n", *addr)  == 0)   ReturnSystemError;              //04-09-27|0x0136
          break;                                                                          //04-09-27|0x0137
                                                                                          //04-09-27|0x0138
        }                                                                                 //04-09-27|0x0139
//***************************************************************************             //04-09-27|0x013a
    if(fclose(file))                                       ReturnSystemError;             //04-09-27|0x013b
    return(Success);                                                                      //04-09-27|0x013c
}                                                                                         //04-09-27|0x013d
//                                                                                        //05-24-97|0x013d
//***************************************************************************             //04-08-23|0x0140
//***************************************************************************             //04-08-23|0x0141
//******                                                               ******             //04-08-23|0x0142
//******                          finish                               ******             //04-08-23|0x0143
//******                                                               ******             //04-08-23|0x0144
//***************************************************************************             //04-08-23|0x0145
//***************************************************************************             //04-08-23|0x0146
//*******************************************************************************         //10-29-97|0x0147
//*******************************************************************************         //10-29-97|0x0147
// finish                                                                                 //07-10-29|0x0147
//*******************************************************************************         //10-29-97|0x0147
//*******************************************************************************         //10-29-97|0x0147
UINT PRECDIAG::finish(                                                                    //07-10-29|0x0147
    SCHAR_FAR Message                                                                     //07-10-29|0x0147
    ) {                                                                                   //07-10-29|0x0147
//*******************************************************************************         //10-29-97|0x0147
//***************************************************************************             //04-08-23|0x0149
//***************************************************************************             //04-08-23|0x014a
    SCHAR  message[85];                                                              //07-10-29|0x014b
//***************************************************************************             //04-08-23|0x014c
//***************************************************************************             //04-08-23|0x014d
    MemSet(message,           0x00, 85);                                                  //07-10-29|0x014e
    MemCCpy(message, Message, 0x00, 78);                                                  //07-10-29|0x014f
//***************************************************************************             //04-08-23|0x0150
    switch(GuiTestEmpty())                                                                //07-03-23|0x0151
      {                                                                                   //07-03-23|0x0152
        case Yes: if(GuiWriteLine(message)  == Success)                break;             //07-03-23|0x0153
                  ReturnSystemError;                                                      //07-03-23|0x0154
        case No:  if(GuiAppendLine(message) == Success)                break;             //07-10-29|0x0155
                  ReturnSystemError;                                                      //07-10-29|0x0156
        default:  ReturnSystemError;                                                      //07-03-23|0x0157
        }                                                                                 //07-03-23|0x0158
    return(UserError);                                                                    //05-08-97|0x0159
}                                                                                         //05-08-97|0x015a
//                                                                                        //05-24-97|0x015a
//***************************************************************************             //08-02-11|0x015d
//***************************************************************************             //08-02-11|0x015e
//******                                                               ******             //08-02-11|0x015f
//******                       intervention_menu                       ******             //08-02-11|0x0160
//******                                                               ******             //08-02-11|0x0161
//***************************************************************************             //08-02-11|0x0162
//***************************************************************************             //08-02-11|0x0163
//*******************************************************************************         //10-29-97|0x0166
//*******************************************************************************         //10-29-97|0x0166
// intervention_menu                                                                      //08-02-11|0x0166
//*******************************************************************************         //10-29-97|0x0166
//*******************************************************************************         //10-29-97|0x0166
UINT PRECDIAG::intervention_menu(void) {                                                  //08-02-11|0x0166
//*******************************************************************************         //10-29-97|0x0166
//***************************************************************************             //08-02-11|0x016a
//***************************************************************************             //08-02-11|0x016b
  SCHAR keystroke[17];                                                               //08-02-11|0x016c
//***************************************************************************             //08-02-11|0x016d
loop:                                                                                     //08-02-11|0x016e
    printf("\nIntervention Required\n");                                                  //08-02-11|0x016f
    puts("X-Stop, T-Try Again:  Depress Key Followed by Enter");                          //08-02-11|0x0170
    MemSet(&keystroke[0], 0, 16);                                                         //08-02-11|0x0171
    fgets(&keystroke[0], 16, stdin);                                                      //08-02-11|0x0172
    switch(keystroke[0])                                                                  //08-02-11|0x0173
      {                                                                                   //08-02-11|0x0174
        case 'T':                                                 break;                  //08-02-11|0x0175
        case 'X':                                       ReturnSystemError;                //08-02-11|0x0176
        default:                                                  goto loop;              //08-02-11|0x0177
        }                                                                                 //08-02-11|0x0178
    printf("\n");                                                                         //08-02-11|0x0179
//***************************************************************************             //08-02-11|0x017a
    return(Success);                                                                      //08-02-11|0x017b
}                                                                                         //08-02-11|0x017c
//                                                                                        //05-24-97|0x017c
//***************************************************************************             //07-02-19|0x017f
//***************************************************************************             //07-02-19|0x0180
//******                                                               ******             //07-02-19|0x0181
//******                       checkout_pause                          ******             //07-02-19|0x0182
//******                                                               ******             //07-02-19|0x0183
//***************************************************************************             //07-02-19|0x0184
//***************************************************************************             //07-02-19|0x0185
//*******************************************************************************         //10-29-97|0x0189
//*******************************************************************************         //10-29-97|0x0189
// checkout_menu                                                                          //07-02-19|0x0189
//*******************************************************************************         //10-29-97|0x0189
//*******************************************************************************         //10-29-97|0x0189
UINT PRECDIAG::checkout_menu(                                                             //07-02-19|0x0189
    SCHAR_FAR Name                                                                        //07-02-19|0x0189
    ) {                                                                                   //07-02-19|0x0189
//*******************************************************************************         //10-29-97|0x0189
//***************************************************************************             //07-02-19|0x018d
//***************************************************************************             //07-02-19|0x018e
  SCHAR keystroke[17];                                                               //07-02-19|0x018f
//***************************************************************************             //07-02-19|0x0190
loop:                                                                                     //07-02-19|0x0191
    printf("\nDebug Required: %s\n", Name);                                               //07-02-19|0x0192
    puts("X-Stop, C-Continue:  Depress Key Followed by Enter");                           //07-02-19|0x0193
    MemSet(&keystroke[0], 0, 16);                                                         //07-02-19|0x0194
    fgets(&keystroke[0], 16, stdin);                                                      //07-02-19|0x0195
    switch(keystroke[0])                                                                  //07-02-19|0x0196
      {                                                                                   //07-02-19|0x0197
        case 'C':                                                 break;                  //07-02-19|0x0198
        case 'X':                                       ReturnSystemError;                //07-02-19|0x0199
        default:                        goto loop;                                        //07-02-19|0x019a
        }                                                                                 //07-02-19|0x019b
    printf("\n");                                                                         //07-02-19|0x019c
//***************************************************************************             //07-02-19|0x019d
    return(Success);                                                                      //07-02-19|0x019e
}                                                                                         //07-02-19|0x019f
//                                                                                        //05-24-97|0x019f
//***************************************************************************             //check   |0x01a2
//***************************************************************************             //check   |0x01a3
//******                                                               ******             //check   |0x01a4
//******                       trunc_sint_int                          ******             //check   |0x01a5
//******                                                               ******             //check   |0x01a6
//***************************************************************************             //check   |0x01a7
//***************************************************************************             //check   |0x01a8
//*******************************************************************************         //10-29-97|0x01ac
//*******************************************************************************         //10-29-97|0x01ac
// trunc_sint_int                                                                         //check   |0x01ac
//*******************************************************************************         //10-29-97|0x01ac
//*******************************************************************************         //10-29-97|0x01ac
UINT PRECDIAG::trunc_sint_int(                                                            //check   |0x01ac
    SINT_FAR OutFar,                                                                      //check   |0x01ac
    SWORD In                                                                              //check   |0x01ac
    ) {                                                                                   //check   |0x01ac
//*******************************************************************************         //10-29-97|0x01ac
//***************************************************************************             //check   |0x01b0
//***************************************************************************             //check   |0x01b1
  WORDS work;                                                                        //check   |0x01b2
//***************************************************************************             //check   |0x01b3
    work.sword     = In;                                                                  //check   |0x01b4
    work.ulong    += 0x80000000;                                                          //check   |0x01b5
    if(work.ulong <= 0x8000)                               ReturnSystemError;             //check   |0x01b6
    if(work.ulong >= 0x80008000)                           ReturnSystemError;             //check   |0x01b7
    work.ulong    -= 0x80000000;                                                          //check   |0x01b8
    *OutFar        = work.sint0;                                                          //check   |0x01b9
//***************************************************************************             //check   |0x01ba
    return(Success);                                                                      //check   |0x01bb
}                                                                                         //check   |0x01bc
//                                                                                        //05-24-97|0x01bc
//***************************************************************************             //check   |0x01bf
//***************************************************************************             //check   |0x01c0
//******                                                               ******             //check   |0x01c1
//******                       trunc_string_size                       ******             //check   |0x01c2
//******                                                               ******             //check   |0x01c3
//***************************************************************************             //check   |0x01c4
//***************************************************************************             //check   |0x01c5
//*******************************************************************************         //10-29-97|0x01c9
//*******************************************************************************         //10-29-97|0x01c9
// trunc_string_size                                                                      //check   |0x01c9
//*******************************************************************************         //10-29-97|0x01c9
//*******************************************************************************         //10-29-97|0x01c9
UINT PRECDIAG::trunc_string_size(                                                         //check   |0x01c9
    SINT_FAR SizeFar,                                                                     //check   |0x01c9
    SCHAR_FAR InFar                                                                       //check   |0x01c9
    ) {                                                                                   //check   |0x01c9
//*******************************************************************************         //10-29-97|0x01c9
//***************************************************************************             //check   |0x01cd
//***************************************************************************             //check   |0x01ce
  SWORD work;                                                                        //check   |0x01cf
//***************************************************************************             //check   |0x01d0
//***************************************************************************             //check   |0x01d1
    work    =   StrLen(InFar);                                                            //check   |0x01d2
    if(TruncSintInt(SizeFar, work) != Success)             ReturnSystemError;             //check   |0x01d3
    return(Success);                                                                      //check   |0x01d4
}                                                                                         //check   |0x01d5
//                                                                                        //05-24-97|0x01d5
//*******************************************************************************         //05-24-97|0x01d9
//*******************************************************************************         //05-24-97|0x01d9
//****                       END OF FILE                                     ****         //05-24-97|0x01d9
//*******************************************************************************         //05-24-97|0x01d9
//*******************************************************************************         //05-24-97|0x01d9
