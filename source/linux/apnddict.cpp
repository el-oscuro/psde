//*****************************************************************************           //06-07-12|0x000b
//*****************************************************************************           //06-07-12|0x000b
//                                                                                        //06-07-12|0x000b
// APPEND DICTIONARY MANAGER                                                              //06-07-12|0x000b
//                                                                                        //06-07-12|0x000b
//*****************************************************************************           //06-07-12|0x000b
//*****************************************************************************           //06-07-12|0x000b
//  Copyright: 2006 Robert H. Adams                                                       //06-07-12|0x000b
//*****************************************************************************           //06-07-12|0x000b
//  The purpose of this program as well as instructions regarding its use is              //06-07-12|0x000b
//  defined in the associated manual.                                                     //06-07-12|0x000b
//*****************************************************************************           //06-07-12|0x000b
//  This program is free software; you can redistribute it and/or modify                  //06-07-12|0x000b
//  it under the terms of the GNU General Public License as published by                  //06-07-12|0x000b
//  the Free Software Foundation; either version 2 of the License, or                     //06-07-12|0x000b
//  (at your option) any later version.                                                   //06-07-12|0x000b
//                                                                                        //06-07-12|0x000b
//  This program is distributed in the hope that it will be useful,                       //06-07-12|0x000b
//  but WITHOUT ANY WARRANTY; without even the implied warranty of                        //06-07-12|0x000b
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                         //06-07-12|0x000b
//  GNU General Public License for more details.                                          //06-07-12|0x000b
//                                                                                        //06-07-12|0x000b
//  You should have received a copy of the GNU General Public License                     //06-07-12|0x000b
//  along with this program; if not, write to the Free Software                           //06-07-12|0x000b
//  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA., 02110-1301            //06-07-12|0x000b
//  USA                                                                                   //06-07-12|0x000b
//*****************************************************************************           //06-07-12|0x000b
//  For further information, please contact Robert Adams:                                 //06-07-12|0x000b
//     EMail:    robert.adams@whatifwe.com                                                //06-07-12|0x000b
//     Mail:     PO Box 156, Sun Valley, Ca. 91353-0155, USA                              //06-07-12|0x000b
//  Or visit the website, "www.whatifwe.com".                                             //06-07-12|0x000b
//*****************************************************************************           //06-07-12|0x000b
//*****************************************************************************           //06-07-12|0x000b
#ifdef WIN31_SYSTEM                                                                       //05-24-97|0x000c
#include "precwn31.h"                                                                     //05-24-97|0x000c
#endif                                                                                    //05-24-97|0x000c
#ifdef WIN95_SYSTEM                                                                       //05-24-97|0x000c
#include "precwn95.h"                                                                     //05-24-97|0x000c
#endif                                                                                    //05-24-97|0x000c
#ifdef MSDOS_SYSTEM                                                                       //05-24-97|0x000c
#include "precdos.h"                                                                      //05-24-97|0x000c
#endif                                                                                    //05-24-97|0x000c
#include "prechost.h"                                                                     //05-24-97|0x000c
#include "apnddict.h"                                                                     //06-07-12|0x000c
#include "apnddict.hxx"                                                                   //06-07-12|0x000c
#include "apnddict.hpp"                                                                   //06-07-12|0x000c
#define StrCmp(i,j) ((strcmp(i,j) == 0) ? 0 : 1)                                          //06-07-12|0x0017
#define StrLen(i) strlen(i)                                                               //06-07-12|0x0017
#define StrCat(i,j) strcat(i,j)                                                           //06-07-12|0x0017
#define StrCpy(i,j) strcpy(i,j)                                                           //06-07-12|0x0017
#define StrChr(i,j) strchr(i,j)                                                           //06-07-12|0x0017
#define StrRChr(i,j) strrchr(i,j)                                                         //06-07-12|0x0017
#define StrToByteInt(i,j) GetInteger(i,&j,0xff)                                           //06-07-12|0x0017
#define StrToInt(i,j) GetInteger(i,&j,0xffff)                                             //06-07-12|0x0017
#define StrToLongInt(i,j) GetInteger(i,&j,0xffffffffL)                                    //06-07-12|0x0017
#define StrToByteHex(i,j) GetHex(i,&j,1)                                                  //06-07-12|0x0017
#define StrToHex(i,j) GetHex(i,&j,2)                                                      //06-07-12|0x0017
#define StrToLongHex(i,j) GetHex(i,&j,4)                                                  //06-07-12|0x0017
#define FindName(i) strrchr(i, '/')                                                       //06-07-12|0x0017
#define Allocate(k) (k##_FAR) calloc(1,sizeof(k))                                         //06-07-12|0x0018
#define Free(k) free(k)                                                                   //06-07-12|0x0018
#define MemSet(i,j,k) memset(i,j,k)                                                       //06-07-12|0x0018
#define MemCCpy(i,j,k,l) Mem_C_Copy((UCHAR_FAR) i, (UCHAR_FAR) j,k,l)                     //06-07-12|0x0018
#define MemCpy(i,j,k) memcpy(i,j,k)                                                       //06-07-12|0x0018
#define LineEnd 0x0d                                                                      //06-07-12|0x0018
APPENDDICT append_dict;                                                                   //06-07-12|0x003e
static UINT test_samples[TestIndex];                                                      //06-07-12|0x004e
//***************************************************************************             //06-07-12|0x0055
//***************************************************************************             //06-07-12|0x0056
//******                                                               ******             //06-07-12|0x0057
//******                       appnd_dict_allocate                     ******             //06-07-12|0x0058
//******                                                               ******             //06-07-12|0x0059
//***************************************************************************             //06-07-12|0x005a
//***************************************************************************             //06-07-12|0x005b
//*******************************************************************************         //10-29-97|0x0062
//*******************************************************************************         //10-29-97|0x0062
// apnd_dict_allocate                                                                     //06-07-12|0x0062
//*******************************************************************************         //10-29-97|0x0062
//*******************************************************************************         //10-29-97|0x0062
UINT APPENDDICT::apnd_dict_allocate(void) {                                               //06-07-12|0x0062
//*******************************************************************************         //10-29-97|0x0062
//***************************************************************************             //06-07-12|0x0066
//***************************************************************************             //06-07-12|0x0067
    TestSample(apnd_dict_allocate_1);                                                     //06-07-12|0x0068
    if(dict_append_addr                           != 0)     ReturnSystemError             //06-07-12|0x0069
    if((dict_append_addr = Allocate(DICT_APPEND)) == 0)     ReturnSystemError             //06-07-12|0x006a
//***************************************************************************             //06-07-12|0x006b
    return(Success);                                                                      //06-07-12|0x006c
}                                                                                         //06-07-12|0x006d
//                                                                                        //05-24-97|0x006d
//***************************************************************************             //06-07-12|0x0070
//***************************************************************************             //06-07-12|0x0071
//******                                                               ******             //06-07-12|0x0072
//******                         apnd_dict_free                        ******             //06-07-12|0x0073
//******                                                               ******             //06-07-12|0x0074
//***************************************************************************             //06-07-12|0x0075
//***************************************************************************             //06-07-12|0x0076
//*******************************************************************************         //10-29-97|0x007a
//*******************************************************************************         //10-29-97|0x007a
// apnd_dict_free                                                                         //06-07-12|0x007a
//*******************************************************************************         //10-29-97|0x007a
//*******************************************************************************         //10-29-97|0x007a
UINT APPENDDICT::apnd_dict_free(void) {                                                   //06-07-12|0x007a
//*******************************************************************************         //10-29-97|0x007a
//***************************************************************************             //06-07-12|0x007e
//***************************************************************************             //06-07-12|0x007f
    TestSample(apnd_dict_free_1);                                                         //06-07-12|0x0080
    if(dict_append_addr               == 0)                 ReturnSystemError             //06-07-12|0x0081
    Free(dict_append_addr);                                                               //06-07-12|0x0082
    dict_append_addr = 0;                                                                 //06-07-12|0x0083
//***************************************************************************             //06-07-12|0x0084
    return(Success);                                                                      //06-07-12|0x0085
}                                                                                         //06-07-12|0x0086
//                                                                                        //05-24-97|0x0086
//***************************************************************************             //06-09-06|0x0089
//***************************************************************************             //06-09-06|0x008a
//******                                                               ******             //06-09-06|0x008b
//******               apnd_dict_name(Name, Extent)                    ******             //06-09-06|0x008c
//******                                                               ******             //06-09-06|0x008d
//***************************************************************************             //06-09-06|0x008e
//***************************************************************************             //06-09-06|0x008f
//*******************************************************************************         //10-29-97|0x0094
//*******************************************************************************         //10-29-97|0x0094
// apnd_dict_name                                                                         //06-09-06|0x0094
//*******************************************************************************         //10-29-97|0x0094
//*******************************************************************************         //10-29-97|0x0094
UINT APPENDDICT::apnd_dict_name(                                                          //06-09-06|0x0094
    SCHAR_FAR Name,                                                                       //06-09-06|0x0094
    SCHAR_FAR Extent                                                                      //06-09-06|0x0094
    ) {                                                                                   //06-09-06|0x0094
//*******************************************************************************         //10-29-97|0x0094
//***************************************************************************             //06-09-06|0x0098
//***************************************************************************             //06-09-06|0x0099
    if(dict_append_addr               == 0)                 ReturnSystemError             //06-09-06|0x009a
    switch(BaseDictInitial(ApndDictAddr, Name, Extent))          _SwitchGroup             //06-09-06|0x009b
//***************************************************************************             //06-09-06|0x009c
    return_test(apnd_dict_name_1);                                                        //06-09-06|0x009d
}                                                                                         //06-09-06|0x009e
//                                                                                        //05-24-97|0x009e
//***************************************************************************             //06-09-06|0x00a1
//***************************************************************************             //06-09-06|0x00a2
//******                                                               ******             //06-09-06|0x00a3
//******               apnd_dict_exists(TimeAddr)                      ******             //06-09-06|0x00a4
//******                                                               ******             //06-09-06|0x00a5
//***************************************************************************             //06-09-06|0x00a6
//***************************************************************************             //06-09-06|0x00a7
//*******************************************************************************         //10-29-97|0x00ad
//*******************************************************************************         //10-29-97|0x00ad
// apnd_dict_exists                                                                       //06-09-06|0x00ad
//*******************************************************************************         //10-29-97|0x00ad
//*******************************************************************************         //10-29-97|0x00ad
UINT APPENDDICT::apnd_dict_exists(                                                        //06-09-06|0x00ad
    ULONG_FAR TimeFar                                                                     //06-09-06|0x00ad
    ) {                                                                                   //06-09-06|0x00ad
//*******************************************************************************         //10-29-97|0x00ad
//***************************************************************************             //06-09-06|0x00b1
//***************************************************************************             //06-09-06|0x00b2
    if(dict_append_addr               == 0)                 ReturnSystemError             //06-09-06|0x00b3
    switch(BaseDictExists(ApndDictAddr, TimeFar))                _SwitchGroup             //06-09-06|0x00b4
//***************************************************************************             //06-09-06|0x00b5
    return_test(apnd_dict_exists_1);                                                      //06-09-06|0x00b6
}                                                                                         //06-09-06|0x00b7
//                                                                                        //05-24-97|0x00b7
//***************************************************************************             //11-02-26|0x00ba
//***************************************************************************             //11-02-26|0x00bb
//******                                                               ******             //11-02-26|0x00bc
//******               appnd_dict_get_cert(String)                     ******             //11-02-26|0x00bd
//******                                                               ******             //11-02-26|0x00be
//***************************************************************************             //11-02-26|0x00bf
//***************************************************************************             //11-02-26|0x00c0
//*******************************************************************************         //10-29-97|0x00c5
//*******************************************************************************         //10-29-97|0x00c5
// append_dict_get_cert                                                                   //11-02-26|0x00c5
//*******************************************************************************         //10-29-97|0x00c5
//*******************************************************************************         //10-29-97|0x00c5
UINT APPENDDICT::append_dict_get_cert(                                                    //11-02-26|0x00c5
    STRING_DATA_FAR Addr                                                                  //11-02-26|0x00c5
    ) {                                                                                   //11-02-26|0x00c5
//*******************************************************************************         //10-29-97|0x00c5
//***************************************************************************             //11-02-26|0x00c9
//***************************************************************************             //11-02-26|0x00ca
    if(dict_append_addr      == 0)                          ReturnSystemError             //11-02-26|0x00cb
//***************************************************************************             //11-02-26|0x00cc
//***************************************************************************             //11-02-26|0x00cd
    switch(BaseDictGetCert(ApndDictAddr, Addr))                  _SwitchGroup             //11-02-26|0x00ce
//***************************************************************************             //11-02-26|0x00cf
    return_test(append_dict_get_cert_1);                                                  //11-02-26|0x00d0
}                                                                                         //11-02-26|0x00d1
//                                                                                        //05-24-97|0x00d1
//***************************************************************************             //06-09-06|0x00d4
//***************************************************************************             //06-09-06|0x00d5
//******                                                               ******             //06-09-06|0x00d6
//******               apnd_dict(BridgeName)                           ******             //06-09-06|0x00d7
//******                                                               ******             //06-09-06|0x00d8
//***************************************************************************             //06-09-06|0x00d9
//***************************************************************************             //06-09-06|0x00da
//*******************************************************************************         //10-29-97|0x00df
//*******************************************************************************         //10-29-97|0x00df
// apnd_dict                                                                              //07-04-27|0x00df
//*******************************************************************************         //10-29-97|0x00df
//*******************************************************************************         //10-29-97|0x00df
UINT APPENDDICT::apnd_dict(void) {                                                        //07-04-27|0x00df
//*******************************************************************************         //10-29-97|0x00df
//***************************************************************************             //06-09-06|0x00e3
//***************************************************************************             //06-09-06|0x00e4
    if(dict_append_addr               == 0)                 ReturnSystemError             //06-09-06|0x00e5
    switch(BaseDictReadHash(ApndDictAddr))                       _SwitchGroup             //06-09-06|0x00e6
    switch(MacDictAppend())                                      _SwitchGroup             //06-09-06|0x00e7
//***************************************************************************             //06-09-06|0x00e8
    switch(BaseDictReadHeader(ApndDictAddr, ApndHashAddr))       _SwitchGroup             //06-09-06|0x00e9
    switch(MacDictConnectHeader(ApndHashAddr, FileLength))       _SwitchGroup             //07-01-23|0x00ea
//***************************************************************************             //06-09-06|0x00eb
loop:                                                                                     //06-09-06|0x00ec
    switch(BaseDictReadRecord(ApndDictAddr, ApndRecordAddr))                              //06-09-06|0x00ed
      {                                                                                   //06-09-06|0x00ee
        case No: switch(MacDictWriteRecord(ApndRecordAddr))  _SwitchGotoLoop;             //06-09-06|0x00ef
        case Yes:                                                      break;             //06-09-06|0x00f0
        default:                                            ReturnSystemError             //06-09-06|0x00f1
        };                                                                                //06-09-06|0x00f2
//***************************************************************************             //06-09-06|0x00f3
    switch(BaseDictClose(ApndDictAddr))                          _SwitchGroup             //06-09-06|0x00f4
    switch(MacDictClose())                                       _SwitchGroup             //06-09-06|0x00f5
//***************************************************************************             //06-09-06|0x00f6
    return_test(apnd_dict_1);                                                             //06-09-06|0x00f7
}                                                                                         //06-09-06|0x00f8
//                                                                                        //05-24-97|0x00f8
//***************************************************************************             //06-07-14|0x00fb
//***************************************************************************             //06-07-14|0x00fc
//******                                                               ******             //06-07-14|0x00fd
//******                       TEST WRAPPERS                           ******             //06-07-14|0x00fe
//******                                                               ******             //06-07-14|0x00ff
//***************************************************************************             //06-07-14|0x0100
//***************************************************************************             //06-07-14|0x0101
//*******************************************************************************         //10-29-97|0x0102
//*******************************************************************************         //10-29-97|0x0102
// apnd_dict_test_reset                                                                   //06-07-14|0x0102
//*******************************************************************************         //10-29-97|0x0102
//*******************************************************************************         //10-29-97|0x0102
UINT APPENDDICT::apnd_dict_test_reset(void) {                                             //06-07-14|0x0102
//*******************************************************************************         //10-29-97|0x0102
//************************************************************************                //06-07-14|0x0102
    switch(BasicTestReset())                                                              //06-07-14|0x0102
      {                                                                                   //06-07-14|0x0102
        case Success:                                     return(Success);                //06-07-14|0x0102
        default:                                        ReturnSystemError;                //06-07-14|0x0102
        }                                                                                 //06-07-14|0x0102
}                                                                                         //06-07-14|0x0102
//                                                                                        //05-24-97|0x0102
//***************************************************************************             //06-07-14|0x0103
//*******************************************************************************         //10-29-97|0x0104
//*******************************************************************************         //10-29-97|0x0104
// apnd_dict_test_read                                                                    //06-07-14|0x0104
//*******************************************************************************         //10-29-97|0x0104
//*******************************************************************************         //10-29-97|0x0104
UINT APPENDDICT::apnd_dict_test_read(void) {                                              //06-07-14|0x0104
//*******************************************************************************         //10-29-97|0x0104
//************************************************************************                //06-07-14|0x0104
    switch(BasicTestRead(&test_samples[0], test_samples[0]))                              //06-07-14|0x0104
      {                                                                                   //06-07-14|0x0104
        case Success:                                     return(Success);                //06-07-14|0x0104
        default:                                        ReturnSystemError;                //06-07-14|0x0104
        }                                                                                 //06-07-14|0x0104
}                                                                                         //06-07-14|0x0104
//                                                                                        //05-24-97|0x0104
//***************************************************************************             //06-07-14|0x0105
//*******************************************************************************         //10-29-97|0x0106
//*******************************************************************************         //10-29-97|0x0106
// apnd_dict_test_write                                                                   //06-07-14|0x0106
//*******************************************************************************         //10-29-97|0x0106
//*******************************************************************************         //10-29-97|0x0106
UINT APPENDDICT::apnd_dict_test_write(void) {                                             //06-07-14|0x0106
//*******************************************************************************         //10-29-97|0x0106
//************************************************************************                //06-07-14|0x0106
    switch(BasicTestWrite(&test_samples[0]))                                              //06-07-14|0x0106
      {                                                                                   //06-07-14|0x0106
        case Success:                                     return(Success);                //06-07-14|0x0106
        default:                                        ReturnSystemError;                //06-07-14|0x0106
        }                                                                                 //06-07-14|0x0106
}                                                                                         //06-07-14|0x0106
//                                                                                        //05-24-97|0x0106
//***************************************************************************             //06-07-14|0x0107
//*******************************************************************************         //10-29-97|0x0108
//*******************************************************************************         //10-29-97|0x0108
// apnd_dict_test_report                                                                  //06-07-14|0x0108
//*******************************************************************************         //10-29-97|0x0108
//*******************************************************************************         //10-29-97|0x0108
UINT APPENDDICT::apnd_dict_test_report(void) {                                            //06-07-14|0x0108
//*******************************************************************************         //10-29-97|0x0108
//************************************************************************                //06-07-14|0x0108
    switch(BasicTestReport(&test_samples[0], "APNDDICT"))                                 //06-07-14|0x0108
      {                                                                                   //06-07-14|0x0108
        case Success:                                     return(Success);                //06-07-14|0x0108
        default:                                        ReturnSystemError;                //06-07-14|0x0108
        }                                                                                 //06-07-14|0x0108
}                                                                                         //06-07-14|0x0108
//                                                                                        //05-24-97|0x0108
//***************************************************************************             //06-07-12|0x010b
//***************************************************************************             //06-07-12|0x010c
//******                                                               ******             //06-07-12|0x010d
//******                        constructor                            ******             //06-07-12|0x010e
//******                                                               ******             //06-07-12|0x010f
//***************************************************************************             //06-07-12|0x0110
//***************************************************************************             //06-07-12|0x0111
//*******************************************************************************         //10-29-97|0x0112
//*******************************************************************************         //10-29-97|0x0112
// CONSTRUCTOR                                                                            //06-07-12|0x0112
//*******************************************************************************         //10-29-97|0x0112
//*******************************************************************************         //10-29-97|0x0112
APPENDDICT::APPENDDICT() {                                                                //06-07-12|0x0112
//***************************************************************************             //06-07-12|0x0113
//***************************************************************************             //06-07-12|0x0114
    { ULONG i;                                                                            //06-07-12|0x0115
      test_samples[NoTestSamples] = TestIndex;                                            //06-07-12|0x0115
      i = 1;                                                                              //06-07-12|0x0115
      while(i<TestIndex)                                                                  //06-07-12|0x0115
        {                                                                                 //06-07-12|0x0115
          test_samples[i] = 0;                                                            //06-07-12|0x0115
          ++i;                                                                            //06-07-12|0x0115
          }                                                                               //06-07-12|0x0115
      }                                                                                   //06-07-12|0x0115
//***************************************************************************             //06-07-12|0x0116
    dict_append_addr = 0;                                                                 //06-07-12|0x0117
}                                                                                         //06-07-12|0x0118
//                                                                                        //05-24-97|0x0118
//*******************************************************************************         //05-24-97|0x011c
//*******************************************************************************         //05-24-97|0x011c
//****                       END OF FILE                                     ****         //05-24-97|0x011c
//*******************************************************************************         //05-24-97|0x011c
//*******************************************************************************         //05-24-97|0x011c
