//*****************************************************************************           //05-14-97|0x001c
//*****************************************************************************           //05-14-97|0x001c
//                                                                                        //05-14-97|0x001c
// PRECEDENCE ANALYSIS STACK                                                              //05-14-97|0x001c
//                                                                                        //05-14-97|0x001c
//*****************************************************************************           //05-14-97|0x001c
//*****************************************************************************           //05-14-97|0x001c
//  Copyright: 2006 Robert H. Adams                                                       //05-14-97|0x001c
//*****************************************************************************           //05-14-97|0x001c
//  The purpose of this program as well as instructions regarding its use is              //05-14-97|0x001c
//  defined in the associated manual.                                                     //05-14-97|0x001c
//*****************************************************************************           //05-14-97|0x001c
//  This program is free software; you can redistribute it and/or modify                  //05-14-97|0x001c
//  it under the terms of the GNU General Public License as published by                  //05-14-97|0x001c
//  the Free Software Foundation; either version 2 of the License, or                     //05-14-97|0x001c
//  (at your option) any later version.                                                   //05-14-97|0x001c
//                                                                                        //05-14-97|0x001c
//  This program is distributed in the hope that it will be useful,                       //05-14-97|0x001c
//  but WITHOUT ANY WARRANTY; without even the implied warranty of                        //05-14-97|0x001c
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                         //05-14-97|0x001c
//  GNU General Public License for more details.                                          //05-14-97|0x001c
//                                                                                        //05-14-97|0x001c
//  You should have received a copy of the GNU General Public License                     //05-14-97|0x001c
//  along with this program; if not, write to the Free Software                           //05-14-97|0x001c
//  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA., 02110-1301            //05-14-97|0x001c
//  USA                                                                                   //05-14-97|0x001c
//*****************************************************************************           //05-14-97|0x001c
//  For further information, please contact Robert Adams:                                 //05-14-97|0x001c
//     EMail:    robert.adams@whatifwe.com                                                //05-14-97|0x001c
//     Mail:     PO Box 156, Sun Valley, Ca. 91353-0155, USA                              //05-14-97|0x001c
//  Or visit the website, "www.whatifwe.com".                                             //05-14-97|0x001c
//*****************************************************************************           //05-14-97|0x001c
//*****************************************************************************           //05-14-97|0x001c
#ifdef WIN31_SYSTEM                                                                       //05-24-97|0x001e
#include "precwn31.h"                                                                     //05-24-97|0x001e
#endif                                                                                    //05-24-97|0x001e
#ifdef WIN95_SYSTEM                                                                       //05-24-97|0x001e
#include "precwn95.h"                                                                     //05-24-97|0x001e
#endif                                                                                    //05-24-97|0x001e
#ifdef MSDOS_SYSTEM                                                                       //05-24-97|0x001e
#include "precdos.h"                                                                      //05-24-97|0x001e
#endif                                                                                    //05-24-97|0x001e
#include "prechost.h"                                                                     //05-24-97|0x001e
#include "precstck.h"                                                                     //05-14-97|0x001e
#include "precstck.hxx"                                                                   //05-14-97|0x001e
#include "precstck.hpp"                                                                   //05-14-97|0x001e
#include "precutil.h"                                                                     //11-05-30|0x001f
#include "precdiag.h"                                                                     //06-07-12|0x0020
#include "srcedict.h"                                                                     //07-02-25|0x0021
#define Allocate(k) (k##_FAR) calloc(1,sizeof(k))                                         //04-09-06|0x0029
#define Free(k) free(k)                                                                   //04-09-06|0x0029
#define MemSet(i,j,k) memset(i,j,k)                                                       //04-09-06|0x0029
#define MemCCpy(i,j,k,l) Mem_C_Copy((UCHAR_FAR) i, (UCHAR_FAR) j,k,l)                     //04-09-06|0x0029
#define MemCpy(i,j,k) memcpy(i,j,k)                                                       //04-09-06|0x0029
#define LineEnd 0x0d                                                                      //04-09-06|0x0029
#define StrLen(i) strlen(i)                                                               //06-07-12|0x002a
#define StrCat(i,j) strcat(i,j)                                                           //06-07-12|0x002a
#define StrCpy(i,j) strcpy(i,j)                                                           //06-07-12|0x002a
#define StrCmp(i,j) Str_Comp((SCHAR_FAR)i,j,256)                                          //06-07-12|0x002a
#define StrRChr(i,j) strrchr(i,j)                                                         //06-07-12|0x002a
#define StrToByteInt(i,j) GetInteger(i,&j,0xff)                                           //06-07-12|0x002a
#define StrToInt(i,j) GetInteger(i,&j,0xffff)                                             //06-07-12|0x002a
#define StrToLongInt(i,j) GetInteger(i,&j,0xffffffffL)                                    //06-07-12|0x002a
#define StrToByteHex(i,j) GetHex(i,&j,1)                                                  //06-07-12|0x002a
#define StrToHex(i,j) GetHex(i,&j,2)                                                      //06-07-12|0x002a
#define StrToLongHex(i,j) GetHex(i,&j,4)                                                  //06-07-12|0x002a
#define FindName(i) strrchr(i, '/')                                                       //06-07-12|0x002a
PRECSTACK prec_stack;                                                                     //05-14-97|0x0048
#include "global.hxx"                                                                     //06-12-22|0x0049
static UINT test_samples[TestIndex];                                                      //06-07-12|0x0059
//***************************************************************************             //06-07-12|0x0068
//***************************************************************************             //06-07-12|0x0069
//******                                                               ******             //06-07-12|0x006a
//******                        stack_allocate                         ******             //06-07-12|0x006b
//******                                                               ******             //06-07-12|0x006c
//***************************************************************************             //06-07-12|0x006d
//***************************************************************************             //06-07-12|0x006e
//*******************************************************************************         //10-29-97|0x0072
//*******************************************************************************         //10-29-97|0x0072
// stack_allocate                                                                         //06-07-12|0x0072
//*******************************************************************************         //10-29-97|0x0072
//*******************************************************************************         //10-29-97|0x0072
UINT PRECSTACK::stack_allocate(void) {                                                    //06-07-12|0x0072
//*******************************************************************************         //10-29-97|0x0072
//***************************************************************************             //06-07-12|0x0076
//***************************************************************************             //06-07-12|0x0077
    if(stack_addr                     != 0)                 ReturnSystemError             //06-07-12|0x0078
    if((stack_addr = Allocate(STACK)) == 0)                 ReturnSystemError             //06-07-12|0x0079
//***************************************************************************             //07-03-03|0x007a
    MemSet(stack_addr, 0, sizeof(STACK));                                                 //07-03-03|0x007b
  StackState = 4462; // INITIAL_BEGIN                                                     //07-03-03|0x007c
//***************************************************************************             //07-03-03|0x007d
    return_test(stack_allocate_1);                                                        //06-07-12|0x007e
}                                                                                         //06-07-12|0x007f
//                                                                                        //05-24-97|0x007f
//***************************************************************************             //06-07-12|0x0082
//***************************************************************************             //06-07-12|0x0083
//******                                                               ******             //06-07-12|0x0084
//******                          stack_free                           ******             //06-07-12|0x0085
//******                                                               ******             //06-07-12|0x0086
//***************************************************************************             //06-07-12|0x0087
//***************************************************************************             //06-07-12|0x0088
//*******************************************************************************         //10-29-97|0x008c
//*******************************************************************************         //10-29-97|0x008c
// stack_free                                                                             //06-07-12|0x008c
//*******************************************************************************         //10-29-97|0x008c
//*******************************************************************************         //10-29-97|0x008c
UINT PRECSTACK::stack_free(void) {                                                        //06-07-12|0x008c
//*******************************************************************************         //10-29-97|0x008c
//***************************************************************************             //06-07-12|0x0090
//***************************************************************************             //06-07-12|0x0091
    if(stack_addr                     == 0)                 ReturnSystemError             //06-07-12|0x0092
    Free(stack_addr);                                                                     //06-07-12|0x0093
    stack_addr = 0;                                                                       //06-07-12|0x0094
//***************************************************************************             //06-07-12|0x0095
    return_test(stack_free_1);                                                            //06-07-12|0x0096
}                                                                                         //06-07-12|0x0097
//                                                                                        //05-24-97|0x0097
//***************************************************************************             //04-09-06|0x009a
//***************************************************************************             //04-09-06|0x009b
//******                                                               ******             //04-09-06|0x009c
//******                             initial                           ******             //04-09-06|0x009d
//******                                                               ******             //04-09-06|0x009e
//***************************************************************************             //04-09-06|0x009f
//***************************************************************************             //04-09-06|0x00a0
//*******************************************************************************         //10-29-97|0x00a4
//*******************************************************************************         //10-29-97|0x00a4
// initial                                                                                //05-14-97|0x00a4
//*******************************************************************************         //10-29-97|0x00a4
//*******************************************************************************         //10-29-97|0x00a4
UINT PRECSTACK::initial(void) {                                                           //05-14-97|0x00a4
//*******************************************************************************         //10-29-97|0x00a4
//***************************************************************************             //04-09-06|0x00a8
//***************************************************************************             //04-09-06|0x00a9
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-03|0x00aa
//***************************************************************************             //07-03-03|0x00ab
//****                                                                  *****             //07-03-03|0x00ac
//****  INITIALIZATION STATE MACHINE                                    *****             //07-03-03|0x00ad
//****                                                                  *****             //07-03-03|0x00ae
//***************************************************************************             //07-03-03|0x00af
  StackRunFlag = 1;                                                                       //07-03-03|0x00b0
  while(StackRunFlag != 0)                                                                //07-03-03|0x00b0
  {                                                                                       //07-03-03|0x00b0
    switch(StackState)                                                                    //07-03-03|0x00b0
    {                                                                                     //07-03-03|0x00b0
//***************************************************************************             //07-03-03|0x00b1
      case 4462: // INITIAL_BEGIN                                                         //07-03-03|0x00b2
        switch((NameNoTokens) ? No : Yes)                                                 //07-03-03|0x00b2
        {                                                                                 //07-03-03|0x00b2
          case Yes:                                                                       //07-03-03|0x00b2
            StackRunFlag = 1;                                                             //07-03-03|0x00b2
            StackState = 10445; // PREPARE_NAME                                           //07-03-03|0x00b2
            break;                                                                        //07-03-03|0x00b2
          default:                                                                        //07-03-03|0x00b2
            StackStatus = SystemError;                                                    //07-03-03|0x00b2
            StackRunFlag = 0;                                                             //07-03-03|0x00b2
            SystemMsg;                                                                    //07-03-03|0x00b2
            break;                                                                        //07-03-03|0x00b2
        }                                                                                 //07-03-03|0x00b2
        break;                                                                            //07-03-03|0x00b2
//---------------------------------------------------------------------------             //07-03-03|0x00b3
      case 10445: // PREPARE_NAME                                                         //07-03-03|0x00b4
        switch(tab_string(CurrentAddr,"StackGlobal"))                                     //07-03-03|0x00b4
        {                                                                                 //07-03-03|0x00b4
          case Success:                                                                   //07-03-03|0x00b4
            StackRunFlag = 1;                                                             //07-03-03|0x00b4
            StackState = 46620; // NO_TOKENS                                              //07-03-03|0x00b4
            break;                                                                        //07-03-03|0x00b4
          default:                                                                        //07-03-03|0x00b4
            StackStatus = SystemError;                                                    //07-03-03|0x00b4
            StackRunFlag = 0;                                                             //07-03-03|0x00b4
            SystemMsg;                                                                    //07-03-03|0x00b4
            break;                                                                        //07-03-03|0x00b4
        }                                                                                 //07-03-03|0x00b4
        break;                                                                            //07-03-03|0x00b4
//---------------------------------------------------------------------------             //07-03-03|0x00b5
      case 46620: // NO_TOKENS                                                            //07-03-03|0x00b6
        NameNoTokens = 2;                                                                 //07-03-03|0x00b6
        StackState = 6235; // LOAD_NAME_DICT                                              //07-03-03|0x00b6
        break;                                                                            //07-03-03|0x00b6
//---------------------------------------------------------------------------             //07-03-03|0x00b7
      case 6235: // LOAD_NAME_DICT                                                        //07-03-03|0x00b8
        switch(SrceDictAdd(&StackName))                                                   //07-03-03|0x00b8
        {                                                                                 //07-03-03|0x00b8
          case Success:                                                                   //07-03-03|0x00b8
            StackRunFlag = 1;                                                             //07-03-03|0x00b8
            StackState = 40586; // CLEAR_NAME                                             //07-03-03|0x00b8
            break;                                                                        //07-03-03|0x00b8
          default:                                                                        //07-03-03|0x00b8
            StackStatus = SystemError;                                                    //07-03-03|0x00b8
            StackRunFlag = 0;                                                             //07-03-03|0x00b8
            SystemMsg;                                                                    //07-03-03|0x00b8
            break;                                                                        //07-03-03|0x00b8
        }                                                                                 //07-03-03|0x00b8
        break;                                                                            //07-03-03|0x00b8
//---------------------------------------------------------------------------             //07-03-03|0x00b9
      case 40586: // CLEAR_NAME                                                           //07-03-03|0x00ba
        MemSet(&StackName, 0, sizeof(TOKENS));                                            //07-03-03|0x00ba
        StackState = 34729; // EXIT_OK                                                    //07-03-03|0x00ba
        break;                                                                            //07-03-03|0x00ba
//***************************************************************************             //07-03-03|0x00bb
      case 34729: // EXIT_OK                                                              //07-03-03|0x00bc
        StackState = 696; // INITIALIZED                                                  //07-03-03|0x00bc
        StackStatus = Success;                                                            //07-03-03|0x00bc
        StackRunFlag = 0;                                                                 //07-03-03|0x00bc
        break;                                                                            //07-03-03|0x00bc
//***************************************************************************             //07-03-03|0x00bd
      default:                                                                            //07-03-03|0x00be
        StackStatus = SystemError;                                                        //07-03-03|0x00be
        StackRunFlag = 0;                                                                 //07-03-03|0x00be
        SystemMsg;                                                                        //07-03-03|0x00be
        break;                                                                            //07-03-03|0x00be
    }                                                                                     //07-03-03|0x00be
  }                                                                                       //07-03-03|0x00be
//***************************************************************************             //07-03-03|0x00bf
//***************************************************************************             //07-03-03|0x00c0
    TestSample(initial_1);                                                                //06-12-22|0x00c1
    return(StackStatus);                                                                  //06-12-22|0x00c2
}                                                                                         //07-03-03|0x00c3
//                                                                                        //05-24-97|0x00c3
//***************************************************************************             //04-09-06|0x00c6
//***************************************************************************             //04-09-06|0x00c7
//******                                                               ******             //04-09-06|0x00c8
//******                             release                           ******             //04-09-06|0x00c9
//******                                                               ******             //04-09-06|0x00ca
//***************************************************************************             //04-09-06|0x00cb
//***************************************************************************             //04-09-06|0x00cc
//*******************************************************************************         //10-29-97|0x00d0
//*******************************************************************************         //10-29-97|0x00d0
// release                                                                                //05-14-97|0x00d0
//*******************************************************************************         //10-29-97|0x00d0
//*******************************************************************************         //10-29-97|0x00d0
UINT PRECSTACK::release(void) {                                                           //05-14-97|0x00d0
//*******************************************************************************         //10-29-97|0x00d0
//***************************************************************************             //04-09-06|0x00d4
//***************************************************************************             //04-09-06|0x00d5
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-05|0x00d6
//***************************************************************************             //07-03-05|0x00d7
    MemSet(stack_addr, 0, sizeof(STACK));                                                 //07-03-05|0x00d8
  StackState = 4462; // INITIAL_BEGIN                                                     //07-03-05|0x00d9
//***************************************************************************             //07-03-05|0x00da
    return_test(release_1);                                                               //07-03-05|0x00db
}                                                                                         //07-03-05|0x00dc
//                                                                                        //05-24-97|0x00dc
//***************************************************************************             //07-02-26|0x00df
//***************************************************************************             //07-02-26|0x00e0
//******                                                               ******             //07-02-26|0x00e1
//******                             macro_begin                       ******             //07-02-26|0x00e2
//******                                                               ******             //07-02-26|0x00e3
//***************************************************************************             //07-02-26|0x00e4
//***************************************************************************             //07-02-26|0x00e5
//*******************************************************************************         //10-29-97|0x00eb
//*******************************************************************************         //10-29-97|0x00eb
// macro_begin                                                                            //11-05-30|0x00eb
//*******************************************************************************         //10-29-97|0x00eb
//*******************************************************************************         //10-29-97|0x00eb
UINT PRECSTACK::macro_begin(                                                              //11-05-30|0x00eb
    STRING_DATA_FAR Macro_NameAddr,                                                       //11-05-30|0x00eb
    STRING_DATA_FAR Class_NameAddr                                                        //11-05-30|0x00eb
    ) {                                                                                   //11-05-30|0x00eb
//*******************************************************************************         //10-29-97|0x00eb
//***************************************************************************             //07-02-26|0x00ef
//***************************************************************************             //07-02-26|0x00f0
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-03|0x00f1
//***************************************************************************             //07-03-03|0x00f2
//****                                                                  *****             //07-03-03|0x00f3
//****  MACRO BEGIN STATE MACHINE                                       *****             //07-03-03|0x00f4
//****                                                                  *****             //07-03-03|0x00f5
//***************************************************************************             //07-03-03|0x00f6
  StackRunFlag = 1;                                                                       //07-03-03|0x00f7
  while(StackRunFlag != 0)                                                                //07-03-03|0x00f7
  {                                                                                       //07-03-03|0x00f7
    switch(StackState)                                                                    //07-03-03|0x00f7
    {                                                                                     //07-03-03|0x00f7
//***************************************************************************             //07-03-03|0x00f8
//****                                                                  *****             //07-03-03|0x00f9
//****  GET AND PREPARE MACRO NAME                                      *****             //07-03-03|0x00fa
//****                                                                  *****             //07-03-03|0x00fb
//***************************************************************************             //07-03-03|0x00fc
      case 696: // INITIALIZED                                                            //07-03-03|0x00fd
        switch((MacroNoTokens) ? No : Yes)                                                //07-03-03|0x00fd
        {                                                                                 //07-03-03|0x00fd
          case Yes:                                                                       //07-03-03|0x00fd
            StackRunFlag = 1;                                                             //07-03-03|0x00fd
            StackState = 11959; // NAME_OK                                                //07-03-03|0x00fd
            break;                                                                        //07-03-03|0x00fd
          default:                                                                        //07-03-03|0x00fd
            StackStatus = SystemError;                                                    //07-03-03|0x00fd
            StackRunFlag = 0;                                                             //07-03-03|0x00fd
            SystemMsg;                                                                    //07-03-03|0x00fd
            break;                                                                        //07-03-03|0x00fd
        }                                                                                 //07-03-03|0x00fd
        break;                                                                            //07-03-03|0x00fd
//---------------------------------------------------------------------------             //07-03-03|0x00fe
      case 11959: // NAME_OK                                                              //07-03-03|0x00ff
        switch((NameNoTokens) ? No : Yes)                                                 //07-03-03|0x00ff
        {                                                                                 //07-03-03|0x00ff
          case Yes:                                                                       //07-03-03|0x00ff
            StackRunFlag = 1;                                                             //07-03-03|0x00ff
            StackState = 6822; // ELEMENT_OK                                              //07-03-03|0x00ff
            break;                                                                        //07-03-03|0x00ff
          default:                                                                        //07-03-03|0x00ff
            StackStatus = SystemError;                                                    //07-03-03|0x00ff
            StackRunFlag = 0;                                                             //07-03-03|0x00ff
            SystemMsg;                                                                    //07-03-03|0x00ff
            break;                                                                        //07-03-03|0x00ff
        }                                                                                 //07-03-03|0x00ff
        break;                                                                            //07-03-03|0x00ff
//---------------------------------------------------------------------------             //07-03-03|0x0100
      case 6822: // ELEMENT_OK                                                            //07-03-03|0x0101
        switch((ElementNoTokens) ? No : Yes)                                              //07-03-03|0x0101
        {                                                                                 //07-03-03|0x0101
          case Yes:                                                                       //07-03-03|0x0101
            StackRunFlag = 1;                                                             //07-03-03|0x0101
            StackState = 50565; // APPEND_TITLE                                           //07-03-03|0x0101
            break;                                                                        //07-03-03|0x0101
          default:                                                                        //07-03-03|0x0101
            StackStatus = SystemError;                                                    //07-03-03|0x0101
            StackRunFlag = 0;                                                             //07-03-03|0x0101
            SystemMsg;                                                                    //07-03-03|0x0101
            break;                                                                        //07-03-03|0x0101
        }                                                                                 //07-03-03|0x0101
        break;                                                                            //07-03-03|0x0101
//***************************************************************************             //07-05-05|0x0102
      case 50565: // APPEND_TITLE                                                         //07-05-05|0x0103
        switch(tab_string(MacroNameAddr,"StackMacro"))                                    //07-05-05|0x0103
        {                                                                                 //07-05-05|0x0103
          case Success:                                                                   //07-05-05|0x0103
            StackRunFlag = 1;                                                             //07-05-05|0x0103
            StackState = 7764; // APPEND_MACRO                                            //07-05-05|0x0103
            break;                                                                        //07-05-05|0x0103
          default:                                                                        //07-05-05|0x0103
            StackStatus = SystemError;                                                    //07-05-05|0x0103
            StackRunFlag = 0;                                                             //07-05-05|0x0103
            SystemMsg;                                                                    //07-05-05|0x0103
            break;                                                                        //07-05-05|0x0103
        }                                                                                 //07-05-05|0x0103
        break;                                                                            //07-05-05|0x0103
//---------------------------------------------------------------------------             //07-05-05|0x0104
      case 7764: // APPEND_MACRO                                                          //07-05-05|0x0105
        switch(tab_data(MacroNameAddr,Macro_NameAddr))                                    //07-05-05|0x0105
        {                                                                                 //07-05-05|0x0105
          case Success:                                                                   //07-05-05|0x0105
            StackRunFlag = 1;                                                             //07-05-05|0x0105
            StackState = 1043; // APPEND_CLASS                                            //07-05-05|0x0105
            break;                                                                        //07-05-05|0x0105
          default:                                                                        //07-05-05|0x0105
            StackStatus = SystemError;                                                    //07-05-05|0x0105
            StackRunFlag = 0;                                                             //07-05-05|0x0105
            SystemMsg;                                                                    //07-05-05|0x0105
            break;                                                                        //07-05-05|0x0105
        }                                                                                 //07-05-05|0x0105
        break;                                                                            //07-05-05|0x0105
//---------------------------------------------------------------------------             //07-05-05|0x0106
      case 1043: // APPEND_CLASS                                                          //07-05-05|0x0107
        switch(tab_data(MacroNameAddr,Class_NameAddr))                                    //07-05-05|0x0107
        {                                                                                 //07-05-05|0x0107
          case Success:                                                                   //07-05-05|0x0107
            StackRunFlag = 1;                                                             //07-05-05|0x0107
            StackState = 17858; // MACRO_EXISTS                                           //07-05-05|0x0107
            break;                                                                        //07-05-05|0x0107
          default:                                                                        //07-05-05|0x0107
            StackStatus = SystemError;                                                    //07-05-05|0x0107
            StackRunFlag = 0;                                                             //07-05-05|0x0107
            SystemMsg;                                                                    //07-05-05|0x0107
            break;                                                                        //07-05-05|0x0107
        }                                                                                 //07-05-05|0x0107
        break;                                                                            //07-05-05|0x0107
//***************************************************************************             //07-03-03|0x0108
//****                                                                  *****             //07-03-03|0x0109
//****  TEST FOR THE MACRO DICTIONARY AND SELECT THE NAME_DICTIONARY    *****             //07-03-03|0x010a
//****                                                                  *****             //07-03-03|0x010b
//***************************************************************************             //07-03-03|0x010c
      case 17858: // MACRO_EXISTS                                                         //07-03-03|0x010d
        switch(TestDictName(MacroNameAddr))                                               //07-03-03|0x010d
        {                                                                                 //07-03-03|0x010d
          case Yes:                                                                       //07-03-03|0x010d
            StackRunFlag = 1;                                                             //07-03-03|0x010d
            StackState = 41569; // ARG_EXISTS                                             //07-03-03|0x010d
            break;                                                                        //07-03-03|0x010d
          case No:                                                                        //07-03-03|0x010d
            StackRunFlag = 1;                                                             //07-03-03|0x010d
            StackState = 51440; // SET_NO_TOKENS                                          //07-03-03|0x010d
            break;                                                                        //07-03-03|0x010d
          default:                                                                        //07-03-03|0x010d
            StackStatus = SystemError;                                                    //07-03-03|0x010d
            StackRunFlag = 0;                                                             //07-03-03|0x010d
            SystemMsg;                                                                    //07-03-03|0x010d
            break;                                                                        //07-03-03|0x010d
        }                                                                                 //07-03-03|0x010d
        break;                                                                            //07-03-03|0x010d
//***************************************************************************             //07-03-03|0x010e
      case 51440: // SET_NO_TOKENS                                                        //07-03-03|0x010f
        MacroNoTokens = 2;                                                                //07-03-03|0x010f
        StackState = 22639; // ADD_MACRO                                                  //07-03-03|0x010f
        break;                                                                            //07-03-03|0x010f
//---------------------------------------------------------------------------             //07-03-03|0x0110
      case 22639: // ADD_MACRO                                                            //07-03-03|0x0111
        switch(SrceDictAdd(&StackMacro))                                                  //07-03-03|0x0111
        {                                                                                 //07-03-03|0x0111
          case Success:                                                                   //07-03-03|0x0111
            StackRunFlag = 1;                                                             //07-03-03|0x0111
            StackState = 57310; // USE_GLOBAL                                             //07-03-03|0x0111
            break;                                                                        //07-03-03|0x0111
          default:                                                                        //07-03-03|0x0111
            StackStatus = SystemError;                                                    //07-03-03|0x0111
            StackRunFlag = 0;                                                             //07-03-03|0x0111
            SystemMsg;                                                                    //07-03-03|0x0111
            break;                                                                        //07-03-03|0x0111
        }                                                                                 //07-03-03|0x0111
        break;                                                                            //07-03-03|0x0111
//***************************************************************************             //07-03-03|0x0112
      case 41569: // ARG_EXISTS                                                           //07-03-03|0x0113
        switch(TestDictArg1(MacroNameAddr))                                               //07-03-03|0x0113
        {                                                                                 //07-03-03|0x0113
          case Yes:                                                                       //07-03-03|0x0113
            StackRunFlag = 1;                                                             //07-03-03|0x0113
            StackState = 56893; // GET_NAME                                               //07-03-03|0x0113
            break;                                                                        //07-03-03|0x0113
          case No:                                                                        //07-03-03|0x0113
            StackRunFlag = 1;                                                             //07-03-03|0x0113
            StackState = 57310; // USE_GLOBAL                                             //07-03-03|0x0113
            break;                                                                        //07-03-03|0x0113
          default:                                                                        //07-03-03|0x0113
            StackStatus = SystemError;                                                    //07-03-03|0x0113
            StackRunFlag = 0;                                                             //07-03-03|0x0113
            SystemMsg;                                                                    //07-03-03|0x0113
            break;                                                                        //07-03-03|0x0113
        }                                                                                 //07-03-03|0x0113
        break;                                                                            //07-03-03|0x0113
//---------------------------------------------------------------------------             //07-03-03|0x0114
      case 56893: // GET_NAME                                                             //07-03-20|0x0115
        switch(GetDictArg1(CurrentAddr,MacroNameAddr))                                    //07-03-20|0x0115
        {                                                                                 //07-03-20|0x0115
          case Success:                                                                   //07-03-20|0x0115
            StackRunFlag = 1;                                                             //07-03-20|0x0115
            StackState = 49804; // ZERO_LEVEL                                             //07-03-20|0x0115
            break;                                                                        //07-03-20|0x0115
          default:                                                                        //07-03-20|0x0115
            StackStatus = SystemError;                                                    //07-03-20|0x0115
            StackRunFlag = 0;                                                             //07-03-20|0x0115
            SystemMsg;                                                                    //07-03-20|0x0115
            break;                                                                        //07-03-20|0x0115
        }                                                                                 //07-03-20|0x0115
        break;                                                                            //07-03-20|0x0115
//***************************************************************************             //07-03-03|0x0116
      case 57310: // USE_GLOBAL                                                           //07-03-03|0x0117
        switch(tab_string(CurrentAddr,"StackGlobal"))                                     //07-03-03|0x0117
        {                                                                                 //07-03-03|0x0117
          case Success:                                                                   //07-03-03|0x0117
            StackRunFlag = 1;                                                             //07-03-03|0x0117
            StackState = 49804; // ZERO_LEVEL                                             //07-03-03|0x0117
            break;                                                                        //07-03-03|0x0117
          default:                                                                        //07-03-03|0x0117
            StackStatus = SystemError;                                                    //07-03-03|0x0117
            StackRunFlag = 0;                                                             //07-03-03|0x0117
            SystemMsg;                                                                    //07-03-03|0x0117
            break;                                                                        //07-03-03|0x0117
        }                                                                                 //07-03-03|0x0117
        break;                                                                            //07-03-03|0x0117
//***************************************************************************             //07-03-03|0x0118
//****                                                                  *****             //07-03-03|0x0119
//****  GET THE CURRENT STACK LEVEL                                     *****             //07-03-03|0x011a
//****                                                                  *****             //07-03-03|0x011b
//***************************************************************************             //07-03-03|0x011c
      case 49804: // ZERO_LEVEL                                                           //07-03-03|0x011d
        StackAbsPosUlong = 0;                                                             //07-03-03|0x011d
        StackState = 60363; // LEVEL_TEST                                                 //07-03-03|0x011d
        break;                                                                            //07-03-03|0x011d
//---------------------------------------------------------------------------             //07-03-03|0x011e
      case 60363: // LEVEL_TEST                                                           //07-03-05|0x011f
        switch(TestDictArg1(CurrentAddr))                                                 //07-03-05|0x011f
        {                                                                                 //07-03-05|0x011f
          case Yes:                                                                       //07-03-05|0x011f
            StackRunFlag = 1;                                                             //07-03-05|0x011f
            StackState = 43258; // GET_LEVEL                                              //07-03-05|0x011f
            break;                                                                        //07-03-05|0x011f
          case No:                                                                        //07-03-05|0x011f
            StackRunFlag = 1;                                                             //07-03-05|0x011f
            StackState = 14617; // EMPTY_EXIT                                             //07-03-05|0x011f
            break;                                                                        //07-03-05|0x011f
          default:                                                                        //07-03-05|0x011f
            StackStatus = SystemError;                                                    //07-03-05|0x011f
            StackRunFlag = 0;                                                             //07-03-05|0x011f
            SystemMsg;                                                                    //07-03-05|0x011f
            break;                                                                        //07-03-05|0x011f
        }                                                                                 //07-03-05|0x011f
        break;                                                                            //07-03-05|0x011f
//---------------------------------------------------------------------------             //07-03-03|0x0120
      case 43258: // GET_LEVEL                                                            //07-03-05|0x0121
        switch(GetDictArg1(StackLevelAddr,CurrentAddr))                                   //07-03-05|0x0121
        {                                                                                 //07-03-05|0x0121
          case Success:                                                                   //07-03-05|0x0121
            StackRunFlag = 1;                                                             //07-03-05|0x0121
            StackState = 52008; // XFER_LEVEL                                             //07-03-05|0x0121
            break;                                                                        //07-03-05|0x0121
          default:                                                                        //07-03-05|0x0121
            StackStatus = SystemError;                                                    //07-03-05|0x0121
            StackRunFlag = 0;                                                             //07-03-05|0x0121
            SystemMsg;                                                                    //07-03-05|0x0121
            break;                                                                        //07-03-05|0x0121
        }                                                                                 //07-03-05|0x0121
        break;                                                                            //07-03-05|0x0121
//---------------------------------------------------------------------------             //07-03-05|0x0122
      case 52008: // XFER_LEVEL                                                           //07-03-05|0x0123
        switch(store_stack_level())                                                       //07-03-05|0x0123
        {                                                                                 //07-03-05|0x0123
          case Success:                                                                   //07-03-05|0x0123
            StackRunFlag = 1;                                                             //07-03-05|0x0123
            StackState = 32295; // COPY_NAME                                              //07-03-05|0x0123
            break;                                                                        //07-03-05|0x0123
          default:                                                                        //07-03-05|0x0123
            StackStatus = SystemError;                                                    //07-03-05|0x0123
            StackRunFlag = 0;                                                             //07-03-05|0x0123
            SystemMsg;                                                                    //07-03-05|0x0123
            break;                                                                        //07-03-05|0x0123
        }                                                                                 //07-03-05|0x0123
        break;                                                                            //07-03-05|0x0123
//***************************************************************************             //07-03-03|0x0124
//****                                                                  *****             //07-03-03|0x0125
//****  IF NOT EMPTY, GET THE ELEMENT AND IMMEDIATE PAST ELEMENTS       *****             //07-03-03|0x0126
//****                                                                  *****             //07-03-03|0x0127
//***************************************************************************             //07-03-03|0x0128
      case 32295: // COPY_NAME                                                            //07-03-05|0x0129
        switch(CopyString(StackDictAddr, CurrentAddr))                                    //07-03-05|0x0129
        {                                                                                 //07-03-05|0x0129
          case Success:                                                                   //07-03-05|0x0129
            StackRunFlag = 1;                                                             //07-03-05|0x0129
            StackState = 24854; // ADD_LEVEL                                              //07-03-05|0x0129
            break;                                                                        //07-03-05|0x0129
          default:                                                                        //07-03-05|0x0129
            StackStatus = SystemError;                                                    //07-03-05|0x0129
            StackRunFlag = 0;                                                             //07-03-05|0x0129
            SystemMsg;                                                                    //07-03-05|0x0129
            break;                                                                        //07-03-05|0x0129
        }                                                                                 //07-03-05|0x0129
        break;                                                                            //07-03-05|0x0129
//---------------------------------------------------------------------------             //07-03-05|0x012a
      case 24854: // ADD_LEVEL                                                            //07-03-05|0x012b
        switch(tab_data(StackDictAddr,StackLevelAddr))                                    //07-03-05|0x012b
        {                                                                                 //07-03-05|0x012b
          case Success:                                                                   //07-03-05|0x012b
            StackRunFlag = 1;                                                             //07-03-05|0x012b
            StackState = 46620; // NO_TOKENS                                              //07-03-05|0x012b
            break;                                                                        //07-03-05|0x012b
          default:                                                                        //07-03-05|0x012b
            StackStatus = SystemError;                                                    //07-03-05|0x012b
            StackRunFlag = 0;                                                             //07-03-05|0x012b
            SystemMsg;                                                                    //07-03-05|0x012b
            break;                                                                        //07-03-05|0x012b
        }                                                                                 //07-03-05|0x012b
        break;                                                                            //07-03-05|0x012b
//***************************************************************************             //07-03-05|0x012c
      case 46620: // NO_TOKENS                                                            //07-03-05|0x012d
        switch(no_tokens())                                                               //07-03-05|0x012d
        {                                                                                 //07-03-05|0x012d
          case Success:                                                                   //07-03-05|0x012d
            StackRunFlag = 1;                                                             //07-03-05|0x012d
            StackState = 29429; // GET_ELEMENTS                                           //07-03-05|0x012d
            break;                                                                        //07-03-05|0x012d
          default:                                                                        //07-03-05|0x012d
            StackStatus = SystemError;                                                    //07-03-05|0x012d
            StackRunFlag = 0;                                                             //07-03-05|0x012d
            SystemMsg;                                                                    //07-03-05|0x012d
            break;                                                                        //07-03-05|0x012d
        }                                                                                 //07-03-05|0x012d
        break;                                                                            //07-03-05|0x012d
//---------------------------------------------------------------------------             //07-03-05|0x012e
      case 29429: // GET_ELEMENTS                                                         //07-03-05|0x012f
        switch(get_elements())                                                            //07-03-05|0x012f
        {                                                                                 //07-03-05|0x012f
          case Success:                                                                   //07-03-05|0x012f
            StackRunFlag = 1;                                                             //07-03-05|0x012f
            StackState = 41668; // NONEMPTY_EXIT                                          //07-03-05|0x012f
            break;                                                                        //07-03-05|0x012f
          default:                                                                        //07-03-05|0x012f
            StackStatus = SystemError;                                                    //07-03-05|0x012f
            StackRunFlag = 0;                                                             //07-03-05|0x012f
            SystemMsg;                                                                    //07-03-05|0x012f
            break;                                                                        //07-03-05|0x012f
        }                                                                                 //07-03-05|0x012f
        break;                                                                            //07-03-05|0x012f
//***************************************************************************             //07-03-03|0x0130
      case 14617: // EMPTY_EXIT                                                           //07-03-03|0x0131
        StackState = 53123; // EMPTY                                                      //07-03-03|0x0131
        StackStatus = Success;                                                            //07-03-03|0x0131
        StackRunFlag = 0;                                                                 //07-03-03|0x0131
        break;                                                                            //07-03-03|0x0131
//---------------------------------------------------------------------------             //07-03-05|0x0132
      case 41668: // NONEMPTY_EXIT                                                        //07-03-05|0x0133
        StackState = 51250; // NOT_EMPTY                                                  //07-03-05|0x0133
        StackStatus = Success;                                                            //07-03-05|0x0133
        StackRunFlag = 0;                                                                 //07-03-05|0x0133
        break;                                                                            //07-03-05|0x0133
//***************************************************************************             //07-03-03|0x0134
      default:                                                                            //07-03-03|0x0135
        StackStatus = SystemError;                                                        //07-03-03|0x0135
        StackRunFlag = 0;                                                                 //07-03-03|0x0135
        SystemMsg;                                                                        //07-03-03|0x0135
        break;                                                                            //07-03-03|0x0135
    }                                                                                     //07-03-03|0x0135
  }                                                                                       //07-03-03|0x0135
//***************************************************************************             //07-03-03|0x0136
//***************************************************************************             //07-03-03|0x0137
    TestSample(macro_begin_1);                                                            //07-03-03|0x0138
    return(StackStatus);                                                                  //07-03-03|0x0139
}                                                                                         //07-03-03|0x013a
//                                                                                        //05-24-97|0x013a
//***************************************************************************             //07-03-19|0x013d
//***************************************************************************             //07-03-19|0x013e
//******                                                               ******             //07-03-19|0x013f
//******                             register                          ******             //07-03-19|0x0140
//******                                                               ******             //07-03-19|0x0141
//***************************************************************************             //07-03-19|0x0142
//***************************************************************************             //07-03-19|0x0143
//*******************************************************************************         //10-29-97|0x0149
//*******************************************************************************         //10-29-97|0x0149
// register_stack                                                                         //07-05-05|0x0149
//*******************************************************************************         //10-29-97|0x0149
//*******************************************************************************         //10-29-97|0x0149
UINT PRECSTACK::register_stack(                                                           //07-05-05|0x0149
    TOKENS_FAR TokensAddr,                                                                //07-05-05|0x0149
    STRING_DATA_FAR Class_NameAddr                                                        //07-05-05|0x0149
    ) {                                                                                   //07-05-05|0x0149
//*******************************************************************************         //10-29-97|0x0149
//***************************************************************************             //07-03-19|0x014d
//***************************************************************************             //07-03-19|0x014e
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-19|0x014f
//***************************************************************************             //07-03-19|0x0150
//****                                                                  *****             //07-03-19|0x0151
//****  REGISTER STACK STATE MACHINE                                    *****             //07-03-19|0x0152
//****                                                                  *****             //07-03-19|0x0153
//***************************************************************************             //07-03-19|0x0154
  StackRunFlag = 1;                                                                       //07-03-19|0x0155
  while(StackRunFlag != 0)                                                                //07-03-19|0x0155
  {                                                                                       //07-03-19|0x0155
    switch(StackState)                                                                    //07-03-19|0x0155
    {                                                                                     //07-03-19|0x0155
//***************************************************************************             //07-03-19|0x0156
//****                                                                  *****             //07-03-19|0x0157
//****  INITIAL THE WORKSPACE                                           *****             //07-03-19|0x0158
//****                                                                  *****             //07-03-19|0x0159
//***************************************************************************             //07-03-19|0x015a
      case 53123: // EMPTY                                                                //07-03-19|0x015b
        MemSet(&StackWork, 0, sizeof(TOKENS));                                            //07-03-19|0x015b
        StackState = 19409; // EMPTY_WORK                                                 //07-03-19|0x015b
        break;                                                                            //07-03-19|0x015b
//---------------------------------------------------------------------------             //07-03-19|0x015c
      case 51250: // NOT_EMPTY                                                            //07-03-19|0x015d
        MemSet(&StackWork, 0, sizeof(TOKENS));                                            //07-03-19|0x015d
        StackState = 19409; // EMPTY_WORK                                                 //07-03-19|0x015d
        break;                                                                            //07-03-19|0x015d
//***************************************************************************             //07-03-19|0x015e
//****                                                                  *****             //07-03-19|0x015f
//****  PREPARE MACRO                                                   *****             //07-03-19|0x0160
//****                                                                  *****             //07-03-19|0x0161
//***************************************************************************             //07-03-19|0x0162
      case 19409: // EMPTY_WORK                                                           //07-05-05|0x0163
        switch(tab_string(Work1Addr,"StackMacro"))                                        //07-05-05|0x0163
        {                                                                                 //07-05-05|0x0163
          case Success:                                                                   //07-05-05|0x0163
            StackRunFlag = 1;                                                             //07-05-05|0x0163
            StackState = 7764; // APPEND_MACRO                                            //07-05-05|0x0163
            break;                                                                        //07-05-05|0x0163
          default:                                                                        //07-05-05|0x0163
            StackStatus = SystemError;                                                    //07-05-05|0x0163
            StackRunFlag = 0;                                                             //07-05-05|0x0163
            SystemMsg;                                                                    //07-05-05|0x0163
            break;                                                                        //07-05-05|0x0163
        }                                                                                 //07-05-05|0x0163
        break;                                                                            //07-05-05|0x0163
//---------------------------------------------------------------------------             //07-05-05|0x0164
      case 7764: // APPEND_MACRO                                                          //07-05-05|0x0165
        switch(tab_data(Work1Addr,InputMacroNameAddr))                                    //07-05-05|0x0165
        {                                                                                 //07-05-05|0x0165
          case Success:                                                                   //07-05-05|0x0165
            StackRunFlag = 1;                                                             //07-05-05|0x0165
            StackState = 1043; // APPEND_CLASS                                            //07-05-05|0x0165
            break;                                                                        //07-05-05|0x0165
          default:                                                                        //07-05-05|0x0165
            StackStatus = SystemError;                                                    //07-05-05|0x0165
            StackRunFlag = 0;                                                             //07-05-05|0x0165
            SystemMsg;                                                                    //07-05-05|0x0165
            break;                                                                        //07-05-05|0x0165
        }                                                                                 //07-05-05|0x0165
        break;                                                                            //07-05-05|0x0165
//---------------------------------------------------------------------------             //07-05-05|0x0166
      case 1043: // APPEND_CLASS                                                          //07-05-05|0x0167
        switch(tab_data(Work1Addr,Class_NameAddr))                                        //07-05-05|0x0167
        {                                                                                 //07-05-05|0x0167
          case Success:                                                                   //07-05-05|0x0167
            StackRunFlag = 1;                                                             //07-05-05|0x0167
            StackState = 2400; // APPEND_DICT                                             //07-05-05|0x0167
            break;                                                                        //07-05-05|0x0167
          default:                                                                        //07-05-05|0x0167
            StackStatus = SystemError;                                                    //07-05-05|0x0167
            StackRunFlag = 0;                                                             //07-05-05|0x0167
            SystemMsg;                                                                    //07-05-05|0x0167
            break;                                                                        //07-05-05|0x0167
        }                                                                                 //07-05-05|0x0167
        break;                                                                            //07-05-05|0x0167
//***************************************************************************             //07-03-19|0x0168
//****                                                                  *****             //07-03-19|0x0169
//****  PREPARE DICTIONARY NAME                                         *****             //07-03-19|0x016a
//****                                                                  *****             //07-03-19|0x016b
//***************************************************************************             //07-03-19|0x016c
      case 2400: // APPEND_DICT                                                           //07-03-19|0x016d
        switch(tab_string(Work2Addr,"StackSpecial"))                                      //07-03-19|0x016d
        {                                                                                 //07-03-19|0x016d
          case Success:                                                                   //07-03-19|0x016d
            StackRunFlag = 1;                                                             //07-03-19|0x016d
            StackState = 40927; // APPEND_NAME                                            //07-03-19|0x016d
            break;                                                                        //07-03-19|0x016d
          default:                                                                        //07-03-19|0x016d
            StackStatus = SystemError;                                                    //07-03-19|0x016d
            StackRunFlag = 0;                                                             //07-03-19|0x016d
            SystemMsg;                                                                    //07-03-19|0x016d
            break;                                                                        //07-03-19|0x016d
        }                                                                                 //07-03-19|0x016d
        break;                                                                            //07-03-19|0x016d
//---------------------------------------------------------------------------             //07-03-19|0x016e
      case 40927: // APPEND_NAME                                                          //07-03-19|0x016f
        switch(tab_data(Work2Addr,InputDictNameAddr))                                     //07-03-19|0x016f
        {                                                                                 //07-03-19|0x016f
          case Success:                                                                   //07-03-19|0x016f
            StackRunFlag = 1;                                                             //07-03-19|0x016f
            StackState = 40526; // NO_MACRO                                               //07-03-19|0x016f
            break;                                                                        //07-03-19|0x016f
          default:                                                                        //07-03-19|0x016f
            StackStatus = SystemError;                                                    //07-03-19|0x016f
            StackRunFlag = 0;                                                             //07-03-19|0x016f
            SystemMsg;                                                                    //07-03-19|0x016f
            break;                                                                        //07-03-19|0x016f
        }                                                                                 //07-03-19|0x016f
        break;                                                                            //07-03-19|0x016f
//***************************************************************************             //07-03-19|0x0170
//****                                                                  *****             //07-03-19|0x0171
//****  PREPARE MACRO DICTIONARY                                        *****             //07-03-19|0x0172
//****                                                                  *****             //07-03-19|0x0173
//***************************************************************************             //07-03-19|0x0174
      case 40526: // NO_MACRO                                                             //07-03-19|0x0175
        WorkNoTokens = 3;                                                                 //07-03-19|0x0175
        StackState = 33709; // TEST_MACRO                                                 //07-03-19|0x0175
        break;                                                                            //07-03-19|0x0175
//---------------------------------------------------------------------------             //07-03-19|0x0176
      case 33709: // TEST_MACRO                                                           //07-03-19|0x0177
        switch(TestDictName(Work1Addr))                                                   //07-03-19|0x0177
        {                                                                                 //07-03-19|0x0177
          case Yes:                                                                       //07-03-19|0x0177
            StackRunFlag = 1;                                                             //07-03-19|0x0177
            StackState = 48892; // PREV_EXISTS                                            //07-03-19|0x0177
            break;                                                                        //07-03-19|0x0177
          case No:                                                                        //07-03-19|0x0177
            StackRunFlag = 1;                                                             //07-03-19|0x0177
            StackState = 22639; // ADD_MACRO                                              //07-03-19|0x0177
            break;                                                                        //07-03-19|0x0177
          default:                                                                        //07-03-19|0x0177
            StackStatus = SystemError;                                                    //07-03-19|0x0177
            StackRunFlag = 0;                                                             //07-03-19|0x0177
            SystemMsg;                                                                    //07-03-19|0x0177
            break;                                                                        //07-03-19|0x0177
        }                                                                                 //07-03-19|0x0177
        break;                                                                            //07-03-19|0x0177
//***************************************************************************             //07-03-19|0x0178
      case 48892: // PREV_EXISTS                                                          //07-03-19|0x0179
        switch(TestDictArg1(Work1Addr))                                                   //07-03-19|0x0179
        {                                                                                 //07-03-19|0x0179
          case Yes:                                                                       //07-03-19|0x0179
            StackRunFlag = 1;                                                             //07-03-19|0x0179
            StackState = 44859; // PREV_ERROR                                             //07-03-19|0x0179
            break;                                                                        //07-03-19|0x0179
          case No:                                                                        //07-03-19|0x0179
            StackRunFlag = 1;                                                             //07-03-19|0x0179
            StackState = 41834; // UPDATE_MACRO                                           //07-03-19|0x0179
            break;                                                                        //07-03-19|0x0179
          default:                                                                        //07-03-19|0x0179
            StackStatus = SystemError;                                                    //07-03-19|0x0179
            StackRunFlag = 0;                                                             //07-03-19|0x0179
            SystemMsg;                                                                    //07-03-19|0x0179
            break;                                                                        //07-03-19|0x0179
        }                                                                                 //07-03-19|0x0179
        break;                                                                            //07-03-19|0x0179
//***************************************************************************             //07-03-19|0x017a
      case 41834: // UPDATE_MACRO                                                         //07-03-19|0x017b
        switch(SrceDictUpdate(&StackWork))                                                //07-03-19|0x017b
        {                                                                                 //07-03-19|0x017b
          case Success:                                                                   //07-03-19|0x017b
            StackRunFlag = 1;                                                             //07-03-19|0x017b
            StackState = 55945; // DICT_EXISTS                                            //07-03-19|0x017b
            break;                                                                        //07-03-19|0x017b
          default:                                                                        //07-03-19|0x017b
            StackStatus = SystemError;                                                    //07-03-19|0x017b
            StackRunFlag = 0;                                                             //07-03-19|0x017b
            SystemMsg;                                                                    //07-03-19|0x017b
            break;                                                                        //07-03-19|0x017b
        }                                                                                 //07-03-19|0x017b
        break;                                                                            //07-03-19|0x017b
//---------------------------------------------------------------------------             //07-03-19|0x017c
      case 22639: // ADD_MACRO                                                            //07-03-19|0x017d
        switch(SrceDictAdd(&StackWork))                                                   //07-03-19|0x017d
        {                                                                                 //07-03-19|0x017d
          case Success:                                                                   //07-03-19|0x017d
            StackRunFlag = 1;                                                             //07-03-19|0x017d
            StackState = 55945; // DICT_EXISTS                                            //07-03-19|0x017d
            break;                                                                        //07-03-19|0x017d
          default:                                                                        //07-03-19|0x017d
            StackStatus = SystemError;                                                    //07-03-19|0x017d
            StackRunFlag = 0;                                                             //07-03-19|0x017d
            SystemMsg;                                                                    //07-03-19|0x017d
            break;                                                                        //07-03-19|0x017d
        }                                                                                 //07-03-19|0x017d
        break;                                                                            //07-03-19|0x017d
//***************************************************************************             //07-03-19|0x017e
//****                                                                  *****             //07-03-19|0x017f
//****  DOES SPECIAL STACK DICTIONARY ALREADY EXIST?                    *****             //07-03-19|0x0180
//****                                                                  *****             //07-03-19|0x0181
//***************************************************************************             //07-03-19|0x0182
      case 55945: // DICT_EXISTS                                                          //07-03-19|0x0183
        switch(TestDictName(Work2Addr))                                                   //07-03-19|0x0183
        {                                                                                 //07-03-19|0x0183
          case Yes:                                                                       //07-03-19|0x0183
            StackRunFlag = 1;                                                             //07-03-19|0x0183
            StackState = 33688; // RESET_CURRENT                                          //07-03-19|0x0183
            break;                                                                        //07-03-19|0x0183
          case No:                                                                        //07-03-19|0x0183
            StackRunFlag = 1;                                                             //07-03-19|0x0183
            StackState = 48535; // XFER_NAME                                              //07-03-19|0x0183
            break;                                                                        //07-03-19|0x0183
          default:                                                                        //07-03-19|0x0183
            StackStatus = SystemError;                                                    //07-03-19|0x0183
            StackRunFlag = 0;                                                             //07-03-19|0x0183
            SystemMsg;                                                                    //07-03-19|0x0183
            break;                                                                        //07-03-19|0x0183
        }                                                                                 //07-03-19|0x0183
        break;                                                                            //07-03-19|0x0183
//***************************************************************************             //07-03-19|0x0184
//****                                                                  *****             //07-03-19|0x0185
//****  IF NOT, PREPARE ONE                                             *****             //07-03-19|0x0186
//****                                                                  *****             //07-03-19|0x0187
//***************************************************************************             //07-03-19|0x0188
      case 48535: // XFER_NAME                                                            //07-03-19|0x0189
        switch(CopyString(Work1Addr, Work2Addr))                                          //07-03-19|0x0189
        {                                                                                 //07-03-19|0x0189
          case Success:                                                                   //07-03-19|0x0189
            StackRunFlag = 1;                                                             //07-03-19|0x0189
            StackState = 38790; // NO_DICTS                                               //07-03-19|0x0189
            break;                                                                        //07-03-19|0x0189
          default:                                                                        //07-03-19|0x0189
            StackStatus = SystemError;                                                    //07-03-19|0x0189
            StackRunFlag = 0;                                                             //07-03-19|0x0189
            SystemMsg;                                                                    //07-03-19|0x0189
            break;                                                                        //07-03-19|0x0189
        }                                                                                 //07-03-19|0x0189
        break;                                                                            //07-03-19|0x0189
//---------------------------------------------------------------------------             //07-03-19|0x018a
      case 38790: // NO_DICTS                                                             //07-03-19|0x018b
        WorkNoTokens = 2;                                                                 //07-03-19|0x018b
        StackState = 4197; // ADD_DICT                                                    //07-03-19|0x018b
        break;                                                                            //07-03-19|0x018b
//---------------------------------------------------------------------------             //07-03-19|0x018c
      case 4197: // ADD_DICT                                                              //07-03-19|0x018d
        switch(SrceDictAdd(&StackWork))                                                   //07-03-19|0x018d
        {                                                                                 //07-03-19|0x018d
          case Success:                                                                   //07-03-19|0x018d
            StackRunFlag = 1;                                                             //07-03-19|0x018d
            StackState = 33688; // RESET_CURRENT                                          //07-03-19|0x018d
            break;                                                                        //07-03-19|0x018d
          default:                                                                        //07-03-19|0x018d
            StackStatus = SystemError;                                                    //07-03-19|0x018d
            StackRunFlag = 0;                                                             //07-03-19|0x018d
            SystemMsg;                                                                    //07-03-19|0x018d
            break;                                                                        //07-03-19|0x018d
        }                                                                                 //07-03-19|0x018d
        break;                                                                            //07-03-19|0x018d
//***************************************************************************             //07-03-19|0x018e
//****                                                                  *****             //07-03-19|0x018f
//****  RESET THE CURRENT DICTIONARY                                    *****             //07-03-19|0x0190
//****                                                                  *****             //07-03-19|0x0191
//***************************************************************************             //07-03-19|0x0192
      case 33688: // RESET_CURRENT                                                        //07-03-19|0x0193
        switch(TestDictArg1(MacroNameAddr))                                               //07-03-19|0x0193
        {                                                                                 //07-03-19|0x0193
          case Yes:                                                                       //07-03-19|0x0193
            StackRunFlag = 1;                                                             //07-03-19|0x0193
            StackState = 5940; // GET_CURRENT                                             //07-03-19|0x0193
            break;                                                                        //07-03-19|0x0193
          case No:                                                                        //07-03-19|0x0193
            StackRunFlag = 1;                                                             //07-03-19|0x0193
            StackState = 35571; // TEST_ARG1                                              //07-03-19|0x0193
            break;                                                                        //07-03-19|0x0193
          default:                                                                        //07-03-19|0x0193
            StackStatus = SystemError;                                                    //07-03-19|0x0193
            StackRunFlag = 0;                                                             //07-03-19|0x0193
            SystemMsg;                                                                    //07-03-19|0x0193
            break;                                                                        //07-03-19|0x0193
        }                                                                                 //07-03-19|0x0193
        break;                                                                            //07-03-19|0x0193
//---------------------------------------------------------------------------             //07-03-19|0x0194
      case 5940: // GET_CURRENT                                                           //07-03-19|0x0195
        switch(GetDictArg1(CurrentAddr,MacroNameAddr))                                    //07-03-19|0x0195
        {                                                                                 //07-03-19|0x0195
          case Success:                                                                   //07-03-19|0x0195
            StackRunFlag = 1;                                                             //07-03-19|0x0195
            StackState = 35571; // TEST_ARG1                                              //07-03-19|0x0195
            break;                                                                        //07-03-19|0x0195
          default:                                                                        //07-03-19|0x0195
            StackStatus = SystemError;                                                    //07-03-19|0x0195
            StackRunFlag = 0;                                                             //07-03-19|0x0195
            SystemMsg;                                                                    //07-03-19|0x0195
            break;                                                                        //07-03-19|0x0195
        }                                                                                 //07-03-19|0x0195
        break;                                                                            //07-03-19|0x0195
//***************************************************************************             //07-03-19|0x0196
//****                                                                  *****             //07-03-19|0x0197
//****  TEST THE STACK DICTIONARY FOR STACK LEVEL                       *****             //07-03-19|0x0198
//****                                                                  *****             //07-03-19|0x0199
//***************************************************************************             //07-03-19|0x019a
      case 35571: // TEST_ARG1                                                            //07-03-19|0x019b
        switch(TestDictArg1(CurrentAddr))                                                 //07-03-19|0x019b
        {                                                                                 //07-03-19|0x019b
          case Yes:                                                                       //07-03-19|0x019b
            StackRunFlag = 1;                                                             //07-03-19|0x019b
            StackState = 15010; // NONEMPTY_OK                                            //07-03-19|0x019b
            break;                                                                        //07-03-19|0x019b
          case No:                                                                        //07-03-19|0x019b
            StackRunFlag = 1;                                                             //07-03-19|0x019b
            StackState = 58689; // EMPTY_OK                                               //07-03-19|0x019b
            break;                                                                        //07-03-19|0x019b
          default:                                                                        //07-03-19|0x019b
            StackStatus = SystemError;                                                    //07-03-19|0x019b
            StackRunFlag = 0;                                                             //07-03-19|0x019b
            SystemMsg;                                                                    //07-03-19|0x019b
            break;                                                                        //07-03-19|0x019b
        }                                                                                 //07-03-19|0x019b
        break;                                                                            //07-03-19|0x019b
//***************************************************************************             //07-03-19|0x019c
//****                                                                  *****             //07-03-19|0x019d
//****  EXITS COME HERE                                                 *****             //07-03-19|0x019e
//****                                                                  *****             //07-03-19|0x019f
//***************************************************************************             //07-03-19|0x01a0
      case 15010: // NONEMPTY_OK                                                          //07-03-19|0x01a1
        StackState = 51250; // NOT_EMPTY                                                  //07-03-19|0x01a1
        StackStatus = Success;                                                            //07-03-19|0x01a1
        StackRunFlag = 0;                                                                 //07-03-19|0x01a1
        break;                                                                            //07-03-19|0x01a1
//---------------------------------------------------------------------------             //07-03-19|0x01a2
      case 58689: // EMPTY_OK                                                             //07-03-19|0x01a3
        StackState = 53123; // EMPTY                                                      //07-03-19|0x01a3
        StackStatus = Success;                                                            //07-03-19|0x01a3
        StackRunFlag = 0;                                                                 //07-03-19|0x01a3
        break;                                                                            //07-03-19|0x01a3
//---------------------------------------------------------------------------             //07-03-19|0x01a4
      case 44859: // PREV_ERROR                                                           //07-03-19|0x01a5
        switch(StackAssignedMsg)                                                          //07-03-19|0x01a5
        {                                                                                 //07-03-19|0x01a5
          case UserError:                                                                 //07-03-19|0x01a5
            StackState = 4462; // INITIAL_BEGIN                                           //07-03-19|0x01a5
            StackStatus = UserError;                                                      //07-03-19|0x01a5
            StackRunFlag = 0;                                                             //07-03-19|0x01a5
            break;                                                                        //07-03-19|0x01a5
          default:                                                                        //07-03-19|0x01a5
            StackStatus = SystemError;                                                    //07-03-19|0x01a5
            StackRunFlag = 0;                                                             //07-03-19|0x01a5
            SystemMsg;                                                                    //07-03-19|0x01a5
            break;                                                                        //07-03-19|0x01a5
        }                                                                                 //07-03-19|0x01a5
        break;                                                                            //07-03-19|0x01a5
//***************************************************************************             //07-03-19|0x01a6
      default:                                                                            //07-03-19|0x01a7
        StackStatus = SystemError;                                                        //07-03-19|0x01a7
        StackRunFlag = 0;                                                                 //07-03-19|0x01a7
        SystemMsg;                                                                        //07-03-19|0x01a7
        break;                                                                            //07-03-19|0x01a7
    }                                                                                     //07-03-19|0x01a7
  }                                                                                       //07-03-19|0x01a7
//***************************************************************************             //07-03-19|0x01a8
//***************************************************************************             //07-03-19|0x01a9
    TestSample(register_stack_1);                                                         //07-03-19|0x01aa
    return(StackStatus);                                                                  //07-03-19|0x01ab
}                                                                                         //07-03-19|0x01ac
//                                                                                        //05-24-97|0x01ac
//***************************************************************************             //07-02-26|0x01af
//***************************************************************************             //07-02-26|0x01b0
//******                                                               ******             //07-02-26|0x01b1
//******                             macro_end                         ******             //07-02-26|0x01b2
//******                                                               ******             //07-02-26|0x01b3
//***************************************************************************             //07-02-26|0x01b4
//***************************************************************************             //07-02-26|0x01b5
//*******************************************************************************         //10-29-97|0x01ba
//*******************************************************************************         //10-29-97|0x01ba
// macro_end                                                                              //07-02-26|0x01ba
//*******************************************************************************         //10-29-97|0x01ba
//*******************************************************************************         //10-29-97|0x01ba
UINT PRECSTACK::macro_end(void) {                                                         //07-02-26|0x01ba
//*******************************************************************************         //10-29-97|0x01ba
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-03|0x01be
//***************************************************************************             //07-03-03|0x01bf
  StackRunFlag = 1;                                                                       //07-03-03|0x01c0
  while(StackRunFlag != 0)                                                                //07-03-03|0x01c0
  {                                                                                       //07-03-03|0x01c0
    switch(StackState)                                                                    //07-03-03|0x01c0
    {                                                                                     //07-03-03|0x01c0
//***************************************************************************             //07-03-03|0x01c1
      case 53123: // EMPTY                                                                //07-03-03|0x01c2
        switch((ElementNoTokens) ? No : Yes)                                              //07-03-03|0x01c2
        {                                                                                 //07-03-03|0x01c2
          case Yes:                                                                       //07-03-03|0x01c2
            StackRunFlag = 1;                                                             //07-03-03|0x01c2
            StackState = 14800; // EMPTY_MACRO                                            //07-03-03|0x01c2
            break;                                                                        //07-03-03|0x01c2
          default:                                                                        //07-03-03|0x01c2
            StackStatus = SystemError;                                                    //07-03-03|0x01c2
            StackRunFlag = 0;                                                             //07-03-03|0x01c2
            SystemMsg;                                                                    //07-03-03|0x01c2
            break;                                                                        //07-03-03|0x01c2
        }                                                                                 //07-03-03|0x01c2
        break;                                                                            //07-03-03|0x01c2
//---------------------------------------------------------------------------             //07-03-03|0x01c3
      case 51250: // NOT_EMPTY                                                            //07-03-03|0x01c4
        MemSet(&StackElement, 0, sizeof(TOKENS));                                         //07-03-03|0x01c4
        StackState = 14800; // EMPTY_MACRO                                                //07-03-03|0x01c4
        break;                                                                            //07-03-03|0x01c4
//***************************************************************************             //07-03-03|0x01c5
      case 14800: // EMPTY_MACRO                                                          //07-03-03|0x01c6
        MemSet(&StackMacro, 0, sizeof(TOKENS));                                           //07-03-03|0x01c6
        StackState = 55119; // EMPTY_NAME                                                 //07-03-03|0x01c6
        break;                                                                            //07-03-03|0x01c6
//---------------------------------------------------------------------------             //07-03-03|0x01c7
      case 55119: // EMPTY_NAME                                                           //07-03-03|0x01c8
        MemSet(&StackName, 0, sizeof(TOKENS));                                            //07-03-03|0x01c8
        StackState = 34729; // EXIT_OK                                                    //07-03-03|0x01c8
        break;                                                                            //07-03-03|0x01c8
//***************************************************************************             //07-03-03|0x01c9
      case 34729: // EXIT_OK                                                              //07-03-03|0x01ca
        StackState = 696; // INITIALIZED                                                  //07-03-03|0x01ca
        StackStatus = Success;                                                            //07-03-03|0x01ca
        StackRunFlag = 0;                                                                 //07-03-03|0x01ca
        break;                                                                            //07-03-03|0x01ca
//***************************************************************************             //07-03-03|0x01cb
      default:                                                                            //07-03-03|0x01cc
        StackStatus = SystemError;                                                        //07-03-03|0x01cc
        StackRunFlag = 0;                                                                 //07-03-03|0x01cc
        SystemMsg;                                                                        //07-03-03|0x01cc
        break;                                                                            //07-03-03|0x01cc
    }                                                                                     //07-03-03|0x01cc
  }                                                                                       //07-03-03|0x01cc
//***************************************************************************             //07-03-03|0x01cd
//***************************************************************************             //07-03-03|0x01ce
    TestSample(macro_end_1);                                                              //07-03-03|0x01cf
    return(StackStatus);                                                                  //07-03-03|0x01d0
}                                                                                         //07-03-03|0x01d1
//                                                                                        //05-24-97|0x01d1
//***************************************************************************             //04-09-06|0x01d4
//***************************************************************************             //04-09-06|0x01d5
//******                                                               ******             //04-09-06|0x01d6
//******                             push                              ******             //04-09-06|0x01d7
//******                                                               ******             //04-09-06|0x01d8
//***************************************************************************             //04-09-06|0x01d9
//***************************************************************************             //04-09-06|0x01da
//***************************************************************************             //04-09-06|0x01de
//***************************************************************************             //04-09-06|0x01df
//*******************************************************************************         //10-29-97|0x01e2
//*******************************************************************************         //10-29-97|0x01e2
// push                                                                                   //05-14-97|0x01e2
//*******************************************************************************         //10-29-97|0x01e2
//*******************************************************************************         //10-29-97|0x01e2
UINT PRECSTACK::push(                                                                     //05-14-97|0x01e2
    STRING_DATA_FAR StringAddr                                                            //05-14-97|0x01e2
    ) {                                                                                   //05-14-97|0x01e2
//*******************************************************************************         //10-29-97|0x01e2
//***************************************************************************             //04-09-06|0x01e6
//***************************************************************************             //04-09-06|0x01e7
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-03|0x01e8
//***************************************************************************             //07-03-03|0x01e9
//****                                                                  *****             //07-03-03|0x01ea
//****  MACRO PUSH MACHINE                                              *****             //07-03-03|0x01eb
//****                                                                  *****             //07-03-03|0x01ec
//***************************************************************************             //07-03-03|0x01ed
  StackRunFlag = 1;                                                                       //07-03-03|0x01ee
  while(StackRunFlag != 0)                                                                //07-03-03|0x01ee
  {                                                                                       //07-03-03|0x01ee
    switch(StackState)                                                                    //07-03-03|0x01ee
    {                                                                                     //07-03-03|0x01ee
//***************************************************************************             //07-03-03|0x01ef
//****                                                                  *****             //07-03-03|0x01f0
//****  PREPARE FOR EMPTY STACK                                         *****             //07-03-03|0x01f1
//****                                                                  *****             //07-03-03|0x01f2
//***************************************************************************             //07-03-03|0x01f3
      case 53123: // EMPTY                                                                //07-03-03|0x01f4
        switch((ElementNoTokens) ? No : Yes)                                              //07-03-03|0x01f4
        {                                                                                 //07-03-03|0x01f4
          case Yes:                                                                       //07-03-03|0x01f4
            StackRunFlag = 1;                                                             //07-03-03|0x01f4
            StackState = 19646; // SET_LEVEL                                              //07-03-03|0x01f4
            break;                                                                        //07-03-03|0x01f4
          default:                                                                        //07-03-03|0x01f4
            StackStatus = SystemError;                                                    //07-03-03|0x01f4
            StackRunFlag = 0;                                                             //07-03-03|0x01f4
            SystemMsg;                                                                    //07-03-03|0x01f4
            break;                                                                        //07-03-03|0x01f4
        }                                                                                 //07-03-03|0x01f4
        break;                                                                            //07-03-03|0x01f4
//---------------------------------------------------------------------------             //07-03-03|0x01f5
      case 19646: // SET_LEVEL                                                            //07-03-03|0x01f6
        StackAbsPosUlong = 1;                                                             //07-03-03|0x01f6
        StackState = 6429; // LOAD_LEVEL                                                  //07-03-03|0x01f6
        break;                                                                            //07-03-03|0x01f6
//***************************************************************************             //07-03-03|0x01f7
//****                                                                  *****             //07-03-03|0x01f8
//****  PREPARE FOR NON-EMPTY STACK                                     *****             //07-03-03|0x01f9
//****                                                                  *****             //07-03-03|0x01fa
//***************************************************************************             //07-03-03|0x01fb
      case 51250: // NOT_EMPTY                                                            //07-03-03|0x01fc
        switch(add_stack_level(1))                                                        //07-03-03|0x01fc
        {                                                                                 //07-03-03|0x01fc
          case Great:                                                                     //07-03-03|0x01fc
            StackRunFlag = 1;                                                             //07-03-03|0x01fc
            StackState = 6429; // LOAD_LEVEL                                              //07-03-03|0x01fc
            break;                                                                        //07-03-03|0x01fc
          default:                                                                        //07-03-03|0x01fc
            StackStatus = SystemError;                                                    //07-03-03|0x01fc
            StackRunFlag = 0;                                                             //07-03-03|0x01fc
            SystemMsg;                                                                    //07-03-03|0x01fc
            break;                                                                        //07-03-03|0x01fc
        }                                                                                 //07-03-03|0x01fc
        break;                                                                            //07-03-03|0x01fc
//***************************************************************************             //07-03-03|0x01fd
//****                                                                  *****             //07-03-03|0x01fe
//****  UPGRADE CURRENT STACK                                           *****             //07-03-03|0x01ff
//****                                                                  *****             //07-03-03|0x0200
//***************************************************************************             //07-03-03|0x0201
      case 6429: // LOAD_LEVEL                                                            //07-03-03|0x0202
        LoadStackLevel;                                                                   //07-03-03|0x0202
        StackState = 43884; // INCR_NO_CURRENT                                            //07-03-03|0x0202
        break;                                                                            //07-03-03|0x0202
//---------------------------------------------------------------------------             //07-03-03|0x0203
      case 43884: // INCR_NO_CURRENT                                                      //07-03-03|0x0204
        NameNoTokens = 3;                                                                 //07-03-03|0x0204
        StackState = 25259; // UPDATE_CURRENT                                             //07-03-03|0x0204
        break;                                                                            //07-03-03|0x0204
//---------------------------------------------------------------------------             //07-03-03|0x0205
      case 25259: // UPDATE_CURRENT                                                       //07-03-03|0x0206
        switch(SrceDictUpdate(&StackName))                                                //07-03-03|0x0206
        {                                                                                 //07-03-03|0x0206
          case Success:                                                                   //07-03-03|0x0206
            StackRunFlag = 1;                                                             //07-03-03|0x0206
            StackState = 32295; // COPY_NAME                                              //07-03-03|0x0206
            break;                                                                        //07-03-03|0x0206
          default:                                                                        //07-03-03|0x0206
            StackStatus = SystemError;                                                    //07-03-03|0x0206
            StackRunFlag = 0;                                                             //07-03-03|0x0206
            SystemMsg;                                                                    //07-03-03|0x0206
            break;                                                                        //07-03-03|0x0206
        }                                                                                 //07-03-03|0x0206
        break;                                                                            //07-03-03|0x0206
//***************************************************************************             //07-03-03|0x0207
//****                                                                  *****             //07-03-03|0x0208
//****  PREPARE AND RECORD THE STACK UPDATE                             *****             //07-03-03|0x0209
//****                                                                  *****             //07-03-03|0x020a
//***************************************************************************             //07-03-03|0x020b
      case 32295: // COPY_NAME                                                            //07-03-03|0x020c
        switch(CopyString(StackDictAddr, CurrentAddr))                                    //07-03-03|0x020c
        {                                                                                 //07-03-03|0x020c
          case Success:                                                                   //07-03-03|0x020c
            StackRunFlag = 1;                                                             //07-03-03|0x020c
            StackState = 36314; // APPEND_LEVEL                                           //07-03-03|0x020c
            break;                                                                        //07-03-03|0x020c
          default:                                                                        //07-03-03|0x020c
            StackStatus = SystemError;                                                    //07-03-03|0x020c
            StackRunFlag = 0;                                                             //07-03-03|0x020c
            SystemMsg;                                                                    //07-03-03|0x020c
            break;                                                                        //07-03-03|0x020c
        }                                                                                 //07-03-03|0x020c
        break;                                                                            //07-03-03|0x020c
//---------------------------------------------------------------------------             //07-03-03|0x020d
      case 36314: // APPEND_LEVEL                                                         //07-03-03|0x020e
        switch(tab_data(StackDictAddr,StackLevelAddr))                                    //07-03-03|0x020e
        {                                                                                 //07-03-03|0x020e
          case Success:                                                                   //07-03-03|0x020e
            StackRunFlag = 1;                                                             //07-03-03|0x020e
            StackState = 27641; // NO_ELEMENTS                                            //07-03-03|0x020e
            break;                                                                        //07-03-03|0x020e
          default:                                                                        //07-03-03|0x020e
            StackStatus = SystemError;                                                    //07-03-03|0x020e
            StackRunFlag = 0;                                                             //07-03-03|0x020e
            SystemMsg;                                                                    //07-03-03|0x020e
            break;                                                                        //07-03-03|0x020e
        }                                                                                 //07-03-03|0x020e
        break;                                                                            //07-03-03|0x020e
//***************************************************************************             //07-03-03|0x020f
      case 27641: // NO_ELEMENTS                                                          //07-03-03|0x0210
        switch(no_tokens())                                                               //07-03-03|0x0210
        {                                                                                 //07-03-03|0x0210
          case Success:                                                                   //07-03-03|0x0210
            StackRunFlag = 1;                                                             //07-03-03|0x0210
            StackState = 11272; // ELEMENT_NO                                             //07-03-03|0x0210
            break;                                                                        //07-03-03|0x0210
          default:                                                                        //07-03-03|0x0210
            StackStatus = SystemError;                                                    //07-03-03|0x0210
            StackRunFlag = 0;                                                             //07-03-03|0x0210
            SystemMsg;                                                                    //07-03-03|0x0210
            break;                                                                        //07-03-03|0x0210
        }                                                                                 //07-03-03|0x0210
        break;                                                                            //07-03-03|0x0210
//---------------------------------------------------------------------------             //07-03-03|0x0211
      case 11272: // ELEMENT_NO                                                           //07-03-03|0x0212
        StackRelPos=((StackAbsPosUlong-1)%8)+2;                                           //07-03-03|0x0212
        StackState = 60679; // LOAD_INPUT                                                 //07-03-03|0x0212
        break;                                                                            //07-03-03|0x0212
//---------------------------------------------------------------------------             //07-03-03|0x0213
      case 60679: // LOAD_INPUT                                                           //07-03-03|0x0214
        switch(LoadElement(StringAddr))                                                   //07-03-03|0x0214
        {                                                                                 //07-03-03|0x0214
          case Success:                                                                   //07-03-03|0x0214
            StackRunFlag = 1;                                                             //07-03-03|0x0214
            StackState = 48630; // TEST_ELEMENT                                           //07-03-03|0x0214
            break;                                                                        //07-03-03|0x0214
          default:                                                                        //07-03-03|0x0214
            StackStatus = SystemError;                                                    //07-03-03|0x0214
            StackRunFlag = 0;                                                             //07-03-03|0x0214
            SystemMsg;                                                                    //07-03-03|0x0214
            break;                                                                        //07-03-03|0x0214
        }                                                                                 //07-03-03|0x0214
        break;                                                                            //07-03-03|0x0214
//***************************************************************************             //07-03-03|0x0215
      case 48630: // TEST_ELEMENT                                                         //07-03-03|0x0216
        switch(TestDictName(StackDictAddr))                                               //07-03-03|0x0216
        {                                                                                 //07-03-03|0x0216
          case Yes:                                                                       //07-03-03|0x0216
            StackRunFlag = 1;                                                             //07-03-03|0x0216
            StackState = 40405; // ELEM_EXISTS                                            //07-03-03|0x0216
            break;                                                                        //07-03-03|0x0216
          case No:                                                                        //07-03-03|0x0216
            StackRunFlag = 1;                                                             //07-03-03|0x0216
            StackState = 31652; // NO_ELEM                                                //07-03-03|0x0216
            break;                                                                        //07-03-03|0x0216
          default:                                                                        //07-03-03|0x0216
            StackStatus = SystemError;                                                    //07-03-03|0x0216
            StackRunFlag = 0;                                                             //07-03-03|0x0216
            SystemMsg;                                                                    //07-03-03|0x0216
            break;                                                                        //07-03-03|0x0216
        }                                                                                 //07-03-03|0x0216
        break;                                                                            //07-03-03|0x0216
//---------------------------------------------------------------------------             //07-03-03|0x0217
      case 31652: // NO_ELEM                                                              //07-03-03|0x0218
        switch(SrceDictAdd(&StackElement))                                                //07-03-03|0x0218
        {                                                                                 //07-03-03|0x0218
          case Success:                                                                   //07-03-03|0x0218
            StackRunFlag = 1;                                                             //07-03-03|0x0218
            StackState = 13923; // INCR_TOTAL                                             //07-03-03|0x0218
            break;                                                                        //07-03-03|0x0218
          default:                                                                        //07-03-03|0x0218
            StackStatus = SystemError;                                                    //07-03-03|0x0218
            StackRunFlag = 0;                                                             //07-03-03|0x0218
            SystemMsg;                                                                    //07-03-03|0x0218
            break;                                                                        //07-03-03|0x0218
        }                                                                                 //07-03-03|0x0218
        break;                                                                            //07-03-03|0x0218
//---------------------------------------------------------------------------             //07-03-03|0x0219
      case 40405: // ELEM_EXISTS                                                          //07-03-05|0x021a
        switch(SrceDictUpdate(&StackElement))                                             //07-03-05|0x021a
        {                                                                                 //07-03-05|0x021a
          case Success:                                                                   //07-03-05|0x021a
            StackRunFlag = 1;                                                             //07-03-05|0x021a
            StackState = 13923; // INCR_TOTAL                                             //07-03-05|0x021a
            break;                                                                        //07-03-05|0x021a
          default:                                                                        //07-03-05|0x021a
            StackStatus = SystemError;                                                    //07-03-05|0x021a
            StackRunFlag = 0;                                                             //07-03-05|0x021a
            SystemMsg;                                                                    //07-03-05|0x021a
            break;                                                                        //07-03-05|0x021a
        }                                                                                 //07-03-05|0x021a
        break;                                                                            //07-03-05|0x021a
//***************************************************************************             //07-03-03|0x021b
      case 13923: // INCR_TOTAL                                                           //07-03-03|0x021c
        IncrTotalLevel;                                                                   //07-03-03|0x021c
        StackState = 34729; // EXIT_OK                                                    //07-03-03|0x021c
        break;                                                                            //07-03-03|0x021c
//---------------------------------------------------------------------------             //07-03-03|0x021d
      case 34729: // EXIT_OK                                                              //07-03-03|0x021e
        StackState = 51250; // NOT_EMPTY                                                  //07-03-03|0x021e
        StackStatus = Success;                                                            //07-03-03|0x021e
        StackRunFlag = 0;                                                                 //07-03-03|0x021e
        break;                                                                            //07-03-03|0x021e
//***************************************************************************             //07-03-03|0x021f
      default:                                                                            //07-03-03|0x0220
        StackStatus = SystemError;                                                        //07-03-03|0x0220
        StackRunFlag = 0;                                                                 //07-03-03|0x0220
        SystemMsg;                                                                        //07-03-03|0x0220
        break;                                                                            //07-03-03|0x0220
    }                                                                                     //07-03-03|0x0220
  }                                                                                       //07-03-03|0x0220
//***************************************************************************             //07-03-03|0x0221
//***************************************************************************             //07-03-03|0x0222
    TestSample(push_1);                                                                   //07-03-03|0x0223
    return(StackStatus);                                                                  //07-03-03|0x0224
}                                                                                         //07-03-03|0x0225
//                                                                                        //05-24-97|0x0225
//***************************************************************************             //07-02-25|0x0228
//***************************************************************************             //07-02-25|0x0229
//******                                                               ******             //07-02-25|0x022a
//******                             pop                               ******             //07-02-25|0x022b
//******                                                               ******             //07-02-25|0x022c
//***************************************************************************             //07-02-25|0x022d
//***************************************************************************             //07-02-25|0x022e
//*******************************************************************************         //10-29-97|0x0232
//*******************************************************************************         //10-29-97|0x0232
// pop                                                                                    //07-02-25|0x0232
//*******************************************************************************         //10-29-97|0x0232
//*******************************************************************************         //10-29-97|0x0232
UINT PRECSTACK::pop(                                                                      //07-02-25|0x0232
    UINT NoLevels                                                                         //07-02-25|0x0232
    ) {                                                                                   //07-02-25|0x0232
//*******************************************************************************         //10-29-97|0x0232
//***************************************************************************             //07-02-25|0x0236
//***************************************************************************             //07-02-25|0x0237
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-05|0x0238
//***************************************************************************             //07-03-05|0x0239
//****                                                                  *****             //07-03-05|0x023a
//****  POP STATE MACHINE                                               *****             //07-03-05|0x023b
//****                                                                  *****             //07-03-05|0x023c
//***************************************************************************             //07-03-05|0x023d
  StackRunFlag = 1;                                                                       //07-03-05|0x023e
  while(StackRunFlag != 0)                                                                //07-03-05|0x023e
  {                                                                                       //07-03-05|0x023e
    switch(StackState)                                                                    //07-03-05|0x023e
    {                                                                                     //07-03-05|0x023e
//***************************************************************************             //07-03-05|0x023f
//****                                                                  *****             //07-03-05|0x0240
//****  EMPTY STACK COMES HERE                                          *****             //07-03-05|0x0241
//****                                                                  *****             //07-03-05|0x0242
//***************************************************************************             //07-03-05|0x0243
      case 53123: // EMPTY                                                                //07-03-05|0x0244
        switch(StackEmptyMsg)                                                             //07-03-05|0x0244
        {                                                                                 //07-03-05|0x0244
          case UserError:                                                                 //07-03-05|0x0244
            StackState = 4462; // INITIAL_BEGIN                                           //07-03-05|0x0244
            StackStatus = UserError;                                                      //07-03-05|0x0244
            StackRunFlag = 0;                                                             //07-03-05|0x0244
            break;                                                                        //07-03-05|0x0244
          default:                                                                        //07-03-05|0x0244
            StackStatus = SystemError;                                                    //07-03-05|0x0244
            StackRunFlag = 0;                                                             //07-03-05|0x0244
            SystemMsg;                                                                    //07-03-05|0x0244
            break;                                                                        //07-03-05|0x0244
        }                                                                                 //07-03-05|0x0244
        break;                                                                            //07-03-05|0x0244
//***************************************************************************             //07-03-05|0x0245
//****                                                                  *****             //07-03-05|0x0246
//****  STACK NOT CURRENTLY EMPTY -- WILL IT BE EMPTY                   *****             //07-03-05|0x0247
//****                                                                  *****             //07-03-05|0x0248
//***************************************************************************             //07-03-05|0x0249
      case 51250: // NOT_EMPTY                                                            //07-03-05|0x024a
        switch(DecrTotalLevel(NoLevels))                                                  //07-03-05|0x024a
        {                                                                                 //07-03-05|0x024a
          case Yes:                                                                       //07-03-05|0x024a
            StackRunFlag = 1;                                                             //07-03-05|0x024a
            StackState = 40210; // POP_LEVEL                                              //07-03-05|0x024a
            break;                                                                        //07-03-05|0x024a
          default:                                                                        //07-03-05|0x024a
            StackStatus = SystemError;                                                    //07-03-05|0x024a
            StackRunFlag = 0;                                                             //07-03-05|0x024a
            SystemMsg;                                                                    //07-03-05|0x024a
            break;                                                                        //07-03-05|0x024a
        }                                                                                 //07-03-05|0x024a
        break;                                                                            //07-03-05|0x024a
//---------------------------------------------------------------------------             //07-03-05|0x024b
      case 40210: // POP_LEVEL                                                            //07-03-05|0x024c
        switch(add_stack_level(-NoLevels))                                                //07-03-05|0x024c
        {                                                                                 //07-03-05|0x024c
          case Less:                                                                      //07-03-05|0x024c
            StackRunFlag = 1;                                                             //07-03-05|0x024c
            StackState = 28337; // NO_CURRENTS                                            //07-03-05|0x024c
            break;                                                                        //07-03-05|0x024c
          case Zero:                                                                      //07-03-05|0x024c
            StackRunFlag = 1;                                                             //07-03-05|0x024c
            StackState = 23104; // NOW_EMPTY                                              //07-03-05|0x024c
            break;                                                                        //07-03-05|0x024c
          default:                                                                        //07-03-05|0x024c
            StackStatus = SystemError;                                                    //07-03-05|0x024c
            StackRunFlag = 0;                                                             //07-03-05|0x024c
            SystemMsg;                                                                    //07-03-05|0x024c
            break;                                                                        //07-03-05|0x024c
        }                                                                                 //07-03-05|0x024c
        break;                                                                            //07-03-05|0x024c
//***************************************************************************             //07-03-05|0x024d
//****                                                                  *****             //07-03-05|0x024e
//****  STACK IS NOW EMPTY -- UPDATE CURRENT                            *****             //07-03-05|0x024f
//****                                                                  *****             //07-03-05|0x0250
//***************************************************************************             //07-03-05|0x0251
      case 23104: // NOW_EMPTY                                                            //07-03-05|0x0252
        NameNoTokens = 2;                                                                 //07-03-05|0x0252
        StackState = 65215; // UPDATE_EMPTY                                               //07-03-05|0x0252
        break;                                                                            //07-03-05|0x0252
//---------------------------------------------------------------------------             //07-03-05|0x0253
      case 65215: // UPDATE_EMPTY                                                         //07-03-05|0x0254
        switch(SrceDictUpdate(&StackName))                                                //07-03-05|0x0254
        {                                                                                 //07-03-05|0x0254
          case Success:                                                                   //07-03-05|0x0254
            StackRunFlag = 1;                                                             //07-03-05|0x0254
            StackState = 60206; // EMPTY_ELEMENT                                          //07-03-05|0x0254
            break;                                                                        //07-03-05|0x0254
          default:                                                                        //07-03-05|0x0254
            StackStatus = SystemError;                                                    //07-03-05|0x0254
            StackRunFlag = 0;                                                             //07-03-05|0x0254
            SystemMsg;                                                                    //07-03-05|0x0254
            break;                                                                        //07-03-05|0x0254
        }                                                                                 //07-03-05|0x0254
        break;                                                                            //07-03-05|0x0254
//---------------------------------------------------------------------------             //07-03-05|0x0255
      case 60206: // EMPTY_ELEMENT                                                        //07-03-05|0x0256
        MemSet(&StackElement, 0, sizeof(TOKENS));                                         //07-03-05|0x0256
        StackState = 14617; // EMPTY_EXIT                                                 //07-03-05|0x0256
        break;                                                                            //07-03-05|0x0256
//---------------------------------------------------------------------------             //07-03-05|0x0257
      case 14617: // EMPTY_EXIT                                                           //07-03-05|0x0258
        StackState = 53123; // EMPTY                                                      //07-03-05|0x0258
        StackStatus = Success;                                                            //07-03-05|0x0258
        StackRunFlag = 0;                                                                 //07-03-05|0x0258
        break;                                                                            //07-03-05|0x0258
//***************************************************************************             //07-03-05|0x0259
//****                                                                  *****             //07-03-05|0x025a
//****  STACK IS NOT EMPTY -- UPDATE CURRENT                            *****             //07-03-05|0x025b
//****                                                                  *****             //07-03-05|0x025c
//***************************************************************************             //07-03-05|0x025d
      case 28337: // NO_CURRENTS                                                          //07-03-05|0x025e
        NameNoTokens = 3;                                                                 //07-03-05|0x025e
        StackState = 6429; // LOAD_LEVEL                                                  //07-03-05|0x025e
        break;                                                                            //07-03-05|0x025e
//---------------------------------------------------------------------------             //07-03-05|0x025f
      case 6429: // LOAD_LEVEL                                                            //07-03-05|0x0260
        LoadStackLevel;                                                                   //07-03-05|0x0260
        StackState = 25259; // UPDATE_CURRENT                                             //07-03-05|0x0260
        break;                                                                            //07-03-05|0x0260
//---------------------------------------------------------------------------             //07-03-05|0x0261
      case 25259: // UPDATE_CURRENT                                                       //07-03-05|0x0262
        switch(SrceDictUpdate(&StackName))                                                //07-03-05|0x0262
        {                                                                                 //07-03-05|0x0262
          case Success:                                                                   //07-03-05|0x0262
            StackRunFlag = 1;                                                             //07-03-05|0x0262
            StackState = 40589; // RESET_ELEMENT                                          //07-03-05|0x0262
            break;                                                                        //07-03-05|0x0262
          default:                                                                        //07-03-05|0x0262
            StackStatus = SystemError;                                                    //07-03-05|0x0262
            StackRunFlag = 0;                                                             //07-03-05|0x0262
            SystemMsg;                                                                    //07-03-05|0x0262
            break;                                                                        //07-03-05|0x0262
        }                                                                                 //07-03-05|0x0262
        break;                                                                            //07-03-05|0x0262
//***************************************************************************             //07-03-05|0x0263
//****                                                                  *****             //07-03-05|0x0264
//****  READ IN A NEW ELEMENT                                           *****             //07-03-05|0x0265
//****                                                                  *****             //07-03-05|0x0266
//***************************************************************************             //07-03-05|0x0267
      case 40589: // RESET_ELEMENT                                                        //07-03-05|0x0268
        MemSet(&StackElement, 0, sizeof(TOKENS));                                         //07-03-05|0x0268
        StackState = 27641; // NO_ELEMENTS                                                //07-03-05|0x0268
        break;                                                                            //07-03-05|0x0268
//---------------------------------------------------------------------------             //07-03-05|0x0269
      case 27641: // NO_ELEMENTS                                                          //07-03-05|0x026a
        switch(no_tokens())                                                               //07-03-05|0x026a
        {                                                                                 //07-03-05|0x026a
          case Success:                                                                   //07-03-05|0x026a
            StackRunFlag = 1;                                                             //07-03-05|0x026a
            StackState = 32295; // COPY_NAME                                              //07-03-05|0x026a
            break;                                                                        //07-03-05|0x026a
          default:                                                                        //07-03-05|0x026a
            StackStatus = SystemError;                                                    //07-03-05|0x026a
            StackRunFlag = 0;                                                             //07-03-05|0x026a
            SystemMsg;                                                                    //07-03-05|0x026a
            break;                                                                        //07-03-05|0x026a
        }                                                                                 //07-03-05|0x026a
        break;                                                                            //07-03-05|0x026a
//---------------------------------------------------------------------------             //07-03-05|0x026b
      case 32295: // COPY_NAME                                                            //07-03-05|0x026c
        switch(CopyString(StackDictAddr, CurrentAddr))                                    //07-03-05|0x026c
        {                                                                                 //07-03-05|0x026c
          case Success:                                                                   //07-03-05|0x026c
            StackRunFlag = 1;                                                             //07-03-05|0x026c
            StackState = 36314; // APPEND_LEVEL                                           //07-03-05|0x026c
            break;                                                                        //07-03-05|0x026c
          default:                                                                        //07-03-05|0x026c
            StackStatus = SystemError;                                                    //07-03-05|0x026c
            StackRunFlag = 0;                                                             //07-03-05|0x026c
            SystemMsg;                                                                    //07-03-05|0x026c
            break;                                                                        //07-03-05|0x026c
        }                                                                                 //07-03-05|0x026c
        break;                                                                            //07-03-05|0x026c
//---------------------------------------------------------------------------             //07-03-05|0x026d
      case 36314: // APPEND_LEVEL                                                         //07-03-05|0x026e
        switch(tab_data(StackDictAddr,StackLevelAddr))                                    //07-03-05|0x026e
        {                                                                                 //07-03-05|0x026e
          case Success:                                                                   //07-03-05|0x026e
            StackRunFlag = 1;                                                             //07-03-05|0x026e
            StackState = 29429; // GET_ELEMENTS                                           //07-03-05|0x026e
            break;                                                                        //07-03-05|0x026e
          default:                                                                        //07-03-05|0x026e
            StackStatus = SystemError;                                                    //07-03-05|0x026e
            StackRunFlag = 0;                                                             //07-03-05|0x026e
            SystemMsg;                                                                    //07-03-05|0x026e
            break;                                                                        //07-03-05|0x026e
        }                                                                                 //07-03-05|0x026e
        break;                                                                            //07-03-05|0x026e
//---------------------------------------------------------------------------             //07-03-05|0x026f
      case 29429: // GET_ELEMENTS                                                         //07-03-05|0x0270
        switch(get_elements())                                                            //07-03-05|0x0270
        {                                                                                 //07-03-05|0x0270
          case Success:                                                                   //07-03-05|0x0270
            StackRunFlag = 1;                                                             //07-03-05|0x0270
            StackState = 41668; // NONEMPTY_EXIT                                          //07-03-05|0x0270
            break;                                                                        //07-03-05|0x0270
          default:                                                                        //07-03-05|0x0270
            StackStatus = SystemError;                                                    //07-03-05|0x0270
            StackRunFlag = 0;                                                             //07-03-05|0x0270
            SystemMsg;                                                                    //07-03-05|0x0270
            break;                                                                        //07-03-05|0x0270
        }                                                                                 //07-03-05|0x0270
        break;                                                                            //07-03-05|0x0270
//---------------------------------------------------------------------------             //07-03-05|0x0271
      case 41668: // NONEMPTY_EXIT                                                        //07-03-05|0x0272
        StackState = 51250; // NOT_EMPTY                                                  //07-03-05|0x0272
        StackStatus = Success;                                                            //07-03-05|0x0272
        StackRunFlag = 0;                                                                 //07-03-05|0x0272
        break;                                                                            //07-03-05|0x0272
//***************************************************************************             //07-03-05|0x0273
      default:                                                                            //07-03-05|0x0274
        StackStatus = SystemError;                                                        //07-03-05|0x0274
        StackRunFlag = 0;                                                                 //07-03-05|0x0274
        SystemMsg;                                                                        //07-03-05|0x0274
        break;                                                                            //07-03-05|0x0274
    }                                                                                     //07-03-05|0x0274
  }                                                                                       //07-03-05|0x0274
//***************************************************************************             //07-03-05|0x0275
//***************************************************************************             //07-03-05|0x0276
    TestSample(pop_1);                                                                    //07-03-05|0x0277
    return(StackStatus);                                                                  //07-03-05|0x0278
}                                                                                         //07-03-05|0x0279
//                                                                                        //05-24-97|0x0279
//***************************************************************************             //07-03-16|0x027c
//***************************************************************************             //07-03-16|0x027d
//******                                                               ******             //07-03-16|0x027e
//******                             get                               ******             //07-03-16|0x027f
//******                                                               ******             //07-03-16|0x0280
//***************************************************************************             //07-03-16|0x0281
//***************************************************************************             //07-03-16|0x0282
//*******************************************************************************         //10-29-97|0x0285
//*******************************************************************************         //10-29-97|0x0285
// get                                                                                    //07-03-16|0x0285
//*******************************************************************************         //10-29-97|0x0285
//*******************************************************************************         //10-29-97|0x0285
UINT PRECSTACK::get(                                                                      //07-03-16|0x0285
    STRING_DATA_FAR StringAddr                                                            //07-03-16|0x0285
    ) {                                                                                   //07-03-16|0x0285
//*******************************************************************************         //10-29-97|0x0285
//***************************************************************************             //07-03-16|0x0287
//***************************************************************************             //07-03-16|0x0288
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-16|0x0289
//***************************************************************************             //07-03-16|0x028a
//****                                                                  *****             //07-03-16|0x028b
//****  STACK GET STATE MACHINE                                         *****             //07-03-16|0x028c
//****                                                                  *****             //07-03-16|0x028d
//***************************************************************************             //07-03-16|0x028e
  StackRunFlag = 1;                                                                       //07-03-16|0x028f
  while(StackRunFlag != 0)                                                                //07-03-16|0x028f
  {                                                                                       //07-03-16|0x028f
    switch(StackState)                                                                    //07-03-16|0x028f
    {                                                                                     //07-03-16|0x028f
//***************************************************************************             //07-03-16|0x0290
//****                                                                  *****             //07-03-16|0x0291
//****  EMPTY STACK COMES HERE                                          *****             //07-03-16|0x0292
//****                                                                  *****             //07-03-16|0x0293
//***************************************************************************             //07-03-16|0x0294
      case 53123: // EMPTY                                                                //07-03-16|0x0295
        switch(StackEmptyMsg)                                                             //07-03-16|0x0295
        {                                                                                 //07-03-16|0x0295
          case UserError:                                                                 //07-03-16|0x0295
            StackState = 4462; // INITIAL_BEGIN                                           //07-03-16|0x0295
            StackStatus = UserError;                                                      //07-03-16|0x0295
            StackRunFlag = 0;                                                             //07-03-16|0x0295
            break;                                                                        //07-03-16|0x0295
          default:                                                                        //07-03-16|0x0295
            StackStatus = SystemError;                                                    //07-03-16|0x0295
            StackRunFlag = 0;                                                             //07-03-16|0x0295
            SystemMsg;                                                                    //07-03-16|0x0295
            break;                                                                        //07-03-16|0x0295
        }                                                                                 //07-03-16|0x0295
        break;                                                                            //07-03-16|0x0295
//***************************************************************************             //07-03-16|0x0296
//****                                                                  *****             //07-03-16|0x0297
//****  STACK NOT EMPTY                                                 *****             //07-03-16|0x0298
//****                                                                  *****             //07-03-16|0x0299
//***************************************************************************             //07-03-16|0x029a
      case 51250: // NOT_EMPTY                                                            //07-03-16|0x029b
        switch(TestStackLevel)                                                            //07-03-16|0x029b
        {                                                                                 //07-03-16|0x029b
          case Yes:                                                                       //07-03-16|0x029b
            StackRunFlag = 1;                                                             //07-03-16|0x029b
            StackState = 11272; // ELEMENT_NO                                             //07-03-16|0x029b
            break;                                                                        //07-03-16|0x029b
          default:                                                                        //07-03-16|0x029b
            StackStatus = SystemError;                                                    //07-03-16|0x029b
            StackRunFlag = 0;                                                             //07-03-16|0x029b
            SystemMsg;                                                                    //07-03-16|0x029b
            break;                                                                        //07-03-16|0x029b
        }                                                                                 //07-03-16|0x029b
        break;                                                                            //07-03-16|0x029b
//---------------------------------------------------------------------------             //07-03-16|0x029c
      case 11272: // ELEMENT_NO                                                           //07-03-16|0x029d
        StackRelPos=((StackAbsPosUlong-1)%8)+2;                                           //07-03-16|0x029d
        StackState = 34780; // COPY_ELEMENT                                               //07-03-16|0x029d
        break;                                                                            //07-03-16|0x029d
//---------------------------------------------------------------------------             //07-03-16|0x029e
      case 34780: // COPY_ELEMENT                                                         //07-03-16|0x029f
        switch(FetchElement(StringAddr))                                                  //07-03-16|0x029f
        {                                                                                 //07-03-16|0x029f
          case Success:                                                                   //07-03-16|0x029f
            StackRunFlag = 1;                                                             //07-03-16|0x029f
            StackState = 41668; // NONEMPTY_EXIT                                          //07-03-16|0x029f
            break;                                                                        //07-03-16|0x029f
          default:                                                                        //07-03-16|0x029f
            StackStatus = SystemError;                                                    //07-03-16|0x029f
            StackRunFlag = 0;                                                             //07-03-16|0x029f
            SystemMsg;                                                                    //07-03-16|0x029f
            break;                                                                        //07-03-16|0x029f
        }                                                                                 //07-03-16|0x029f
        break;                                                                            //07-03-16|0x029f
//---------------------------------------------------------------------------             //07-03-16|0x02a0
      case 41668: // NONEMPTY_EXIT                                                        //07-03-16|0x02a1
        StackState = 51250; // NOT_EMPTY                                                  //07-03-16|0x02a1
        StackStatus = Success;                                                            //07-03-16|0x02a1
        StackRunFlag = 0;                                                                 //07-03-16|0x02a1
        break;                                                                            //07-03-16|0x02a1
//***************************************************************************             //07-03-16|0x02a2
      default:                                                                            //07-03-16|0x02a3
        StackStatus = SystemError;                                                        //07-03-16|0x02a3
        StackRunFlag = 0;                                                                 //07-03-16|0x02a3
        SystemMsg;                                                                        //07-03-16|0x02a3
        break;                                                                            //07-03-16|0x02a3
    }                                                                                     //07-03-16|0x02a3
  }                                                                                       //07-03-16|0x02a3
//***************************************************************************             //07-03-16|0x02a4
//***************************************************************************             //07-03-16|0x02a5
    TestSample(get_1);                                                                    //07-03-16|0x02a6
    return(StackStatus);                                                                  //07-03-16|0x02a7
}                                                                                         //07-03-16|0x02a8
//                                                                                        //05-24-97|0x02a8
//***************************************************************************             //07-09-13|0x02ab
//***************************************************************************             //07-09-13|0x02ac
//******                                                               ******             //07-09-13|0x02ad
//******                             stack_level                       ******             //07-09-13|0x02ae
//******                                                               ******             //07-09-13|0x02af
//***************************************************************************             //07-09-13|0x02b0
//***************************************************************************             //07-09-13|0x02b1
//*******************************************************************************         //10-29-97|0x02b6
//*******************************************************************************         //10-29-97|0x02b6
// stack_level                                                                            //07-09-13|0x02b6
//*******************************************************************************         //10-29-97|0x02b6
//*******************************************************************************         //10-29-97|0x02b6
UINT PRECSTACK::stack_level(                                                              //07-09-13|0x02b6
    ULONG_FAR LevelAddr                                                                   //07-09-13|0x02b6
    ) {                                                                                   //07-09-13|0x02b6
//*******************************************************************************         //10-29-97|0x02b6
//***************************************************************************             //07-09-13|0x02ba
//***************************************************************************             //07-09-13|0x02bb
//***************************************************************************             //07-09-13|0x02bc
//****                                                                  *****             //07-09-13|0x02bd
//****  STACK STACK LEVEL STATE MACHINE                                 *****             //07-09-13|0x02be
//****                                                                  *****             //07-09-13|0x02bf
//***************************************************************************             //07-09-13|0x02c0
  StackRunFlag = 1;                                                                       //07-09-13|0x02c1
  while(StackRunFlag != 0)                                                                //07-09-13|0x02c1
  {                                                                                       //07-09-13|0x02c1
    switch(StackState)                                                                    //07-09-13|0x02c1
    {                                                                                     //07-09-13|0x02c1
//***************************************************************************             //07-09-13|0x02c2
//****                                                                  *****             //07-09-13|0x02c3
//****  EMPTY STACK COMES HERE                                          *****             //07-09-13|0x02c4
//****                                                                  *****             //07-09-13|0x02c5
//***************************************************************************             //07-09-13|0x02c6
      case 53123: // EMPTY                                                                //07-09-13|0x02c7
        *LevelAddr=StackAbsPosUlong;                                                      //07-09-13|0x02c7
        StackState = 14617; // EMPTY_EXIT                                                 //07-09-13|0x02c7
        break;                                                                            //07-09-13|0x02c7
//---------------------------------------------------------------------------             //07-09-13|0x02c8
      case 14617: // EMPTY_EXIT                                                           //07-09-13|0x02c9
        StackState = 53123; // EMPTY                                                      //07-09-13|0x02c9
        StackStatus = Success;                                                            //07-09-13|0x02c9
        StackRunFlag = 0;                                                                 //07-09-13|0x02c9
        break;                                                                            //07-09-13|0x02c9
//***************************************************************************             //07-09-13|0x02ca
//****                                                                  *****             //07-09-13|0x02cb
//****  STACK LEVEL IS REPORTED                                         *****             //07-09-13|0x02cc
//****                                                                  *****             //07-09-13|0x02cd
//***************************************************************************             //07-09-13|0x02ce
      case 51250: // NOT_EMPTY                                                            //07-09-13|0x02cf
        *LevelAddr=StackAbsPosUlong;                                                      //07-09-13|0x02cf
        StackState = 41668; // NONEMPTY_EXIT                                              //07-09-13|0x02cf
        break;                                                                            //07-09-13|0x02cf
//---------------------------------------------------------------------------             //07-09-13|0x02d0
      case 41668: // NONEMPTY_EXIT                                                        //07-09-13|0x02d1
        StackState = 51250; // NOT_EMPTY                                                  //07-09-13|0x02d1
        StackStatus = Success;                                                            //07-09-13|0x02d1
        StackRunFlag = 0;                                                                 //07-09-13|0x02d1
        break;                                                                            //07-09-13|0x02d1
//***************************************************************************             //07-09-13|0x02d2
      default:                                                                            //07-09-13|0x02d3
        StackStatus = SystemError;                                                        //07-09-13|0x02d3
        StackRunFlag = 0;                                                                 //07-09-13|0x02d3
        SystemMsg;                                                                        //07-09-13|0x02d3
        break;                                                                            //07-09-13|0x02d3
    }                                                                                     //07-09-13|0x02d3
  }                                                                                       //07-09-13|0x02d3
//***************************************************************************             //07-09-13|0x02d4
//***************************************************************************             //07-09-13|0x02d5
    TestSample(stack_level_1);                                                            //07-09-13|0x02d6
    return(StackStatus);                                                                  //07-09-13|0x02d7
}                                                                                         //07-09-13|0x02d8
//                                                                                        //05-24-97|0x02d8
//***************************************************************************             //07-09-13|0x02db
//***************************************************************************             //06-12-22|0x02dc
//******                                                               ******             //06-12-22|0x02dd
//******                             tokens_test                       ******             //06-12-22|0x02de
//******                                                               ******             //06-12-22|0x02df
//***************************************************************************             //06-12-22|0x02e0
//***************************************************************************             //06-12-22|0x02e1
//*******************************************************************************         //10-29-97|0x02e5
//*******************************************************************************         //10-29-97|0x02e5
// test_tokens                                                                            //06-12-22|0x02e5
//*******************************************************************************         //10-29-97|0x02e5
//*******************************************************************************         //10-29-97|0x02e5
UINT PRECSTACK::test_tokens(                                                              //06-12-22|0x02e5
    SINT MinToken,                                                                        //06-12-22|0x02e5
    TOKENS_FAR TokensAddr                                                                 //06-12-22|0x02e5
    ) {                                                                                   //06-12-22|0x02e5
//*******************************************************************************         //10-29-97|0x02e5
//***************************************************************************             //06-12-22|0x02e7
//***************************************************************************             //06-12-22|0x02e8
  SINT offset;                                                                       //06-12-22|0x02e9
  SINT index;                                                                        //06-12-22|0x02ea
//***************************************************************************             //06-12-22|0x02eb
//***************************************************************************             //06-12-22|0x02ec
    if(MinToken >= 9)                                       ReturnSystemError             //06-12-22|0x02ed
    if(MinToken >= TokensNoTokens)                          ReturnSystemError             //06-12-22|0x02ee
//***************************************************************************             //06-12-22|0x02ef
//***************************************************************************             //06-12-22|0x02f0
    index   = TokensNoTokens;                                                             //06-12-22|0x02f1
    offset  = 0;                                                                          //06-12-22|0x02f2
//***************************************************************************             //06-12-22|0x02f3
    while(index > MinToken)                                                               //06-12-22|0x02f4
      {                                                                                   //06-12-22|0x02f5
        index     -= 1;                                                                   //06-12-22|0x02f6
        switch(StackTest(offset, TokensTokenAddr(index)))                                 //06-12-22|0x02f7
          {                                                                               //06-12-22|0x02f8
            case Yes:                                                  break;             //06-12-22|0x02f9
            case No:     TestSample(TestTokensFalse);             return(No);             //06-12-22|0x02fa
            default:                                        ReturnSystemError             //06-12-22|0x02fb
            }                                                                             //06-12-22|0x02fc
        offset -= 1;                                                                      //06-12-22|0x02fd
        }                                                                                 //06-12-22|0x02fe
    TestSample(TestTokensTrue);                                                           //06-12-22|0x02ff
    return(Yes);                                                                          //06-12-22|0x0300
}                                                                                         //06-12-22|0x0301
//                                                                                        //05-24-97|0x0301
//***************************************************************************             //04-09-06|0x0304
//***************************************************************************             //04-09-06|0x0305
//******                                                               ******             //04-09-06|0x0306
//******                             test                              ******             //04-09-06|0x0307
//******                                                               ******             //04-09-06|0x0308
//***************************************************************************             //04-09-06|0x0309
//***************************************************************************             //04-09-06|0x030a
//*******************************************************************************         //10-29-97|0x030e
//*******************************************************************************         //10-29-97|0x030e
// test                                                                                   //06-12-22|0x030e
//*******************************************************************************         //10-29-97|0x030e
//*******************************************************************************         //10-29-97|0x030e
UINT PRECSTACK::test(                                                                     //06-12-22|0x030e
    SINT Offset,                                                                          //06-12-22|0x030e
    STRING_DATA_FAR StringAddr                                                            //06-12-22|0x030e
    ) {                                                                                   //06-12-22|0x030e
//*******************************************************************************         //10-29-97|0x030e
//***************************************************************************             //04-09-06|0x0312
//***************************************************************************             //04-09-06|0x0313
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-05|0x0314
//***************************************************************************             //07-03-05|0x0315
//****                                                                  *****             //07-03-05|0x0316
//****  STACK TEST STATE MACHINE                                        *****             //07-03-05|0x0317
//****                                                                  *****             //07-03-05|0x0318
//***************************************************************************             //07-03-05|0x0319
  StackRunFlag = 1;                                                                       //07-03-05|0x031a
  while(StackRunFlag != 0)                                                                //07-03-05|0x031a
  {                                                                                       //07-03-05|0x031a
    switch(StackState)                                                                    //07-03-05|0x031a
    {                                                                                     //07-03-05|0x031a
//***************************************************************************             //07-03-05|0x031b
//****                                                                  *****             //07-03-26|0x031c
//****  EMPTY STACK COMES HERE                                          *****             //07-03-26|0x031d
//****                                                                  *****             //07-03-26|0x031e
//***************************************************************************             //07-03-26|0x031f
      case 53123: // EMPTY                                                                //07-03-26|0x0320
        switch(add_stack_level(0))                                                        //07-03-26|0x0320
        {                                                                                 //07-03-26|0x0320
          case Zero:                                                                      //07-03-26|0x0320
            StackRunFlag = 1;                                                             //07-03-26|0x0320
            StackState = 1563; // TEST_EMPTY                                              //07-03-26|0x0320
            break;                                                                        //07-03-26|0x0320
          default:                                                                        //07-03-26|0x0320
            StackStatus = SystemError;                                                    //07-03-26|0x0320
            StackRunFlag = 0;                                                             //07-03-26|0x0320
            SystemMsg;                                                                    //07-03-26|0x0320
            break;                                                                        //07-03-26|0x0320
        }                                                                                 //07-03-26|0x0320
        break;                                                                            //07-03-26|0x0320
//***************************************************************************             //07-03-05|0x0321
//****                                                                  *****             //07-03-05|0x0322
//****  NON-EMPTY STACK COMES HERE                                      *****             //07-03-05|0x0323
//****                                                                  *****             //07-03-05|0x0324
//***************************************************************************             //07-03-05|0x0325
      case 51250: // NOT_EMPTY                                                            //07-03-05|0x0326
        switch(add_stack_level(Offset))                                                   //07-03-05|0x0326
        {                                                                                 //07-03-05|0x0326
          case Equal:                                                                     //07-03-05|0x0326
            StackRunFlag = 1;                                                             //07-03-05|0x0326
            StackState = 11272; // ELEMENT_NO                                             //07-03-05|0x0326
            break;                                                                        //07-03-05|0x0326
          case Less:                                                                      //07-03-05|0x0326
            StackRunFlag = 1;                                                             //07-03-05|0x0326
            StackState = 11272; // ELEMENT_NO                                             //07-03-05|0x0326
            break;                                                                        //07-03-05|0x0326
          case Zero:                                                                      //07-03-05|0x0326
            StackRunFlag = 1;                                                             //07-03-05|0x0326
            StackState = 26698; // RESET_NO                                               //07-03-05|0x0326
            break;                                                                        //07-03-05|0x0326
          case Minus:                                                                     //07-03-05|0x0326
            StackRunFlag = 1;                                                             //07-03-05|0x0326
            StackState = 60777; // TEST_NO                                                //07-03-05|0x0326
            break;                                                                        //07-03-05|0x0326
          default:                                                                        //07-03-05|0x0326
            StackStatus = SystemError;                                                    //07-03-05|0x0326
            StackRunFlag = 0;                                                             //07-03-05|0x0326
            SystemMsg;                                                                    //07-03-05|0x0326
            break;                                                                        //07-03-05|0x0326
        }                                                                                 //07-03-05|0x0326
        break;                                                                            //07-03-05|0x0326
//---------------------------------------------------------------------------             //07-03-03|0x0327
      case 11272: // ELEMENT_NO                                                           //07-03-05|0x0328
        StackRelPos=((StackAbsPosUlong-1)%8)+2;                                           //07-03-05|0x0328
        StackState = 50296; // TEST                                                       //07-03-05|0x0328
        break;                                                                            //07-03-05|0x0328
//---------------------------------------------------------------------------             //07-03-05|0x0329
      case 50296: // TEST                                                                 //07-03-05|0x032a
        switch(TestElement(StringAddr))                                                   //07-03-05|0x032a
        {                                                                                 //07-03-05|0x032a
          case Yes:                                                                       //07-03-05|0x032a
            StackRunFlag = 1;                                                             //07-03-05|0x032a
            StackState = 3191; // RESET_YES                                               //07-03-05|0x032a
            break;                                                                        //07-03-05|0x032a
          case No:                                                                        //07-03-05|0x032a
            StackRunFlag = 1;                                                             //07-03-05|0x032a
            StackState = 26698; // RESET_NO                                               //07-03-05|0x032a
            break;                                                                        //07-03-05|0x032a
          default:                                                                        //07-03-05|0x032a
            StackStatus = SystemError;                                                    //07-03-05|0x032a
            StackRunFlag = 0;                                                             //07-03-05|0x032a
            SystemMsg;                                                                    //07-03-05|0x032a
            break;                                                                        //07-03-05|0x032a
        }                                                                                 //07-03-05|0x032a
        break;                                                                            //07-03-05|0x032a
//***************************************************************************             //07-03-05|0x032b
      case 26698: // RESET_NO                                                             //07-03-05|0x032c
        switch(add_stack_level(-Offset))                                                  //07-03-05|0x032c
        {                                                                                 //07-03-05|0x032c
          case Equal:                                                                     //07-03-05|0x032c
            StackRunFlag = 1;                                                             //07-03-05|0x032c
            StackState = 60777; // TEST_NO                                                //07-03-05|0x032c
            break;                                                                        //07-03-05|0x032c
          case Great:                                                                     //07-03-05|0x032c
            StackRunFlag = 1;                                                             //07-03-05|0x032c
            StackState = 60777; // TEST_NO                                                //07-03-05|0x032c
            break;                                                                        //07-03-05|0x032c
          default:                                                                        //07-03-05|0x032c
            StackStatus = SystemError;                                                    //07-03-05|0x032c
            StackRunFlag = 0;                                                             //07-03-05|0x032c
            SystemMsg;                                                                    //07-03-05|0x032c
            break;                                                                        //07-03-05|0x032c
        }                                                                                 //07-03-05|0x032c
        break;                                                                            //07-03-05|0x032c
//---------------------------------------------------------------------------             //07-03-05|0x032d
      case 3191: // RESET_YES                                                             //07-03-05|0x032e
        switch(add_stack_level(-Offset))                                                  //07-03-05|0x032e
        {                                                                                 //07-03-05|0x032e
          case Equal:                                                                     //07-03-05|0x032e
            StackRunFlag = 1;                                                             //07-03-05|0x032e
            StackState = 54374; // TEST_YES                                               //07-03-05|0x032e
            break;                                                                        //07-03-05|0x032e
          case Great:                                                                     //07-03-05|0x032e
            StackRunFlag = 1;                                                             //07-03-05|0x032e
            StackState = 54374; // TEST_YES                                               //07-03-05|0x032e
            break;                                                                        //07-03-05|0x032e
          default:                                                                        //07-03-05|0x032e
            StackStatus = SystemError;                                                    //07-03-05|0x032e
            StackRunFlag = 0;                                                             //07-03-05|0x032e
            SystemMsg;                                                                    //07-03-05|0x032e
            break;                                                                        //07-03-05|0x032e
        }                                                                                 //07-03-05|0x032e
        break;                                                                            //07-03-05|0x032e
//***************************************************************************             //07-03-05|0x032f
//****                                                                  *****             //07-03-05|0x0330
//****  EXITS COME HERE                                                 *****             //07-03-05|0x0331
//****                                                                  *****             //07-03-05|0x0332
//***************************************************************************             //07-03-05|0x0333
      case 1563: // TEST_EMPTY                                                            //07-03-26|0x0334
        StackState = 53123; // EMPTY                                                      //07-03-26|0x0334
        StackStatus = No;                                                                 //07-03-26|0x0334
        StackRunFlag = 0;                                                                 //07-03-26|0x0334
        break;                                                                            //07-03-26|0x0334
//---------------------------------------------------------------------------             //07-03-05|0x0335
      case 60777: // TEST_NO                                                              //07-03-05|0x0336
        StackState = 51250; // NOT_EMPTY                                                  //07-03-05|0x0336
        StackStatus = No;                                                                 //07-03-05|0x0336
        StackRunFlag = 0;                                                                 //07-03-05|0x0336
        break;                                                                            //07-03-05|0x0336
//---------------------------------------------------------------------------             //07-03-05|0x0337
      case 54374: // TEST_YES                                                             //07-03-05|0x0338
        StackState = 51250; // NOT_EMPTY                                                  //07-03-05|0x0338
        StackStatus = Yes;                                                                //07-03-05|0x0338
        StackRunFlag = 0;                                                                 //07-03-05|0x0338
        break;                                                                            //07-03-05|0x0338
//***************************************************************************             //07-03-05|0x0339
      default:                                                                            //07-03-05|0x033a
        StackStatus = SystemError;                                                        //07-03-05|0x033a
        StackRunFlag = 0;                                                                 //07-03-05|0x033a
        SystemMsg;                                                                        //07-03-05|0x033a
        break;                                                                            //07-03-05|0x033a
    }                                                                                     //07-03-05|0x033a
  }                                                                                       //07-03-05|0x033a
//***************************************************************************             //07-03-05|0x033b
//***************************************************************************             //07-03-05|0x033c
    TestSample(test_1);                                                                   //07-03-05|0x033d
    return(StackStatus);                                                                  //07-03-05|0x033e
}                                                                                         //07-03-05|0x033f
//                                                                                        //05-24-97|0x033f
//***************************************************************************             //05-10-15|0x0342
//***************************************************************************             //05-10-15|0x0343
//******                                                               ******             //05-10-15|0x0344
//******                            empty_test                         ******             //05-10-15|0x0345
//******                                                               ******             //05-10-15|0x0346
//***************************************************************************             //05-10-15|0x0347
//***************************************************************************             //05-10-15|0x0348
//*******************************************************************************         //10-29-97|0x034c
//*******************************************************************************         //10-29-97|0x034c
// empty_test                                                                             //05-10-15|0x034c
//*******************************************************************************         //10-29-97|0x034c
//*******************************************************************************         //10-29-97|0x034c
UINT PRECSTACK::empty_test(void) {                                                        //05-10-15|0x034c
//*******************************************************************************         //10-29-97|0x034c
//***************************************************************************             //05-10-15|0x0350
//***************************************************************************             //05-10-15|0x0351
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-05|0x0352
//***************************************************************************             //07-03-05|0x0353
//****                                                                  *****             //07-03-05|0x0354
//****  STACK TEST STATE MACHINE                                        *****             //07-03-05|0x0355
//****                                                                  *****             //07-03-05|0x0356
//***************************************************************************             //07-03-05|0x0357
  StackRunFlag = 1;                                                                       //07-03-05|0x0358
  while(StackRunFlag != 0)                                                                //07-03-05|0x0358
  {                                                                                       //07-03-05|0x0358
    switch(StackState)                                                                    //07-03-05|0x0358
    {                                                                                     //07-03-05|0x0358
//***************************************************************************             //07-03-05|0x0359
//****                                                                  *****             //07-03-05|0x035a
//****  NON-EMPTY STACK COMES HERE                                      *****             //07-03-05|0x035b
//****                                                                  *****             //07-03-05|0x035c
//***************************************************************************             //07-03-05|0x035d
      case 51250: // NOT_EMPTY                                                            //07-03-05|0x035e
        switch(add_stack_level(0))                                                        //07-03-05|0x035e
        {                                                                                 //07-03-05|0x035e
          case Equal:                                                                     //07-03-05|0x035e
            StackRunFlag = 1;                                                             //07-03-05|0x035e
            StackState = 6981; // NOT_EMPTY_OK                                            //07-03-05|0x035e
            break;                                                                        //07-03-05|0x035e
          default:                                                                        //07-03-05|0x035e
            StackStatus = SystemError;                                                    //07-03-05|0x035e
            StackRunFlag = 0;                                                             //07-03-05|0x035e
            SystemMsg;                                                                    //07-03-05|0x035e
            break;                                                                        //07-03-05|0x035e
        }                                                                                 //07-03-05|0x035e
        break;                                                                            //07-03-05|0x035e
//---------------------------------------------------------------------------             //07-03-05|0x035f
      case 6981: // NOT_EMPTY_OK                                                          //07-03-05|0x0360
        StackState = 51250; // NOT_EMPTY                                                  //07-03-05|0x0360
        StackStatus = Yes;                                                                //07-03-05|0x0360
        StackRunFlag = 0;                                                                 //07-03-05|0x0360
        break;                                                                            //07-03-05|0x0360
//***************************************************************************             //07-03-05|0x0361
//****                                                                  *****             //07-03-05|0x0362
//****  EMPTY STACK COMES HERE                                          *****             //07-03-05|0x0363
//****                                                                  *****             //07-03-05|0x0364
//***************************************************************************             //07-03-05|0x0365
      case 53123: // EMPTY                                                                //07-08-04|0x0366
        switch(add_stack_level(0))                                                        //07-08-04|0x0366
        {                                                                                 //07-08-04|0x0366
          case Zero:                                                                      //07-08-04|0x0366
            StackRunFlag = 1;                                                             //07-08-04|0x0366
            StackState = 58689; // EMPTY_OK                                               //07-08-04|0x0366
            break;                                                                        //07-08-04|0x0366
          default:                                                                        //07-08-04|0x0366
            StackStatus = SystemError;                                                    //07-08-04|0x0366
            StackRunFlag = 0;                                                             //07-08-04|0x0366
            SystemMsg;                                                                    //07-08-04|0x0366
            break;                                                                        //07-08-04|0x0366
        }                                                                                 //07-08-04|0x0366
        break;                                                                            //07-08-04|0x0366
//---------------------------------------------------------------------------             //07-08-04|0x0367
      case 58689: // EMPTY_OK                                                             //07-08-04|0x0368
        StackState = 53123; // EMPTY                                                      //07-08-04|0x0368
        StackStatus = No;                                                                 //07-08-04|0x0368
        StackRunFlag = 0;                                                                 //07-08-04|0x0368
        break;                                                                            //07-08-04|0x0368
//***************************************************************************             //07-03-05|0x0369
      default:                                                                            //07-03-05|0x036a
        StackStatus = SystemError;                                                        //07-03-05|0x036a
        StackRunFlag = 0;                                                                 //07-03-05|0x036a
        SystemMsg;                                                                        //07-03-05|0x036a
        break;                                                                            //07-03-05|0x036a
    }                                                                                     //07-03-05|0x036a
  }                                                                                       //07-03-05|0x036a
//***************************************************************************             //07-03-05|0x036c
//***************************************************************************             //07-03-05|0x036d
    TestSample(empty_test_1);                                                             //07-03-05|0x036e
    return(StackStatus);                                                                  //07-03-05|0x036f
}                                                                                         //07-03-05|0x0370
//                                                                                        //05-24-97|0x0370
//***************************************************************************             //05-10-15|0x0373
//***************************************************************************             //05-10-15|0x0374
//******                                                               ******             //05-10-15|0x0375
//******                            all_empty_test                     ******             //05-10-15|0x0376
//******                                                               ******             //05-10-15|0x0377
//***************************************************************************             //05-10-15|0x0378
//***************************************************************************             //05-10-15|0x0379
//*******************************************************************************         //10-29-97|0x037e
//*******************************************************************************         //10-29-97|0x037e
// all_empty_test                                                                         //05-10-15|0x037e
//*******************************************************************************         //10-29-97|0x037e
//*******************************************************************************         //10-29-97|0x037e
UINT PRECSTACK::all_empty_test(void) {                                                    //05-10-15|0x037e
//*******************************************************************************         //10-29-97|0x037e
//***************************************************************************             //05-10-15|0x0382
//***************************************************************************             //05-10-15|0x0383
    if(stack_addr == 0)                                ReturnSystemError                  //07-03-05|0x0384
//***************************************************************************             //07-03-05|0x0385
    if(StackTotalPos == 0)                       return_no(all_empty_test_1);             //07-03-05|0x0386
    if(StackTotalPos >  0)                      return_yes(all_empty_test_2);             //07-03-05|0x0387
    ReturnSystemError;                                                                    //07-03-05|0x0388
}                                                                                         //07-03-05|0x0389
//                                                                                        //05-24-97|0x0389
//***************************************************************************             //07-03-03|0x038c
//***************************************************************************             //07-03-03|0x038d
//******                                                               ******             //07-03-03|0x038e
//******           tab_string(Output, Input)                           ******             //07-03-03|0x038f
//******                                                               ******             //07-03-03|0x0390
//***************************************************************************             //07-03-03|0x0391
//***************************************************************************             //07-03-03|0x0392
//*******************************************************************************         //10-29-97|0x0397
//*******************************************************************************         //10-29-97|0x0397
// tab_string                                                                             //07-03-03|0x0397
//*******************************************************************************         //10-29-97|0x0397
//*******************************************************************************         //10-29-97|0x0397
UINT PRECSTACK::tab_string(                                                               //07-03-03|0x0397
    STRING_DATA_FAR StringAddr,                                                           //07-03-03|0x0397
    SCHAR_FAR Input                                                                       //07-03-03|0x0397
    ) {                                                                                   //07-03-03|0x0397
//*******************************************************************************         //10-29-97|0x0397
  WORDS size;                                                                        //07-03-03|0x039a
//***************************************************************************             //07-03-03|0x039b
    size.ulong  = StringLength;                                                           //07-03-03|0x039c
    size.ulong += 1;                                                                      //07-03-03|0x039d
    size.ulong += StrLen(Input);                                                          //07-03-03|0x039e
    if(size.ulong >= 255)                                   ReturnSystemError             //07-03-03|0x039f
    if(StringChar(StringLength) != 0)                       ReturnSystemError             //07-03-03|0x03a0
//***************************************************************************             //07-03-03|0x03a1
    StringChar(StringLength) =  '\x09';                                                   //07-03-03|0x03a2
    StrCat(StringLineAddr,  Input);                                                       //07-03-03|0x03a3
    StringLength = size.word0;                                                            //07-03-03|0x03a4
//***************************************************************************             //07-03-03|0x03a5
    if(StringChar(StringLength) != 0)                       ReturnSystemError             //07-03-03|0x03a6
    if(size.ulong != StrLen(StringLineAddr))                ReturnSystemError             //07-03-03|0x03a7
//***************************************************************************             //07-09-13|0x03a8
    StringType = I_USER_STACK;                                                            //07-09-13|0x03a9
    return_test(tab_string_1);                                                            //07-03-03|0x03aa
}                                                                                         //07-03-03|0x03ab
//                                                                                        //05-24-97|0x03ab
//***************************************************************************             //07-03-03|0x03ae
//***************************************************************************             //07-03-03|0x03af
//******                                                               ******             //07-03-03|0x03b0
//******           tab_data(Output, Input)                             ******             //07-03-03|0x03b1
//******                                                               ******             //07-03-03|0x03b2
//***************************************************************************             //07-03-03|0x03b3
//***************************************************************************             //07-03-03|0x03b4
//*******************************************************************************         //10-29-97|0x03b9
//*******************************************************************************         //10-29-97|0x03b9
// tab_data                                                                               //07-03-03|0x03b9
//*******************************************************************************         //10-29-97|0x03b9
//*******************************************************************************         //10-29-97|0x03b9
UINT PRECSTACK::tab_data(                                                                 //07-03-03|0x03b9
    STRING_DATA_FAR StringAddr,                                                           //07-03-03|0x03b9
    STRING_DATA_FAR InputAddr                                                             //07-03-03|0x03b9
    ) {                                                                                   //07-03-03|0x03b9
//*******************************************************************************         //10-29-97|0x03b9
//***************************************************************************             //07-03-03|0x03bc
//***************************************************************************             //07-03-03|0x03bd
  WORDS size;                                                                        //07-03-03|0x03be
//***************************************************************************             //07-03-03|0x03bf
    size.ulong  = StringLength;                                                           //07-03-03|0x03c0
    size.ulong += 1;                                                                      //07-03-03|0x03c1
    size.ulong += InputLength;                                                            //07-03-03|0x03c2
    if(size.ulong >= 255)                                   ReturnSystemError             //07-03-03|0x03c3
    if(StringChar(StringLength) != 0)                       ReturnSystemError             //07-03-03|0x03c4
//***************************************************************************             //07-03-03|0x03c5
    StringChar(StringLength) =  '\x09';                                                   //07-03-03|0x03c6
    StrCat(StringLineAddr,  InputLineAddr);                                               //07-03-03|0x03c7
    StringLength = size.word0;                                                            //07-03-03|0x03c8
//***************************************************************************             //07-03-03|0x03c9
    if(StringChar(StringLength) != 0)                       ReturnSystemError             //07-03-03|0x03ca
    if(size.ulong != StrLen(StringLineAddr))                ReturnSystemError             //07-03-03|0x03cb
//***************************************************************************             //07-09-13|0x03cc
    StringType = I_USER_STACK;                                                            //07-09-13|0x03cd
    return_test(tab_string_1);                                                            //07-03-03|0x03ce
}                                                                                         //07-03-03|0x03cf
//                                                                                        //05-24-97|0x03cf
//***************************************************************************             //07-03-05|0x03d2
//***************************************************************************             //07-03-05|0x03d3
//******                                                               ******             //07-03-05|0x03d4
//******           store_stack_level()                                 ******             //07-03-05|0x03d5
//******                                                               ******             //07-03-05|0x03d6
//***************************************************************************             //07-03-05|0x03d7
//***************************************************************************             //07-03-05|0x03d8
//*******************************************************************************         //10-29-97|0x03dc
//*******************************************************************************         //10-29-97|0x03dc
// store_stack_level                                                                      //07-03-05|0x03dc
//*******************************************************************************         //10-29-97|0x03dc
//*******************************************************************************         //10-29-97|0x03dc
UINT PRECSTACK::store_stack_level(void) {                                                 //07-03-05|0x03dc
//*******************************************************************************         //10-29-97|0x03dc
    if(StackLevelLength != 1)                               ReturnSystemError             //07-03-05|0x03df
    if(StackLevel       == 0)                               ReturnSystemError             //07-03-05|0x03e0
    StackAbsPosChar = StackLevel;                                                         //07-03-05|0x03e1
    return_test(stack_level_1);                                                           //07-03-05|0x03e2
}                                                                                         //07-03-05|0x03e3
//                                                                                        //05-24-97|0x03e3
//***************************************************************************             //07-03-03|0x03e6
//***************************************************************************             //07-03-03|0x03e7
//******                                                               ******             //07-03-03|0x03e8
//******           no_tokens()                                         ******             //07-03-03|0x03e9
//******                                                               ******             //07-03-03|0x03ea
//***************************************************************************             //07-03-03|0x03eb
//***************************************************************************             //07-03-03|0x03ec
//*******************************************************************************         //10-29-97|0x03f0
//*******************************************************************************         //10-29-97|0x03f0
// no_tokens                                                                              //07-03-03|0x03f0
//*******************************************************************************         //10-29-97|0x03f0
//*******************************************************************************         //10-29-97|0x03f0
UINT PRECSTACK::no_tokens(void) {                                                         //07-03-03|0x03f0
//*******************************************************************************         //10-29-97|0x03f0
//***************************************************************************             //07-03-03|0x03f3
//***************************************************************************             //07-03-03|0x03f4
    if(StackAbsPosUlong == 0)                               ReturnSystemError             //07-03-03|0x03f5
//***************************************************************************             //07-03-03|0x03f6
    if(StackAbsPosUlong < 9)                                                              //07-03-03|0x03f7
      {                                                                                   //07-03-03|0x03f8
        ElementNoTokens = StackAbsPosUint + 2;                                            //07-03-03|0x03f9
        }                                                                                 //07-03-03|0x03fa
      else {                                                                              //07-03-03|0x03fb
        ElementNoTokens = 10;                                                             //07-03-03|0x03fc
        }                                                                                 //07-03-03|0x03fd
//***************************************************************************             //07-03-03|0x03fe
    return_test(no_tokens_1);                                                             //07-03-03|0x03ff
}                                                                                         //07-03-03|0x0400
//                                                                                        //05-24-97|0x0400
//***************************************************************************             //07-03-05|0x0404
//***************************************************************************             //07-03-05|0x0405
//******                                                               ******             //07-03-05|0x0406
//******           get_elements()                                      ******             //07-03-05|0x0407
//******                                                               ******             //07-03-05|0x0408
//***************************************************************************             //07-03-05|0x0409
//***************************************************************************             //07-03-05|0x040a
//*******************************************************************************         //10-29-97|0x040e
//*******************************************************************************         //10-29-97|0x040e
// get_elements                                                                           //07-03-05|0x040e
//*******************************************************************************         //10-29-97|0x040e
//*******************************************************************************         //10-29-97|0x040e
UINT PRECSTACK::get_elements(void) {                                                      //07-03-05|0x040e
//*******************************************************************************         //10-29-97|0x040e
//***************************************************************************             //07-03-05|0x0411
//***************************************************************************             //07-03-05|0x0412
  UINT i;                                                                            //07-03-05|0x0413
//***************************************************************************             //07-03-05|0x0414
//***************************************************************************             //07-03-05|0x0415
    if(ElementNoTokens > 10)                                ReturnSystemError             //07-03-05|0x0416
//---------------------------------------------------------------------------             //07-03-05|0x0417
    for(i=2; i<ElementNoTokens; ++i)                                                      //07-03-05|0x0418
      {                                                                                   //07-03-05|0x0419
        switch(SrceDictGet(ElementTokenAddr(i), StackDictAddr, i-1))                      //07-03-05|0x041a
          {                                                                               //07-03-05|0x041b
            case Success:                                              break;             //07-03-05|0x041c
            default:                                        ReturnSystemError             //07-03-05|0x041d
            }                                                                             //07-03-05|0x041e
        }                                                                                 //07-03-05|0x041f
//***************************************************************************             //07-03-05|0x0420
    return_test(get_elements_1);                                                          //07-03-05|0x0421
}                                                                                         //07-03-05|0x0422
//                                                                                        //05-24-97|0x0422
//***************************************************************************             //07-03-03|0x0425
//***************************************************************************             //07-03-03|0x0426
//******                                                               ******             //07-03-03|0x0427
//******           add_stack_level(Offset)                             ******             //07-03-03|0x0428
//******                                                               ******             //07-03-03|0x0429
//***************************************************************************             //07-03-03|0x042a
//***************************************************************************             //07-03-03|0x042b
//*******************************************************************************         //10-29-97|0x0433
//*******************************************************************************         //10-29-97|0x0433
// add_stack_level                                                                        //07-03-03|0x0433
//*******************************************************************************         //10-29-97|0x0433
//*******************************************************************************         //10-29-97|0x0433
UINT PRECSTACK::add_stack_level(                                                          //07-03-03|0x0433
    SLONG Offset                                                                          //07-03-03|0x0433
    ) {                                                                                   //07-03-03|0x0433
//*******************************************************************************         //10-29-97|0x0433
//***************************************************************************             //07-03-03|0x0436
//***************************************************************************             //07-03-03|0x0437
    if(Offset             < -8)                            ReturnSystemError;             //07-03-03|0x0438
    if(Offset             > 8)                             ReturnSystemError;             //07-03-03|0x0439
    if(StackAbsPosSlong             >= 256)                ReturnSystemError;             //07-03-03|0x043a
    if((Offset += StackAbsPosSlong) >= 256)                ReturnSystemError;             //07-03-03|0x043b
//***************************************************************************             //07-03-03|0x043c
    if(Offset == 0)                                                                       //07-03-03|0x043d
      {                                                                                   //07-03-05|0x043e
        StackAbsPosSlong = Offset;                                                        //07-03-05|0x043f
        TestSample(add_stack_level_3);                                                    //07-03-05|0x0440
        return(Zero);                                                                     //07-03-05|0x0441
        }                                                                                 //07-03-05|0x0442
//***************************************************************************             //07-03-05|0x0443
    if(Offset <  0)                                                                       //11-05-30|0x0444
      {                                                                                   //11-05-30|0x0445
        switch(CheckoutMenu("add_stack_level 2"))                _SwitchGroup             //11-05-30|0x0447
        TestSample(add_stack_level_4);                                                    //11-05-30|0x0449
        return(Minus);                                                                    //11-05-30|0x044a
        }                                                                                 //11-05-30|0x044b
//***************************************************************************             //07-03-03|0x044c
    if(Offset > StackAbsPosSlong)                                                         //07-03-03|0x044d
      {                                                                                   //07-03-03|0x044e
        StackAbsPosSlong = Offset;                                                        //07-03-03|0x044f
        TestSample(add_stack_level_1);                                                    //07-03-03|0x0450
        return(Great);                                                                    //07-03-03|0x0451
        }                                                                                 //07-03-03|0x0452
//***************************************************************************             //07-03-05|0x0453
    if(Offset == StackAbsPosSlong)                                                        //07-03-05|0x0454
      {                                                                                   //07-03-05|0x0455
        TestSample(add_stack_level_2);                                                    //07-03-05|0x0456
        return(Equal);                                                                    //07-03-05|0x0457
        }                                                                                 //07-03-05|0x0458
//***************************************************************************             //07-03-05|0x0459
    StackAbsPosSlong = Offset;                                                            //07-03-05|0x045a
    TestSample(add_stack_level_5);                                                        //07-03-05|0x045b
    return(Less);                                                                         //07-03-05|0x045c
}                                                                                         //07-03-05|0x045d
//                                                                                        //05-24-97|0x045d
//***************************************************************************             //07-03-03|0x0460
//***************************************************************************             //07-03-03|0x0461
//******                                                               ******             //07-03-03|0x0462
//******           copy_string(Output, Input)                          ******             //07-03-03|0x0463
//******                                                               ******             //07-03-03|0x0464
//***************************************************************************             //07-03-03|0x0465
//***************************************************************************             //07-03-03|0x0466
//*******************************************************************************         //10-29-97|0x046b
//*******************************************************************************         //10-29-97|0x046b
// copy_string                                                                            //07-03-03|0x046b
//*******************************************************************************         //10-29-97|0x046b
//*******************************************************************************         //10-29-97|0x046b
UINT PRECSTACK::copy_string(                                                              //07-03-03|0x046b
    STRING_DATA_FAR StringAddr,                                                           //07-03-03|0x046b
    STRING_DATA_FAR InputAddr                                                             //07-03-03|0x046b
    ) {                                                                                   //07-03-03|0x046b
//*******************************************************************************         //10-29-97|0x046b
//***************************************************************************             //07-03-03|0x046e
//***************************************************************************             //07-03-03|0x046f
  WORDS size;                                                                        //07-03-03|0x0470
//***************************************************************************             //07-03-03|0x0471
    size.ulong  = InputLength;                                                            //07-03-03|0x0472
    if(size.ulong ==  0)                                    ReturnSystemError             //07-03-03|0x0473
    if(size.ulong >   256)                                  ReturnSystemError             //07-03-03|0x0474
    if(InputChar(size.ulong) != 0)                          ReturnSystemError             //07-03-03|0x0475
    if(size.ulong != StrLen(InputLineAddr))                 ReturnSystemError             //07-03-03|0x0476
//***************************************************************************             //07-03-03|0x0477
    MemCpy(StringAddr, InputAddr, sizeof(STRING_DATA));                                   //07-03-03|0x0478
    TestSample(copy_string_1);                                                            //07-03-03|0x0479
    return(Success);                                                                      //07-03-03|0x047a
}                                                                                         //07-03-03|0x047b
//                                                                                        //05-24-97|0x047b
//***************************************************************************             //07-03-05|0x047e
//***************************************************************************             //07-03-05|0x047f
//******                                                               ******             //07-03-05|0x0480
//******           test_string(Output, Input)                          ******             //07-03-05|0x0481
//******                                                               ******             //07-03-05|0x0482
//***************************************************************************             //07-03-05|0x0483
//***************************************************************************             //07-03-05|0x0484
//*******************************************************************************         //10-29-97|0x048a
//*******************************************************************************         //10-29-97|0x048a
// test_string                                                                            //07-03-05|0x048a
//*******************************************************************************         //10-29-97|0x048a
//*******************************************************************************         //10-29-97|0x048a
UINT PRECSTACK::test_string(                                                              //07-03-05|0x048a
    STRING_DATA_FAR StringAddr,                                                           //07-03-05|0x048a
    STRING_DATA_FAR InputAddr                                                             //07-03-05|0x048a
    ) {                                                                                   //07-03-05|0x048a
//*******************************************************************************         //10-29-97|0x048a
//***************************************************************************             //07-03-05|0x048d
//***************************************************************************             //07-03-05|0x048e
  WORDS size;                                                                        //07-03-05|0x048f
//***************************************************************************             //07-03-05|0x0490
    size.ulong  = InputLength;                                                            //07-03-05|0x0491
    if(size.ulong ==  0)                                    ReturnSystemError             //07-03-05|0x0492
    if(size.ulong >   256)                                  ReturnSystemError             //07-03-05|0x0493
    if(InputChar(size.ulong) != 0)                          ReturnSystemError             //07-03-05|0x0494
    if(size.ulong != StrLen(InputLineAddr))                 ReturnSystemError             //07-03-05|0x0495
//***************************************************************************             //07-03-05|0x0496
    switch(StrCmp(StringLineAddr, InputLineAddr))                                         //11-05-30|0x0497
      {                                                                                   //11-05-30|0x0498
        case 0:                                    return_yes(test_string_1);             //11-05-30|0x0499
        case 1:                                                                           //11-05-30|0x049a
        case -1:                                    return_no(test_string_2);             //11-05-30|0x049b
        default:                                            ReturnSystemError             //11-05-30|0x049c
        }                                                                                 //11-05-30|0x049d
}                                                                                         //07-03-05|0x049e
//                                                                                        //05-24-97|0x049e
//***************************************************************************             //04-09-06|0x04a1
//***************************************************************************             //04-09-06|0x04a2
//******                                                               ******             //04-09-06|0x04a3
//******                       TEST WRAPPERS                           ******             //04-09-06|0x04a4
//******                                                               ******             //04-09-06|0x04a5
//***************************************************************************             //04-09-06|0x04a6
//***************************************************************************             //04-09-06|0x04a7
//*******************************************************************************         //10-29-97|0x04a8
//*******************************************************************************         //10-29-97|0x04a8
// precstck_test_reset                                                                    //04-10-05|0x04a8
//*******************************************************************************         //10-29-97|0x04a8
//*******************************************************************************         //10-29-97|0x04a8
UINT PRECSTACK::precstck_test_reset(void) {                                               //04-10-05|0x04a8
//*******************************************************************************         //10-29-97|0x04a8
//************************************************************************                //04-10-05|0x04a8
    switch(BasicTestReset())                                                              //04-10-05|0x04a8
      {                                                                                   //04-10-05|0x04a8
        case Success:                                     return(Success);                //04-10-05|0x04a8
        default:                                        ReturnSystemError;                //04-10-05|0x04a8
        }                                                                                 //04-10-05|0x04a8
}                                                                                         //04-10-05|0x04a8
//                                                                                        //05-24-97|0x04a8
//***************************************************************************             //04-10-05|0x04a9
//*******************************************************************************         //10-29-97|0x04aa
//*******************************************************************************         //10-29-97|0x04aa
// precstck_test_read                                                                     //04-09-27|0x04aa
//*******************************************************************************         //10-29-97|0x04aa
//*******************************************************************************         //10-29-97|0x04aa
UINT PRECSTACK::precstck_test_read(void) {                                                //04-09-27|0x04aa
//*******************************************************************************         //10-29-97|0x04aa
//************************************************************************                //04-09-27|0x04aa
    switch(BasicTestRead(&test_samples[0], test_samples[0]))                              //04-09-27|0x04aa
      {                                                                                   //04-09-27|0x04aa
        case Success:                                     return(Success);                //04-09-27|0x04aa
        default:                                        ReturnSystemError;                //04-09-27|0x04aa
        }                                                                                 //04-09-27|0x04aa
}                                                                                         //04-09-27|0x04aa
//                                                                                        //05-24-97|0x04aa
//***************************************************************************             //04-09-06|0x04ab
//*******************************************************************************         //10-29-97|0x04ac
//*******************************************************************************         //10-29-97|0x04ac
// precstck_test_write                                                                    //04-09-27|0x04ac
//*******************************************************************************         //10-29-97|0x04ac
//*******************************************************************************         //10-29-97|0x04ac
UINT PRECSTACK::precstck_test_write(void) {                                               //04-09-27|0x04ac
//*******************************************************************************         //10-29-97|0x04ac
//************************************************************************                //04-09-27|0x04ac
    switch(BasicTestWrite(&test_samples[0]))                                              //04-09-27|0x04ac
      {                                                                                   //04-09-27|0x04ac
        case Success:                                     return(Success);                //04-09-27|0x04ac
        default:                                        ReturnSystemError;                //04-09-27|0x04ac
        }                                                                                 //04-09-27|0x04ac
}                                                                                         //04-09-27|0x04ac
//                                                                                        //05-24-97|0x04ac
//***************************************************************************             //04-09-06|0x04ad
//*******************************************************************************         //10-29-97|0x04ae
//*******************************************************************************         //10-29-97|0x04ae
// precstck_test_report                                                                   //04-09-27|0x04ae
//*******************************************************************************         //10-29-97|0x04ae
//*******************************************************************************         //10-29-97|0x04ae
UINT PRECSTACK::precstck_test_report(void) {                                              //04-09-27|0x04ae
//*******************************************************************************         //10-29-97|0x04ae
//************************************************************************                //04-09-27|0x04ae
    switch(BasicTestReport(&test_samples[0], "PRECSTCK"))                                 //04-09-27|0x04ae
      {                                                                                   //04-09-27|0x04ae
        case Success:                                     return(Success);                //04-09-27|0x04ae
        default:                                        ReturnSystemError;                //04-09-27|0x04ae
        }                                                                                 //04-09-27|0x04ae
}                                                                                         //04-09-27|0x04ae
//                                                                                        //05-24-97|0x04ae
//***************************************************************************             //04-09-06|0x04af
//***************************************************************************             //04-09-06|0x04b0
//******                                                               ******             //04-09-06|0x04b1
//******                        constructor                            ******             //04-09-06|0x04b2
//******                                                               ******             //04-09-06|0x04b3
//***************************************************************************             //04-09-06|0x04b4
//***************************************************************************             //04-09-06|0x04b5
//*******************************************************************************         //10-29-97|0x04b6
//*******************************************************************************         //10-29-97|0x04b6
// CONSTRUCTOR                                                                            //05-14-97|0x04b6
//*******************************************************************************         //10-29-97|0x04b6
//*******************************************************************************         //10-29-97|0x04b6
PRECSTACK::PRECSTACK() {                                                                  //05-14-97|0x04b6
//***************************************************************************             //04-10-05|0x04b7
//***************************************************************************             //04-10-05|0x04b8
    { ULONG i;                                                                            //04-10-05|0x04b9
      test_samples[NoTestSamples] = TestIndex;                                            //04-10-05|0x04b9
      i = 1;                                                                              //04-10-05|0x04b9
      while(i<TestIndex)                                                                  //04-10-05|0x04b9
        {                                                                                 //04-10-05|0x04b9
          test_samples[i] = 0;                                                            //04-10-05|0x04b9
          ++i;                                                                            //04-10-05|0x04b9
          }                                                                               //04-10-05|0x04b9
      }                                                                                   //04-10-05|0x04b9
//***************************************************************************             //04-10-05|0x04ba
    stack_addr  = 0;                                                                      //06-07-12|0x04bb
}                                                                                         //05-14-97|0x04bc
//                                                                                        //05-24-97|0x04bc
//*******************************************************************************         //05-24-97|0x04be
//*******************************************************************************         //05-24-97|0x04be
//****                       END OF FILE                                     ****         //05-24-97|0x04be
//*******************************************************************************         //05-24-97|0x04be
//*******************************************************************************         //05-24-97|0x04be
